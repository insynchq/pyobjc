#             GENERATED FILE DO NOT EDIT
#
# This file was generated by objective.metadata
# Last update: Thu Feb  9 17:15:47 2012
{
 "arch": "i386", 
 "definitions": {
  "aliases": {}, 
  "called_definitions": {}, 
  "cftypes": {
   "CFHTTPMessageRef": {
    "gettypeid_func": "CFHTTPMessageGetTypeID", 
    "typestr": "^{__CFHTTPMessage=}"
   }, 
   "CFHostRef": {
    "gettypeid_func": "CFHostGetTypeID", 
    "typestr": "^{__CFHost=}"
   }, 
   "CFNetDiagnosticRef": {
    "typestr": "^{__CFNetDiagnostic=}"
   }, 
   "CFNetServiceBrowserRef": {
    "gettypeid_func": "CFNetServiceBrowserGetTypeID", 
    "typestr": "^{__CFNetServiceBrowser=}"
   }, 
   "CFNetServiceMonitorRef": {
    "gettypeid_func": "CFNetServiceMonitorGetTypeID", 
    "typestr": "^{__CFNetServiceMonitor=}"
   }, 
   "CFNetServiceRef": {
    "gettypeid_func": "CFNetServiceGetTypeID", 
    "typestr": "^{__CFNetService=}"
   }
  }, 
  "classes": {}, 
  "enum": {
   "kCFErrorHTTPAuthenticationTypeUnsupported": 300, 
   "kCFErrorHTTPBadCredentials": 301, 
   "kCFErrorHTTPBadProxyCredentials": 307, 
   "kCFErrorHTTPBadURL": 305, 
   "kCFErrorHTTPConnectionLost": 302, 
   "kCFErrorHTTPParseFailure": 303, 
   "kCFErrorHTTPProxyConnectionFailure": 306, 
   "kCFErrorHTTPRedirectionLoopDetected": 304, 
   "kCFErrorHTTPSProxyConnectionFailure": 310, 
   "kCFErrorPACFileAuth": 309, 
   "kCFErrorPACFileError": 308, 
   "kCFFTPErrorUnexpectedStatusCode": 200, 
   "kCFHTTPCookieCannotParseCookieFile": -4000, 
   "kCFHostAddresses": 0, 
   "kCFHostErrorHostNotFound": 1, 
   "kCFHostErrorUnknown": 2, 
   "kCFHostNames": 1, 
   "kCFHostReachability": 2, 
   "kCFNetDiagnosticConnectionDown": -66557, 
   "kCFNetDiagnosticConnectionIndeterminate": -66558, 
   "kCFNetDiagnosticConnectionUp": -66559, 
   "kCFNetDiagnosticErr": -66560, 
   "kCFNetDiagnosticNoErr": 0, 
   "kCFNetServiceErrorBadArgument": -72004, 
   "kCFNetServiceErrorCancel": -72005, 
   "kCFNetServiceErrorCollision": -72001, 
   "kCFNetServiceErrorDNSServiceFailure": -73000, 
   "kCFNetServiceErrorInProgress": -72003, 
   "kCFNetServiceErrorInvalid": -72006, 
   "kCFNetServiceErrorNotFound": -72002, 
   "kCFNetServiceErrorTimeout": -72007, 
   "kCFNetServiceErrorUnknown": -72000, 
   "kCFNetServiceFlagIsDefault": 4, 
   "kCFNetServiceFlagIsDomain": 2, 
   "kCFNetServiceFlagIsRegistrationDomain": 4, 
   "kCFNetServiceFlagMoreComing": 1, 
   "kCFNetServiceFlagNoAutoRename": 1, 
   "kCFNetServiceFlagRemove": 8, 
   "kCFNetServiceMonitorTXT": 1, 
   "kCFNetServicesErrorBadArgument": -72004, 
   "kCFNetServicesErrorCancel": -72005, 
   "kCFNetServicesErrorCollision": -72001, 
   "kCFNetServicesErrorInProgress": -72003, 
   "kCFNetServicesErrorInvalid": -72006, 
   "kCFNetServicesErrorNotFound": -72002, 
   "kCFNetServicesErrorTimeout": -72007, 
   "kCFNetServicesErrorUnknown": -72000, 
   "kCFSOCKS4ErrorIdConflict": 112, 
   "kCFSOCKS4ErrorIdentdFailed": 111, 
   "kCFSOCKS4ErrorRequestFailed": 110, 
   "kCFSOCKS4ErrorUnknownStatusCode": 113, 
   "kCFSOCKS5ErrorBadCredentials": 122, 
   "kCFSOCKS5ErrorBadResponseAddr": 121, 
   "kCFSOCKS5ErrorBadState": 120, 
   "kCFSOCKS5ErrorNoAcceptableMethod": 124, 
   "kCFSOCKS5ErrorUnsupportedNegotiationMethod": 123, 
   "kCFSOCKSErrorUnknownClientVersion": 100, 
   "kCFSOCKSErrorUnsupportedServerVersion": 101, 
   "kCFStreamErrorHTTPAuthenticationBadPassword": -1002, 
   "kCFStreamErrorHTTPAuthenticationBadUserName": -1001, 
   "kCFStreamErrorHTTPAuthenticationTypeUnsupported": -1000, 
   "kCFStreamErrorHTTPBadURL": -3, 
   "kCFStreamErrorHTTPParseFailure": -1, 
   "kCFStreamErrorHTTPRedirectionLoop": -2, 
   "kCFStreamErrorSOCKS4IdConflict": 93, 
   "kCFStreamErrorSOCKS4IdentdFailed": 92, 
   "kCFStreamErrorSOCKS4RequestFailed": 91, 
   "kCFStreamErrorSOCKS4SubDomainResponse": 2, 
   "kCFStreamErrorSOCKS5BadResponseAddr": 1, 
   "kCFStreamErrorSOCKS5BadState": 2, 
   "kCFStreamErrorSOCKS5SubDomainMethod": 4, 
   "kCFStreamErrorSOCKS5SubDomainResponse": 5, 
   "kCFStreamErrorSOCKS5SubDomainUserPass": 3, 
   "kCFStreamErrorSOCKSSubDomainNone": 0, 
   "kCFStreamErrorSOCKSSubDomainVersionCode": 1, 
   "kCFStreamErrorSOCKSUnknownClientVersion": 3, 
   "kCFStreamSocketSecurityNone": 0, 
   "kCFStreamSocketSecuritySSLv2": 1, 
   "kCFStreamSocketSecuritySSLv23": 3, 
   "kCFStreamSocketSecuritySSLv3": 2, 
   "kCFStreamSocketSecurityTLSv1": 4, 
   "kCFURLErrorBadServerResponse": -1011, 
   "kCFURLErrorBadURL": -1000, 
   "kCFURLErrorCallIsActive": -1019, 
   "kCFURLErrorCancelled": -999, 
   "kCFURLErrorCannotCloseFile": -3002, 
   "kCFURLErrorCannotConnectToHost": -1004, 
   "kCFURLErrorCannotCreateFile": -3000, 
   "kCFURLErrorCannotDecodeContentData": -1016, 
   "kCFURLErrorCannotDecodeRawData": -1015, 
   "kCFURLErrorCannotFindHost": -1003, 
   "kCFURLErrorCannotLoadFromNetwork": -2000, 
   "kCFURLErrorCannotMoveFile": -3005, 
   "kCFURLErrorCannotOpenFile": -3001, 
   "kCFURLErrorCannotParseResponse": -1017, 
   "kCFURLErrorCannotRemoveFile": -3004, 
   "kCFURLErrorCannotWriteToFile": -3003, 
   "kCFURLErrorClientCertificateRejected": -1205, 
   "kCFURLErrorClientCertificateRequired": -1206, 
   "kCFURLErrorDNSLookupFailed": -1006, 
   "kCFURLErrorDataLengthExceedsMaximum": -1103, 
   "kCFURLErrorDataNotAllowed": -1020, 
   "kCFURLErrorDownloadDecodingFailedMidStream": -3006, 
   "kCFURLErrorDownloadDecodingFailedToComplete": -3007, 
   "kCFURLErrorFileDoesNotExist": -1100, 
   "kCFURLErrorFileIsDirectory": -1101, 
   "kCFURLErrorHTTPTooManyRedirects": -1007, 
   "kCFURLErrorInternationalRoamingOff": -1018, 
   "kCFURLErrorNetworkConnectionLost": -1005, 
   "kCFURLErrorNoPermissionsToReadFile": -1102, 
   "kCFURLErrorNotConnectedToInternet": -1009, 
   "kCFURLErrorRedirectToNonExistentLocation": -1010, 
   "kCFURLErrorRequestBodyStreamExhausted": -1021, 
   "kCFURLErrorResourceUnavailable": -1008, 
   "kCFURLErrorSecureConnectionFailed": -1200, 
   "kCFURLErrorServerCertificateHasBadDate": -1201, 
   "kCFURLErrorServerCertificateHasUnknownRoot": -1203, 
   "kCFURLErrorServerCertificateNotYetValid": -1204, 
   "kCFURLErrorServerCertificateUntrusted": -1202, 
   "kCFURLErrorTimedOut": -1001, 
   "kCFURLErrorUnknown": -998, 
   "kCFURLErrorUnsupportedURL": -1002, 
   "kCFURLErrorUserAuthenticationRequired": -1013, 
   "kCFURLErrorUserCancelledAuthentication": -1012, 
   "kCFURLErrorZeroByteResource": -1014, 
   "kSOCKS5NoAcceptableMethod": 255
  }, 
  "externs": {
   "kCFDNSServiceFailureKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFErrorDomainCFNetwork": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFErrorDomainWinSock": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFFTPResourceGroup": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFFTPResourceLink": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFFTPResourceModDate": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFFTPResourceMode": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFFTPResourceName": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFFTPResourceOwner": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFFTPResourceSize": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFFTPResourceType": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFFTPStatusCodeKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFGetAddrInfoFailureKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFHTTPAuthenticationAccountDomain": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFHTTPAuthenticationPassword": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFHTTPAuthenticationSchemeBasic": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFHTTPAuthenticationSchemeDigest": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFHTTPAuthenticationSchemeKerberos": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFHTTPAuthenticationSchemeNTLM": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFHTTPAuthenticationSchemeNegotiate": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFHTTPAuthenticationSchemeNegotiate2": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFHTTPAuthenticationSchemeXMobileMeAuthToken": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFHTTPAuthenticationUsername": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFHTTPVersion1_0": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFHTTPVersion1_1": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesExceptionsList": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesExcludeSimpleHostnames": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesFTPEnable": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesFTPPassive": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesFTPPort": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesFTPProxy": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesGopherEnable": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesGopherPort": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesGopherProxy": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesHTTPEnable": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesHTTPPort": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesHTTPProxy": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesHTTPSEnable": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesHTTPSPort": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesHTTPSProxy": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesProxyAutoConfigEnable": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesProxyAutoConfigJavaScript": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesProxyAutoConfigURLString": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesProxyAutoDiscoveryEnable": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesRTSPEnable": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesRTSPPort": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesRTSPProxy": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesSOCKSEnable": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesSOCKSPort": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNetworkProxiesSOCKSProxy": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFProxyAutoConfigurationHTTPResponseKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFProxyAutoConfigurationJavaScriptKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFProxyAutoConfigurationURLKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFProxyHostNameKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFProxyPasswordKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFProxyPortNumberKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFProxyTypeAutoConfigurationJavaScript": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFProxyTypeAutoConfigurationURL": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFProxyTypeFTP": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFProxyTypeHTTP": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFProxyTypeHTTPS": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFProxyTypeKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFProxyTypeNone": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFProxyTypeSOCKS": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFProxyUsernameKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFSOCKSNegotiationMethodKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFSOCKSStatusCodeKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFSOCKSVersionKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamErrorDomainFTP": {
    "typestr": "l"
   }, 
   "kCFStreamErrorDomainHTTP": {
    "typestr": "l"
   }, 
   "kCFStreamErrorDomainMach": {
    "typestr": "l"
   }, 
   "kCFStreamErrorDomainNetDB": {
    "typestr": "l"
   }, 
   "kCFStreamErrorDomainNetServices": {
    "typestr": "l"
   }, 
   "kCFStreamErrorDomainSOCKS": {
    "typestr": "i"
   }, 
   "kCFStreamErrorDomainSSL": {
    "typestr": "i"
   }, 
   "kCFStreamErrorDomainSystemConfiguration": {
    "typestr": "l"
   }, 
   "kCFStreamErrorDomainWinSock": {
    "typestr": "l"
   }, 
   "kCFStreamNetworkServiceType": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamNetworkServiceTypeBackground": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamNetworkServiceTypeVideo": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamNetworkServiceTypeVoIP": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamNetworkServiceTypeVoice": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyFTPAttemptPersistentConnection": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyFTPFetchResourceInfo": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyFTPFileTransferOffset": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyFTPPassword": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyFTPProxy": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyFTPProxyHost": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyFTPProxyPassword": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyFTPProxyPort": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyFTPProxyUser": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyFTPResourceSize": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyFTPUsePassiveMode": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyFTPUserName": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyHTTPAttemptPersistentConnection": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyHTTPFinalRequest": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyHTTPFinalURL": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyHTTPProxy": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyHTTPProxyHost": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyHTTPProxyPort": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyHTTPRequestBytesWrittenCount": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyHTTPResponseHeader": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyHTTPSProxyHost": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyHTTPSProxyPort": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyHTTPShouldAutoredirect": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyProxyLocalBypass": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertySOCKSPassword": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertySOCKSProxy": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertySOCKSProxyHost": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertySOCKSProxyPort": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertySOCKSUser": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertySOCKSVersion": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertySSLPeerCertificates": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertySSLPeerTrust": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertySSLSettings": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyShouldCloseNativeSocket": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertySocketRemoteHost": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertySocketRemoteNetService": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertySocketSecurityLevel": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamSSLAllowsAnyRoot": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamSSLAllowsExpiredCertificates": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamSSLAllowsExpiredRoots": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamSSLCertificates": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamSSLIsServer": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamSSLLevel": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamSSLPeerName": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamSSLValidatesCertificateChain": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamSocketSOCKSVersion4": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamSocketSOCKSVersion5": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamSocketSecurityLevelNegotiatedSSL": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamSocketSecurityLevelNone": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamSocketSecurityLevelSSLv2": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamSocketSecurityLevelSSLv3": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamSocketSecurityLevelTLSv1": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLErrorFailingURLErrorKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLErrorFailingURLStringErrorKey": {
    "typestr": "^{__CFString=}"
   }
  }, 
  "formal_protocols": {}, 
  "func_macros": {}, 
  "functions": {
   "CFFTPCreateParsedResourceListing": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "buffer", 
      "typestr": "^C"
     }, 
     {
      "name": "bufferLength", 
      "typestr": "l"
     }, 
     {
      "name": "parsed", 
      "typestr": "^^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFHTTPAuthenticationAppliesToRequest": {
    "args": [
     {
      "name": "auth", 
      "typestr": "^{_CFHTTPAuthentication=}"
     }, 
     {
      "name": "request", 
      "typestr": "^{__CFHTTPMessage=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFHTTPAuthenticationCopyDomains": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "auth", 
      "typestr": "^{_CFHTTPAuthentication=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFHTTPAuthenticationCopyMethod": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "auth", 
      "typestr": "^{_CFHTTPAuthentication=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFHTTPAuthenticationCopyRealm": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "auth", 
      "typestr": "^{_CFHTTPAuthentication=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFHTTPAuthenticationCreateFromResponse": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "response", 
      "typestr": "^{__CFHTTPMessage=}"
     }
    ], 
    "retval": {
     "typestr": "^{_CFHTTPAuthentication=}"
    }
   }, 
   "CFHTTPAuthenticationGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFHTTPAuthenticationIsValid": {
    "args": [
     {
      "name": "auth", 
      "typestr": "^{_CFHTTPAuthentication=}"
     }, 
     {
      "name": "error", 
      "typestr": "^{_CFStreamError=ll}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFHTTPAuthenticationRequiresAccountDomain": {
    "args": [
     {
      "name": "auth", 
      "typestr": "^{_CFHTTPAuthentication=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFHTTPAuthenticationRequiresOrderedRequests": {
    "args": [
     {
      "name": "auth", 
      "typestr": "^{_CFHTTPAuthentication=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFHTTPAuthenticationRequiresUserNameAndPassword": {
    "args": [
     {
      "name": "auth", 
      "typestr": "^{_CFHTTPAuthentication=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFHTTPMessageAddAuthentication": {
    "args": [
     {
      "name": "request", 
      "typestr": "^{__CFHTTPMessage=}"
     }, 
     {
      "name": "authenticationFailureResponse", 
      "typestr": "^{__CFHTTPMessage=}"
     }, 
     {
      "name": "username", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "password", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "authenticationScheme", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "forProxy", 
      "typestr": "Z"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFHTTPMessageAppendBytes": {
    "args": [
     {
      "name": "message", 
      "typestr": "^{__CFHTTPMessage=}"
     }, 
     {
      "name": "newBytes", 
      "typestr": "^C"
     }, 
     {
      "name": "numBytes", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFHTTPMessageApplyCredentialDictionary": {
    "args": [
     {
      "name": "request", 
      "typestr": "^{__CFHTTPMessage=}"
     }, 
     {
      "name": "auth", 
      "typestr": "^{_CFHTTPAuthentication=}"
     }, 
     {
      "name": "dict", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "error", 
      "typestr": "^{_CFStreamError=ll}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFHTTPMessageApplyCredentials": {
    "args": [
     {
      "name": "request", 
      "typestr": "^{__CFHTTPMessage=}"
     }, 
     {
      "name": "auth", 
      "typestr": "^{_CFHTTPAuthentication=}"
     }, 
     {
      "name": "username", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "password", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "error", 
      "typestr": "^{_CFStreamError=ll}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFHTTPMessageCopyAllHeaderFields": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "message", 
      "typestr": "^{__CFHTTPMessage=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CFHTTPMessageCopyBody": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "message", 
      "typestr": "^{__CFHTTPMessage=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFData=}"
    }
   }, 
   "CFHTTPMessageCopyHeaderFieldValue": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "message", 
      "typestr": "^{__CFHTTPMessage=}"
     }, 
     {
      "name": "headerField", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFHTTPMessageCopyRequestMethod": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "request", 
      "typestr": "^{__CFHTTPMessage=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFHTTPMessageCopyRequestURL": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "request", 
      "typestr": "^{__CFHTTPMessage=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFHTTPMessageCopyResponseStatusLine": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "response", 
      "typestr": "^{__CFHTTPMessage=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFHTTPMessageCopySerializedMessage": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "request", 
      "typestr": "^{__CFHTTPMessage=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFData=}"
    }
   }, 
   "CFHTTPMessageCopyVersion": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "message", 
      "typestr": "^{__CFHTTPMessage=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFHTTPMessageCreateCopy": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "message", 
      "typestr": "^{__CFHTTPMessage=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFHTTPMessage=}"
    }
   }, 
   "CFHTTPMessageCreateEmpty": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "isRequest", 
      "typestr": "Z"
     }
    ], 
    "retval": {
     "typestr": "^{__CFHTTPMessage=}"
    }
   }, 
   "CFHTTPMessageCreateRequest": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "requestMethod", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "httpVersion", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFHTTPMessage=}"
    }
   }, 
   "CFHTTPMessageCreateResponse": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "statusCode", 
      "typestr": "l"
     }, 
     {
      "name": "statusDescription", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "httpVersion", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFHTTPMessage=}"
    }
   }, 
   "CFHTTPMessageGetResponseStatusCode": {
    "args": [
     {
      "name": "response", 
      "typestr": "^{__CFHTTPMessage=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFHTTPMessageGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFHTTPMessageIsHeaderComplete": {
    "args": [
     {
      "name": "message", 
      "typestr": "^{__CFHTTPMessage=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFHTTPMessageIsRequest": {
    "args": [
     {
      "name": "message", 
      "typestr": "^{__CFHTTPMessage=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFHTTPMessageSetBody": {
    "args": [
     {
      "name": "message", 
      "typestr": "^{__CFHTTPMessage=}"
     }, 
     {
      "name": "bodyData", 
      "typestr": "^{__CFData=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFHTTPMessageSetHeaderFieldValue": {
    "args": [
     {
      "name": "message", 
      "typestr": "^{__CFHTTPMessage=}"
     }, 
     {
      "name": "headerField", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "value", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFHTTPReadStreamSetProxy": {
    "args": [
     {
      "name": "httpStream", 
      "typestr": "^{__CFReadStream=}"
     }, 
     {
      "name": "proxyHost", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "proxyPort", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFHTTPReadStreamSetRedirectsAutomatically": {
    "args": [
     {
      "name": "httpStream", 
      "typestr": "^{__CFReadStream=}"
     }, 
     {
      "name": "shouldAutoRedirect", 
      "typestr": "Z"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFHostCancelInfoResolution": {
    "args": [
     {
      "name": "theHost", 
      "typestr": "^{__CFHost=}"
     }, 
     {
      "name": "info", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFHostCreateCopy": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "host", 
      "typestr": "^{__CFHost=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFHost=}"
    }
   }, 
   "CFHostCreateWithAddress": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "addr", 
      "typestr": "^{__CFData=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFHost=}"
    }
   }, 
   "CFHostCreateWithName": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "hostname", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFHost=}"
    }
   }, 
   "CFHostGetAddressing": {
    "args": [
     {
      "name": "theHost", 
      "typestr": "^{__CFHost=}"
     }, 
     {
      "name": "hasBeenResolved", 
      "typestr": "^Z"
     }
    ], 
    "retval": {
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFHostGetNames": {
    "args": [
     {
      "name": "theHost", 
      "typestr": "^{__CFHost=}"
     }, 
     {
      "name": "hasBeenResolved", 
      "typestr": "^Z"
     }
    ], 
    "retval": {
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFHostGetReachability": {
    "args": [
     {
      "name": "theHost", 
      "typestr": "^{__CFHost=}"
     }, 
     {
      "name": "hasBeenResolved", 
      "typestr": "^Z"
     }
    ], 
    "retval": {
     "typestr": "^{__CFData=}"
    }
   }, 
   "CFHostGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFHostScheduleWithRunLoop": {
    "args": [
     {
      "name": "theHost", 
      "typestr": "^{__CFHost=}"
     }, 
     {
      "name": "runLoop", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "runLoopMode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFHostSetClient": {
    "args": [
     {
      "name": "theHost", 
      "typestr": "^{__CFHost=}"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CFHost=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "i", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{_CFStreamError=ll}", 
          true
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "clientCB", 
      "typestr": "^?"
     }, 
     {
      "name": "clientContext", 
      "typestr": "^{CFHostClientContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFHostStartInfoResolution": {
    "args": [
     {
      "name": "theHost", 
      "typestr": "^{__CFHost=}"
     }, 
     {
      "name": "info", 
      "typestr": "i"
     }, 
     {
      "name": "error", 
      "typestr": "^{_CFStreamError=ll}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFHostUnscheduleFromRunLoop": {
    "args": [
     {
      "name": "theHost", 
      "typestr": "^{__CFHost=}"
     }, 
     {
      "name": "runLoop", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "runLoopMode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFNetDiagnosticCopyNetworkStatusPassively": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "details", 
      "typestr": "^{__CFNetDiagnostic=}"
     }, 
     {
      "name": "description", 
      "typestr": "^^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFNetDiagnosticCreateWithStreams": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "readStream", 
      "typestr": "^{__CFReadStream=}"
     }, 
     {
      "name": "writeStream", 
      "typestr": "^{__CFWriteStream=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFNetDiagnostic=}"
    }
   }, 
   "CFNetDiagnosticCreateWithURL": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFNetDiagnostic=}"
    }
   }, 
   "CFNetDiagnosticDiagnoseProblemInteractively": {
    "args": [
     {
      "name": "details", 
      "typestr": "^{__CFNetDiagnostic=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFNetDiagnosticSetName": {
    "args": [
     {
      "name": "details", 
      "typestr": "^{__CFNetDiagnostic=}"
     }, 
     {
      "name": "name", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFNetServiceBrowserCreate": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CFNetServiceBrowser=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "L", 
          false
         ]
        }, 
        {
         "typestr": [
          "@", 
          true
         ]
        }, 
        {
         "typestr": [
          "^{_CFStreamError=ll}", 
          true
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "clientCB", 
      "typestr": "^?"
     }, 
     {
      "name": "clientContext", 
      "typestr": "^{CFHostClientContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFNetServiceBrowser=}"
    }
   }, 
   "CFNetServiceBrowserGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFNetServiceBrowserInvalidate": {
    "args": [
     {
      "name": "browser", 
      "typestr": "^{__CFNetServiceBrowser=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFNetServiceBrowserScheduleWithRunLoop": {
    "args": [
     {
      "name": "browser", 
      "typestr": "^{__CFNetServiceBrowser=}"
     }, 
     {
      "name": "runLoop", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "runLoopMode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFNetServiceBrowserSearchForDomains": {
    "args": [
     {
      "name": "browser", 
      "typestr": "^{__CFNetServiceBrowser=}"
     }, 
     {
      "name": "registrationDomains", 
      "typestr": "Z"
     }, 
     {
      "name": "error", 
      "typestr": "^{_CFStreamError=ll}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFNetServiceBrowserSearchForServices": {
    "args": [
     {
      "name": "browser", 
      "typestr": "^{__CFNetServiceBrowser=}"
     }, 
     {
      "name": "domain", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "serviceType", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "error", 
      "typestr": "^{_CFStreamError=ll}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFNetServiceBrowserStopSearch": {
    "args": [
     {
      "name": "browser", 
      "typestr": "^{__CFNetServiceBrowser=}"
     }, 
     {
      "name": "error", 
      "typestr": "^{_CFStreamError=ll}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFNetServiceBrowserUnscheduleFromRunLoop": {
    "args": [
     {
      "name": "browser", 
      "typestr": "^{__CFNetServiceBrowser=}"
     }, 
     {
      "name": "runLoop", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "runLoopMode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFNetServiceCancel": {
    "args": [
     {
      "name": "theService", 
      "typestr": "^{__CFNetService=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFNetServiceCreate": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "domain", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "serviceType", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "name", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "port", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "^{__CFNetService=}"
    }
   }, 
   "CFNetServiceCreateCopy": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "service", 
      "typestr": "^{__CFNetService=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFNetService=}"
    }
   }, 
   "CFNetServiceCreateDictionaryWithTXTData": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "txtRecord", 
      "typestr": "^{__CFData=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CFNetServiceCreateTXTDataWithDictionary": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "keyValuePairs", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFData=}"
    }
   }, 
   "CFNetServiceGetAddressing": {
    "args": [
     {
      "name": "theService", 
      "typestr": "^{__CFNetService=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFNetServiceGetDomain": {
    "args": [
     {
      "name": "theService", 
      "typestr": "^{__CFNetService=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFNetServiceGetName": {
    "args": [
     {
      "name": "theService", 
      "typestr": "^{__CFNetService=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFNetServiceGetPortNumber": {
    "args": [
     {
      "name": "theService", 
      "typestr": "^{__CFNetService=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFNetServiceGetProtocolSpecificInformation": {
    "args": [
     {
      "name": "theService", 
      "typestr": "^{__CFNetService=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFNetServiceGetTXTData": {
    "args": [
     {
      "name": "theService", 
      "typestr": "^{__CFNetService=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFData=}"
    }
   }, 
   "CFNetServiceGetTargetHost": {
    "args": [
     {
      "name": "theService", 
      "typestr": "^{__CFNetService=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFNetServiceGetType": {
    "args": [
     {
      "name": "theService", 
      "typestr": "^{__CFNetService=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFNetServiceGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFNetServiceMonitorCreate": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "theService", 
      "typestr": "^{__CFNetService=}"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CFNetServiceMonitor=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{__CFNetService=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "i", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{__CFData=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{_CFStreamError=ll}", 
          true
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "clientCB", 
      "typestr": "^?"
     }, 
     {
      "name": "clientContext", 
      "typestr": "^{CFHostClientContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFNetServiceMonitor=}"
    }
   }, 
   "CFNetServiceMonitorGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFNetServiceMonitorInvalidate": {
    "args": [
     {
      "name": "monitor", 
      "typestr": "^{__CFNetServiceMonitor=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFNetServiceMonitorScheduleWithRunLoop": {
    "args": [
     {
      "name": "monitor", 
      "typestr": "^{__CFNetServiceMonitor=}"
     }, 
     {
      "name": "runLoop", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "runLoopMode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFNetServiceMonitorStart": {
    "args": [
     {
      "name": "monitor", 
      "typestr": "^{__CFNetServiceMonitor=}"
     }, 
     {
      "name": "recordType", 
      "typestr": "i"
     }, 
     {
      "name": "error", 
      "typestr": "^{_CFStreamError=ll}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFNetServiceMonitorStop": {
    "args": [
     {
      "name": "monitor", 
      "typestr": "^{__CFNetServiceMonitor=}"
     }, 
     {
      "name": "error", 
      "typestr": "^{_CFStreamError=ll}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFNetServiceMonitorUnscheduleFromRunLoop": {
    "args": [
     {
      "name": "monitor", 
      "typestr": "^{__CFNetServiceMonitor=}"
     }, 
     {
      "name": "runLoop", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "runLoopMode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFNetServiceRegister": {
    "args": [
     {
      "name": "theService", 
      "typestr": "^{__CFNetService=}"
     }, 
     {
      "name": "error", 
      "typestr": "^{_CFStreamError=ll}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFNetServiceRegisterWithOptions": {
    "args": [
     {
      "name": "theService", 
      "typestr": "^{__CFNetService=}"
     }, 
     {
      "name": "options", 
      "typestr": "L"
     }, 
     {
      "name": "error", 
      "typestr": "^{_CFStreamError=ll}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFNetServiceResolve": {
    "args": [
     {
      "name": "theService", 
      "typestr": "^{__CFNetService=}"
     }, 
     {
      "name": "error", 
      "typestr": "^{_CFStreamError=ll}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFNetServiceResolveWithTimeout": {
    "args": [
     {
      "name": "theService", 
      "typestr": "^{__CFNetService=}"
     }, 
     {
      "name": "timeout", 
      "typestr": "d"
     }, 
     {
      "name": "error", 
      "typestr": "^{_CFStreamError=ll}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFNetServiceScheduleWithRunLoop": {
    "args": [
     {
      "name": "theService", 
      "typestr": "^{__CFNetService=}"
     }, 
     {
      "name": "runLoop", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "runLoopMode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFNetServiceSetClient": {
    "args": [
     {
      "name": "theService", 
      "typestr": "^{__CFNetService=}"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CFNetService=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{_CFStreamError=ll}", 
          true
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "clientCB", 
      "typestr": "^?"
     }, 
     {
      "name": "clientContext", 
      "typestr": "^{CFHostClientContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFNetServiceSetProtocolSpecificInformation": {
    "args": [
     {
      "name": "theService", 
      "typestr": "^{__CFNetService=}"
     }, 
     {
      "name": "theInfo", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFNetServiceSetTXTData": {
    "args": [
     {
      "name": "theService", 
      "typestr": "^{__CFNetService=}"
     }, 
     {
      "name": "txtRecord", 
      "typestr": "^{__CFData=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFNetServiceUnscheduleFromRunLoop": {
    "args": [
     {
      "name": "theService", 
      "typestr": "^{__CFNetService=}"
     }, 
     {
      "name": "runLoop", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "runLoopMode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFNetworkCopyProxiesForAutoConfigurationScript": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "proxyAutoConfigurationScript", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "targetURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "already_cfretained": true, 
      "name": "error", 
      "null_accepted": true, 
      "type_modifier": "o", 
      "typestr": "^^{__CFError=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFNetworkCopyProxiesForURL": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "proxySettings", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFNetworkCopySystemProxySettings": {
    "already_cfretained": true, 
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CFNetworkExecuteProxyAutoConfigurationScript": {
    "args": [
     {
      "name": "proxyAutoConfigurationScript", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "targetURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^v", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{__CFArray=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{__CFError=}", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "cb", 
      "typestr": "^?"
     }, 
     {
      "name": "clientContext", 
      "typestr": "^{_CFStreamClientContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFRunLoopSource=}"
    }
   }, 
   "CFNetworkExecuteProxyAutoConfigurationURL": {
    "args": [
     {
      "name": "proxyAutoConfigURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "targetURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^v", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{__CFArray=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{__CFError=}", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "cb", 
      "typestr": "^?"
     }, 
     {
      "name": "clientContext", 
      "typestr": "^{_CFStreamClientContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFRunLoopSource=}"
    }
   }, 
   "CFReadStreamCreateForHTTPRequest": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "request", 
      "typestr": "^{__CFHTTPMessage=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFReadStream=}"
    }
   }, 
   "CFReadStreamCreateForStreamedHTTPRequest": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "requestHeaders", 
      "typestr": "^{__CFHTTPMessage=}"
     }, 
     {
      "name": "requestBody", 
      "typestr": "^{__CFReadStream=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFReadStream=}"
    }
   }, 
   "CFReadStreamCreateWithFTPURL": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "ftpURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFReadStream=}"
    }
   }, 
   "CFSocketStreamPairSetSecurityProtocol": {
    "args": [
     {
      "name": "socketReadStream", 
      "typestr": "^{__CFReadStream=}"
     }, 
     {
      "name": "socketWriteStream", 
      "typestr": "^{__CFWriteStream=}"
     }, 
     {
      "name": "securityProtocol", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFSocketStreamSOCKSGetError": {
    "args": [
     {
      "name": "error", 
      "typestr": "^{_CFStreamError=ll}"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFSocketStreamSOCKSGetErrorSubdomain": {
    "args": [
     {
      "name": "error", 
      "typestr": "^{_CFStreamError=ll}"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFStreamCreatePairWithSocketToCFHost": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "host", 
      "typestr": "^{__CFHost=}"
     }, 
     {
      "name": "port", 
      "typestr": "l"
     }, 
     {
      "name": "readStream", 
      "typestr": "^^{__CFReadStream=}"
     }, 
     {
      "name": "writeStream", 
      "typestr": "^^{__CFWriteStream=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFStreamCreatePairWithSocketToNetService": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "service", 
      "typestr": "^{__CFNetService=}"
     }, 
     {
      "name": "readStream", 
      "typestr": "^^{__CFReadStream=}"
     }, 
     {
      "name": "writeStream", 
      "typestr": "^^{__CFWriteStream=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFWriteStreamCreateWithFTPURL": {
    "already_cfretained": true, 
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "ftpURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFWriteStream=}"
    }
   }
  }, 
  "informal_protocols": {}, 
  "literals": {}, 
  "structs": {
   "CFHostClientContext": {
    "fieldnames": [], 
    "special": false, 
    "typestr": "{CFHostClientContext=l^v^?^?^?}"
   }, 
   "CFNetServiceClientContext": {
    "fieldnames": [], 
    "special": false, 
    "typestr": "{CFNetServiceClientContext=l^v^?^?^?}"
   }
  }
 }, 
 "framework": "CFNetwork", 
 "headers": [
  "CFFTPStream.h", 
  "CFHTTPAuthentication.h", 
  "CFHTTPMessage.h", 
  "CFHTTPStream.h", 
  "CFHost.h", 
  "CFNetDiagnostics.h", 
  "CFNetServices.h", 
  "CFNetworkErrors.h", 
  "CFProxySupport.h", 
  "CFSocketStream.h"
 ], 
 "release": "10.7.3", 
 "sdk": "/Developer/SDKs/MacOSX10.7.sdk"
}
