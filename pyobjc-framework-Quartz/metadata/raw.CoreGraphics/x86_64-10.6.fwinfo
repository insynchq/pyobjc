#             GENERATED FILE DO NOT EDIT
#
# This file was generated by objective.metadata
# Last update: Thu Mar  8 12:06:34 2012
{
 "arch": "x86_64", 
 "definitions": {
  "aliases": {
   "CGAffineTransformMake": "__CGAffineTransformMake", 
   "CGDisplayNoErr": "kCGErrorSuccess", 
   "CGEventNoErr": "kCGErrorSuccess", 
   "CGEventSupressionState": "CGEventSuppressionState", 
   "CGFLOAT_MAX": "DBL_MAX", 
   "CGFLOAT_MIN": "DBL_MIN", 
   "CGFLOAT_TYPE": "double", 
   "CGPointApplyAffineTransform": "__CGPointApplyAffineTransform", 
   "CGPointEqualToPoint": "__CGPointEqualToPoint", 
   "CGSizeApplyAffineTransform": "__CGSizeApplyAffineTransform", 
   "CGSizeEqualToSize": "__CGSizeEqualToSize", 
   "CG_AVAILABLE_BUT_DEPRECATED": "__OSX_AVAILABLE_BUT_DEPRECATED", 
   "CG_AVAILABLE_STARTING": "__OSX_AVAILABLE_STARTING", 
   "CG_LOCAL": "__private_extern__", 
   "CG_PRIVATE_EXTERN": "CG_LOCAL", 
   "kCGBitmapByteOrder16Host": "kCGBitmapByteOrder16Little", 
   "kCGBitmapByteOrder32Host": "kCGBitmapByteOrder32Little", 
   "kCGEventSupressionStateRemoteMouseDrag": "kCGEventSuppressionStateRemoteMouseDrag", 
   "kCGEventSupressionStateSupressionInterval": "kCGEventSuppressionStateSuppressionInterval", 
   "kCGNumberOfEventSupressionStates": "kCGNumberOfEventSuppressionStates", 
   "kCGWindowBackingCFNumberType": "kCFNumberSInt32Type", 
   "kCGWindowIDCFNumberType": "kCFNumberSInt32Type", 
   "kCGWindowSharingCFNumberType": "kCFNumberSInt32Type"
  }, 
  "called_definitions": {}, 
  "cftypes": {
   "CGEventRef": {
    "gettypeid_func": "CGEventGetTypeID", 
    "typestr": "^{__CGEvent=}"
   }, 
   "CGEventSourceRef": {
    "gettypeid_func": "CGEventSourceGetTypeID", 
    "typestr": "^{__CGEventSource=}"
   }, 
   "CGEventTapProxy": {
    "typestr": "^{__CGEventTapProxy=}"
   }
  }, 
  "classes": {}, 
  "enum": {
   "CGFLOAT_DEFINED": 1, 
   "CGFLOAT_IS_DOUBLE": 1, 
   "CGGlyphMax": 65534, 
   "CGGlyphMin": 0, 
   "CGPDFDataFormatJPEG2000": 2, 
   "CGPDFDataFormatJPEGEncoded": 1, 
   "CGPDFDataFormatRaw": 0, 
   "CGRectMaxXEdge": 2, 
   "CGRectMaxYEdge": 3, 
   "CGRectMinXEdge": 0, 
   "CGRectMinYEdge": 1, 
   "kCGAnnotatedSessionEventTap": 2, 
   "kCGAssistiveTechHighWindowLevelKey": 20, 
   "kCGBackingStoreBuffered": 2, 
   "kCGBackingStoreNonretained": 1, 
   "kCGBackingStoreRetained": 0, 
   "kCGBackstopMenuLevelKey": 3, 
   "kCGBaseWindowLevelKey": 0, 
   "kCGBitmapAlphaInfoMask": 31, 
   "kCGBitmapByteOrder16Big": 12288, 
   "kCGBitmapByteOrder16Little": 4096, 
   "kCGBitmapByteOrder32Big": 16384, 
   "kCGBitmapByteOrder32Little": 8192, 
   "kCGBitmapByteOrderDefault": 0, 
   "kCGBitmapByteOrderMask": 28672, 
   "kCGBitmapFloatComponents": 256, 
   "kCGBlendModeClear": 16, 
   "kCGBlendModeColor": 14, 
   "kCGBlendModeColorBurn": 7, 
   "kCGBlendModeColorDodge": 6, 
   "kCGBlendModeCopy": 17, 
   "kCGBlendModeDarken": 4, 
   "kCGBlendModeDestinationAtop": 24, 
   "kCGBlendModeDestinationIn": 22, 
   "kCGBlendModeDestinationOut": 23, 
   "kCGBlendModeDestinationOver": 21, 
   "kCGBlendModeDifference": 10, 
   "kCGBlendModeExclusion": 11, 
   "kCGBlendModeHardLight": 9, 
   "kCGBlendModeHue": 12, 
   "kCGBlendModeLighten": 5, 
   "kCGBlendModeLuminosity": 15, 
   "kCGBlendModeMultiply": 1, 
   "kCGBlendModeNormal": 0, 
   "kCGBlendModeOverlay": 3, 
   "kCGBlendModePlusDarker": 26, 
   "kCGBlendModePlusLighter": 27, 
   "kCGBlendModeSaturation": 13, 
   "kCGBlendModeScreen": 2, 
   "kCGBlendModeSoftLight": 8, 
   "kCGBlendModeSourceAtop": 20, 
   "kCGBlendModeSourceIn": 18, 
   "kCGBlendModeSourceOut": 19, 
   "kCGBlendModeXOR": 25, 
   "kCGCaptureNoFill": 1, 
   "kCGCaptureNoOptions": 0, 
   "kCGColorSpaceModelCMYK": 2, 
   "kCGColorSpaceModelDeviceN": 4, 
   "kCGColorSpaceModelIndexed": 5, 
   "kCGColorSpaceModelLab": 3, 
   "kCGColorSpaceModelMonochrome": 0, 
   "kCGColorSpaceModelPattern": 6, 
   "kCGColorSpaceModelRGB": 1, 
   "kCGColorSpaceModelUnknown": -1, 
   "kCGConfigureForAppOnly": 0, 
   "kCGConfigureForSession": 1, 
   "kCGConfigurePermanently": 2, 
   "kCGCursorWindowLevelKey": 19, 
   "kCGDesktopIconWindowLevelKey": 18, 
   "kCGDesktopWindowLevelKey": 2, 
   "kCGDisplayAddFlag": 16, 
   "kCGDisplayBeginConfigurationFlag": 1, 
   "kCGDisplayDesktopShapeChangedFlag": 4096, 
   "kCGDisplayDisabledFlag": 512, 
   "kCGDisplayEnabledFlag": 256, 
   "kCGDisplayFadeReservationInvalidToken": 0, 
   "kCGDisplayMirrorFlag": 1024, 
   "kCGDisplayMovedFlag": 2, 
   "kCGDisplayRemoveFlag": 32, 
   "kCGDisplaySetMainFlag": 4, 
   "kCGDisplaySetModeFlag": 8, 
   "kCGDisplayUnMirrorFlag": 2048, 
   "kCGDockWindowLevelKey": 7, 
   "kCGDraggingWindowLevelKey": 12, 
   "kCGEncodingFontSpecific": 0, 
   "kCGEncodingMacRoman": 1, 
   "kCGErrorApplicationAlreadyRunning": 1025, 
   "kCGErrorApplicationCanOnlyBeRunInOneSessionAtATime": 1026, 
   "kCGErrorApplicationIncorrectExecutableFormatFound": 1023, 
   "kCGErrorApplicationIsLaunching": 1024, 
   "kCGErrorApplicationNotPermittedToExecute": 1016, 
   "kCGErrorApplicationRequiresNewerSystem": 1015, 
   "kCGErrorCannotComplete": 1004, 
   "kCGErrorClassicApplicationsMustBeLaunchedByClassic": 1027, 
   "kCGErrorFailure": 1000, 
   "kCGErrorFirst": 1000, 
   "kCGErrorForkFailed": 1028, 
   "kCGErrorIllegalArgument": 1001, 
   "kCGErrorInvalidConnection": 1002, 
   "kCGErrorInvalidContext": 1003, 
   "kCGErrorInvalidOperation": 1010, 
   "kCGErrorLast": 1029, 
   "kCGErrorNameTooLong": 1005, 
   "kCGErrorNoCurrentPoint": 1009, 
   "kCGErrorNoneAvailable": 1011, 
   "kCGErrorNotImplemented": 1006, 
   "kCGErrorRangeCheck": 1007, 
   "kCGErrorRetryRegistration": 1029, 
   "kCGErrorSuccess": 0, 
   "kCGErrorTypeCheck": 1008, 
   "kCGEventFilterMaskPermitLocalKeyboardEvents": 2, 
   "kCGEventFilterMaskPermitLocalMouseEvents": 1, 
   "kCGEventFilterMaskPermitSystemDefinedEvents": 4, 
   "kCGEventFlagMaskAlphaShift": 65536, 
   "kCGEventFlagMaskAlternate": 524288, 
   "kCGEventFlagMaskCommand": 1048576, 
   "kCGEventFlagMaskControl": 262144, 
   "kCGEventFlagMaskHelp": 4194304, 
   "kCGEventFlagMaskNonCoalesced": 256, 
   "kCGEventFlagMaskNumericPad": 2097152, 
   "kCGEventFlagMaskSecondaryFn": 8388608, 
   "kCGEventFlagMaskShift": 131072, 
   "kCGEventFlagsChanged": 12, 
   "kCGEventKeyDown": 10, 
   "kCGEventKeyUp": 11, 
   "kCGEventLeftMouseDown": 1, 
   "kCGEventLeftMouseDragged": 6, 
   "kCGEventLeftMouseUp": 2, 
   "kCGEventMouseMoved": 5, 
   "kCGEventMouseSubtypeDefault": 0, 
   "kCGEventMouseSubtypeTabletPoint": 1, 
   "kCGEventMouseSubtypeTabletProximity": 2, 
   "kCGEventNull": 0, 
   "kCGEventOtherMouseDown": 25, 
   "kCGEventOtherMouseDragged": 27, 
   "kCGEventOtherMouseUp": 26, 
   "kCGEventRightMouseDown": 3, 
   "kCGEventRightMouseDragged": 7, 
   "kCGEventRightMouseUp": 4, 
   "kCGEventScrollWheel": 22, 
   "kCGEventSourceGroupID": 44, 
   "kCGEventSourceStateCombinedSessionState": 0, 
   "kCGEventSourceStateHIDSystemState": 1, 
   "kCGEventSourceStateID": 45, 
   "kCGEventSourceStatePrivate": -1, 
   "kCGEventSourceUnixProcessID": 41, 
   "kCGEventSourceUserData": 42, 
   "kCGEventSourceUserID": 43, 
   "kCGEventSuppressionStateRemoteMouseDrag": 1, 
   "kCGEventSuppressionStateSuppressionInterval": 0, 
   "kCGEventTabletPointer": 23, 
   "kCGEventTabletProximity": 24, 
   "kCGEventTapDisabledByTimeout": 4294967294, 
   "kCGEventTapDisabledByUserInput": 4294967295, 
   "kCGEventTapOptionDefault": 0, 
   "kCGEventTapOptionListenOnly": 1, 
   "kCGEventTargetProcessSerialNumber": 39, 
   "kCGEventTargetUnixProcessID": 40, 
   "kCGFloatingWindowLevelKey": 5, 
   "kCGFontIndexInvalid": 65535, 
   "kCGFontIndexMax": 65534, 
   "kCGFontPostScriptFormatType1": 1, 
   "kCGFontPostScriptFormatType3": 3, 
   "kCGFontPostScriptFormatType42": 42, 
   "kCGGlyphMax": 65534, 
   "kCGGradientDrawsAfterEndLocation": 2, 
   "kCGGradientDrawsBeforeStartLocation": 1, 
   "kCGHIDEventTap": 0, 
   "kCGHeadInsertEventTap": 0, 
   "kCGHelpWindowLevelKey": 16, 
   "kCGImageAlphaFirst": 4, 
   "kCGImageAlphaLast": 3, 
   "kCGImageAlphaNone": 0, 
   "kCGImageAlphaNoneSkipFirst": 6, 
   "kCGImageAlphaNoneSkipLast": 5, 
   "kCGImageAlphaOnly": 7, 
   "kCGImageAlphaPremultipliedFirst": 2, 
   "kCGImageAlphaPremultipliedLast": 1, 
   "kCGInterpolationDefault": 0, 
   "kCGInterpolationHigh": 3, 
   "kCGInterpolationLow": 2, 
   "kCGInterpolationMedium": 4, 
   "kCGInterpolationNone": 1, 
   "kCGKeyboardEventAutorepeat": 8, 
   "kCGKeyboardEventKeyboardType": 10, 
   "kCGKeyboardEventKeycode": 9, 
   "kCGLineCapButt": 0, 
   "kCGLineCapRound": 1, 
   "kCGLineCapSquare": 2, 
   "kCGLineJoinBevel": 2, 
   "kCGLineJoinMiter": 0, 
   "kCGLineJoinRound": 1, 
   "kCGMainMenuWindowLevelKey": 8, 
   "kCGMaximumWindowLevelKey": 14, 
   "kCGMinimumWindowLevelKey": 1, 
   "kCGModalPanelWindowLevelKey": 10, 
   "kCGMouseButtonCenter": 2, 
   "kCGMouseButtonLeft": 0, 
   "kCGMouseButtonRight": 1, 
   "kCGMouseEventButtonNumber": 3, 
   "kCGMouseEventClickState": 1, 
   "kCGMouseEventDeltaX": 4, 
   "kCGMouseEventDeltaY": 5, 
   "kCGMouseEventInstantMouser": 6, 
   "kCGMouseEventNumber": 0, 
   "kCGMouseEventPressure": 2, 
   "kCGMouseEventSubtype": 7, 
   "kCGNormalWindowLevelKey": 4, 
   "kCGNullDirectDisplay": 0, 
   "kCGNullWindowID": 0, 
   "kCGNumReservedWindowLevels": 16, 
   "kCGNumberOfEventSuppressionStates": 2, 
   "kCGNumberOfWindowLevelKeys": 21, 
   "kCGOverlayWindowLevelKey": 15, 
   "kCGPDFArtBox": 4, 
   "kCGPDFBleedBox": 2, 
   "kCGPDFCropBox": 1, 
   "kCGPDFMediaBox": 0, 
   "kCGPDFObjectTypeArray": 7, 
   "kCGPDFObjectTypeBoolean": 2, 
   "kCGPDFObjectTypeDictionary": 8, 
   "kCGPDFObjectTypeInteger": 3, 
   "kCGPDFObjectTypeName": 5, 
   "kCGPDFObjectTypeNull": 1, 
   "kCGPDFObjectTypeReal": 4, 
   "kCGPDFObjectTypeStream": 9, 
   "kCGPDFObjectTypeString": 6, 
   "kCGPDFTrimBox": 3, 
   "kCGPathEOFill": 1, 
   "kCGPathEOFillStroke": 4, 
   "kCGPathElementAddCurveToPoint": 3, 
   "kCGPathElementAddLineToPoint": 1, 
   "kCGPathElementAddQuadCurveToPoint": 2, 
   "kCGPathElementCloseSubpath": 4, 
   "kCGPathElementMoveToPoint": 0, 
   "kCGPathFill": 0, 
   "kCGPathFillStroke": 3, 
   "kCGPathStroke": 2, 
   "kCGPatternTilingConstantSpacing": 2, 
   "kCGPatternTilingConstantSpacingMinimalDistortion": 1, 
   "kCGPatternTilingNoDistortion": 0, 
   "kCGPopUpMenuWindowLevelKey": 11, 
   "kCGRenderingIntentAbsoluteColorimetric": 1, 
   "kCGRenderingIntentDefault": 0, 
   "kCGRenderingIntentPerceptual": 3, 
   "kCGRenderingIntentRelativeColorimetric": 2, 
   "kCGRenderingIntentSaturation": 4, 
   "kCGScreenSaverWindowLevelKey": 13, 
   "kCGScreenUpdateOperationMove": 1, 
   "kCGScreenUpdateOperationReducedDirtyRectangleCount": 2147483648, 
   "kCGScreenUpdateOperationRefresh": 0, 
   "kCGScrollEventUnitLine": 1, 
   "kCGScrollEventUnitPixel": 0, 
   "kCGScrollWheelEventDeltaAxis1": 11, 
   "kCGScrollWheelEventDeltaAxis2": 12, 
   "kCGScrollWheelEventDeltaAxis3": 13, 
   "kCGScrollWheelEventFixedPtDeltaAxis1": 93, 
   "kCGScrollWheelEventFixedPtDeltaAxis2": 94, 
   "kCGScrollWheelEventFixedPtDeltaAxis3": 95, 
   "kCGScrollWheelEventInstantMouser": 14, 
   "kCGScrollWheelEventIsContinuous": 88, 
   "kCGScrollWheelEventPointDeltaAxis1": 96, 
   "kCGScrollWheelEventPointDeltaAxis2": 97, 
   "kCGScrollWheelEventPointDeltaAxis3": 98, 
   "kCGSessionEventTap": 1, 
   "kCGStatusWindowLevelKey": 9, 
   "kCGTabletEventDeviceID": 24, 
   "kCGTabletEventPointButtons": 18, 
   "kCGTabletEventPointPressure": 19, 
   "kCGTabletEventPointX": 15, 
   "kCGTabletEventPointY": 16, 
   "kCGTabletEventPointZ": 17, 
   "kCGTabletEventRotation": 22, 
   "kCGTabletEventTangentialPressure": 23, 
   "kCGTabletEventTiltX": 20, 
   "kCGTabletEventTiltY": 21, 
   "kCGTabletEventVendor1": 25, 
   "kCGTabletEventVendor2": 26, 
   "kCGTabletEventVendor3": 27, 
   "kCGTabletProximityEventCapabilityMask": 36, 
   "kCGTabletProximityEventDeviceID": 31, 
   "kCGTabletProximityEventEnterProximity": 38, 
   "kCGTabletProximityEventPointerID": 30, 
   "kCGTabletProximityEventPointerType": 37, 
   "kCGTabletProximityEventSystemTabletID": 32, 
   "kCGTabletProximityEventTabletID": 29, 
   "kCGTabletProximityEventVendorID": 28, 
   "kCGTabletProximityEventVendorPointerSerialNumber": 34, 
   "kCGTabletProximityEventVendorPointerType": 33, 
   "kCGTabletProximityEventVendorUniqueID": 35, 
   "kCGTailAppendEventTap": 1, 
   "kCGTextClip": 7, 
   "kCGTextFill": 0, 
   "kCGTextFillClip": 4, 
   "kCGTextFillStroke": 2, 
   "kCGTextFillStrokeClip": 6, 
   "kCGTextInvisible": 3, 
   "kCGTextStroke": 1, 
   "kCGTextStrokeClip": 5, 
   "kCGTornOffMenuWindowLevelKey": 6, 
   "kCGUtilityWindowLevelKey": 17, 
   "kCGWindowImageBoundsIgnoreFraming": 1, 
   "kCGWindowImageDefault": 0, 
   "kCGWindowImageOnlyShadows": 4, 
   "kCGWindowImageShouldBeOpaque": 2, 
   "kCGWindowListExcludeDesktopElements": 16, 
   "kCGWindowListOptionAll": 0, 
   "kCGWindowListOptionIncludingWindow": 8, 
   "kCGWindowListOptionOnScreenAboveWindow": 2, 
   "kCGWindowListOptionOnScreenBelowWindow": 4, 
   "kCGWindowListOptionOnScreenOnly": 1, 
   "kCGWindowSharingNone": 0, 
   "kCGWindowSharingReadOnly": 1, 
   "kCGWindowSharingReadWrite": 2
  }, 
  "expressions": {
   "kCGAssistiveTechHighWindowLevel": "CGWindowLevelForKey(kCGAssistiveTechHighWindowLevelKey)", 
   "kCGBackstopMenuLevel": "CGWindowLevelForKey(kCGBackstopMenuLevelKey)", 
   "kCGBaseWindowLevel": "CGWindowLevelForKey(kCGBaseWindowLevelKey)", 
   "kCGCursorWindowLevel": "CGWindowLevelForKey(kCGCursorWindowLevelKey)", 
   "kCGDesktopIconWindowLevel": "CGWindowLevelForKey(kCGDesktopIconWindowLevelKey)", 
   "kCGDesktopWindowLevel": "CGWindowLevelForKey(kCGDesktopWindowLevelKey)", 
   "kCGDirectMainDisplay": "CGMainDisplayID()", 
   "kCGDockWindowLevel": "CGWindowLevelForKey(kCGDockWindowLevelKey)", 
   "kCGDraggingWindowLevel": "CGWindowLevelForKey(kCGDraggingWindowLevelKey)", 
   "kCGEventFilterMaskPermitAllEvents": "(kCGEventFilterMaskPermitLocalMouseEvents | kCGEventFilterMaskPermitLocalKeyboardEvents | kCGEventFilterMaskPermitSystemDefinedEvents)", 
   "kCGFloatingWindowLevel": "CGWindowLevelForKey(kCGFloatingWindowLevelKey)", 
   "kCGHelpWindowLevel": "CGWindowLevelForKey(kCGHelpWindowLevelKey)", 
   "kCGMainMenuWindowLevel": "CGWindowLevelForKey(kCGMainMenuWindowLevelKey)", 
   "kCGMaximumWindowLevel": "CGWindowLevelForKey(kCGMaximumWindowLevelKey)", 
   "kCGMinimumWindowLevel": "CGWindowLevelForKey(kCGMinimumWindowLevelKey)", 
   "kCGModalPanelWindowLevel": "CGWindowLevelForKey(kCGModalPanelWindowLevelKey)", 
   "kCGNormalWindowLevel": "CGWindowLevelForKey(kCGNormalWindowLevelKey)", 
   "kCGOverlayWindowLevel": "CGWindowLevelForKey(kCGOverlayWindowLevelKey)", 
   "kCGPopUpMenuWindowLevel": "CGWindowLevelForKey(kCGPopUpMenuWindowLevelKey)", 
   "kCGScreenSaverWindowLevel": "CGWindowLevelForKey(kCGScreenSaverWindowLevelKey)", 
   "kCGStatusWindowLevel": "CGWindowLevelForKey(kCGStatusWindowLevelKey)", 
   "kCGTornOffMenuWindowLevel": "CGWindowLevelForKey(kCGTornOffMenuWindowLevelKey)", 
   "kCGUtilityWindowLevel": "CGWindowLevelForKey(kCGUtilityWindowLevelKey)"
  }, 
  "externs": {
   "CGAffineTransformIdentity": {
    "typestr": "{CGAffineTransform=dddddd}"
   }, 
   "CGPointZero": {
    "typestr": "{CGPoint=dd}"
   }, 
   "CGRectInfinite": {
    "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
   }, 
   "CGRectNull": {
    "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
   }, 
   "CGRectZero": {
    "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
   }, 
   "CGSizeZero": {
    "typestr": "{CGSize=dd}"
   }, 
   "kCGColorBlack": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGColorClear": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGColorSpaceAdobeRGB1998": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGColorSpaceGenericCMYK": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGColorSpaceGenericGray": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGColorSpaceGenericGrayGamma2_2": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGColorSpaceGenericRGB": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGColorSpaceGenericRGBLinear": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGColorSpaceSRGB": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGColorWhite": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGFontVariationAxisDefaultValue": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGFontVariationAxisMaxValue": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGFontVariationAxisMinValue": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGFontVariationAxisName": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFContextAllowsCopying": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFContextAllowsPrinting": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFContextArtBox": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFContextAuthor": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFContextBleedBox": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFContextCreator": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFContextCropBox": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFContextEncryptionKeyLength": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFContextKeywords": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFContextMediaBox": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFContextOutputIntent": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFContextOutputIntents": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFContextOwnerPassword": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFContextSubject": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFContextTitle": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFContextTrimBox": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFContextUserPassword": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFXDestinationOutputProfile": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFXInfo": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFXOutputCondition": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFXOutputConditionIdentifier": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFXOutputIntentSubtype": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGPDFXRegistryName": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGWindowAlpha": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGWindowBackingLocationVideoMemory": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGWindowBounds": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGWindowIsOnscreen": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGWindowLayer": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGWindowMemoryUsage": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGWindowName": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGWindowNumber": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGWindowOwnerName": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGWindowOwnerPID": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGWindowSharingState": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGWindowStoreType": {
    "typestr": "^{__CFString=}"
   }, 
   "kCGWindowWorkspace": {
    "typestr": "^{__CFString=}"
   }
  }, 
  "formal_protocols": {}, 
  "func_macros": {
   "CGSetLocalEventsFilterDuringSupressionState": "def CGSetLocalEventsFilterDuringSupressionState(filter,state): return CGSetLocalEventsFilterDuringSuppressionState(filter, state)"
  }, 
  "functions": {
   "CGAcquireDisplayFadeReservation": {
    "args": [
     {
      "name": "seconds", 
      "typestr": "f"
     }, 
     {
      "name": "token", 
      "typestr": "^I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGAffineTransformConcat": {
    "args": [
     {
      "name": "t1", 
      "typestr": "{CGAffineTransform=dddddd}"
     }, 
     {
      "name": "t2", 
      "typestr": "{CGAffineTransform=dddddd}"
     }
    ], 
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   }, 
   "CGAffineTransformEqualToTransform": {
    "args": [
     {
      "name": "t1", 
      "typestr": "{CGAffineTransform=dddddd}"
     }, 
     {
      "name": "t2", 
      "typestr": "{CGAffineTransform=dddddd}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGAffineTransformInvert": {
    "args": [
     {
      "name": "t", 
      "typestr": "{CGAffineTransform=dddddd}"
     }
    ], 
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   }, 
   "CGAffineTransformIsIdentity": {
    "args": [
     {
      "name": "t", 
      "typestr": "{CGAffineTransform=dddddd}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGAffineTransformMake": {
    "args": [
     {
      "name": "a", 
      "typestr": "d"
     }, 
     {
      "name": "b", 
      "typestr": "d"
     }, 
     {
      "name": "c", 
      "typestr": "d"
     }, 
     {
      "name": "d", 
      "typestr": "d"
     }, 
     {
      "name": "tx", 
      "typestr": "d"
     }, 
     {
      "name": "ty", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   }, 
   "CGAffineTransformMakeRotation": {
    "args": [
     {
      "name": "angle", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   }, 
   "CGAffineTransformMakeScale": {
    "args": [
     {
      "name": "sx", 
      "typestr": "d"
     }, 
     {
      "name": "sy", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   }, 
   "CGAffineTransformMakeTranslation": {
    "args": [
     {
      "name": "tx", 
      "typestr": "d"
     }, 
     {
      "name": "ty", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   }, 
   "CGAffineTransformRotate": {
    "args": [
     {
      "name": "t", 
      "typestr": "{CGAffineTransform=dddddd}"
     }, 
     {
      "name": "angle", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   }, 
   "CGAffineTransformScale": {
    "args": [
     {
      "name": "t", 
      "typestr": "{CGAffineTransform=dddddd}"
     }, 
     {
      "name": "sx", 
      "typestr": "d"
     }, 
     {
      "name": "sy", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   }, 
   "CGAffineTransformTranslate": {
    "args": [
     {
      "name": "t", 
      "typestr": "{CGAffineTransform=dddddd}"
     }, 
     {
      "name": "tx", 
      "typestr": "d"
     }, 
     {
      "name": "ty", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   }, 
   "CGAssociateMouseAndMouseCursorPosition": {
    "args": [
     {
      "name": "connected", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGBeginDisplayConfiguration": {
    "args": [
     {
      "name": "config", 
      "typestr": "^^{_CGDisplayConfigRef=}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGBitmapContextCreate": {
    "args": [
     {
      "name": "data", 
      "typestr": "^v"
     }, 
     {
      "name": "width", 
      "typestr": "Q"
     }, 
     {
      "name": "height", 
      "typestr": "Q"
     }, 
     {
      "name": "bitsPerComponent", 
      "typestr": "Q"
     }, 
     {
      "name": "bytesPerRow", 
      "typestr": "Q"
     }, 
     {
      "name": "space", 
      "typestr": "^{CGColorSpace=}"
     }, 
     {
      "name": "bitmapInfo", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGContext=}"
    }
   }, 
   "CGBitmapContextCreateImage": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGImage=}"
    }
   }, 
   "CGBitmapContextCreateWithData": {
    "args": [
     {
      "name": "data", 
      "typestr": "^v"
     }, 
     {
      "name": "width", 
      "typestr": "Q"
     }, 
     {
      "name": "height", 
      "typestr": "Q"
     }, 
     {
      "name": "bitsPerComponent", 
      "typestr": "Q"
     }, 
     {
      "name": "bytesPerRow", 
      "typestr": "Q"
     }, 
     {
      "name": "space", 
      "typestr": "^{CGColorSpace=}"
     }, 
     {
      "name": "bitmapInfo", 
      "typestr": "I"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^v", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "releaseCallback", 
      "typestr": "^?"
     }, 
     {
      "name": "releaseInfo", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGContext=}"
    }
   }, 
   "CGBitmapContextGetAlphaInfo": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGBitmapContextGetBitmapInfo": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGBitmapContextGetBitsPerComponent": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGBitmapContextGetBitsPerPixel": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGBitmapContextGetBytesPerRow": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGBitmapContextGetColorSpace": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGColorSpace=}"
    }
   }, 
   "CGBitmapContextGetData": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "^v"
    }
   }, 
   "CGBitmapContextGetHeight": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGBitmapContextGetWidth": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGCancelDisplayConfiguration": {
    "args": [
     {
      "name": "config", 
      "typestr": "^{_CGDisplayConfigRef=}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGCaptureAllDisplays": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGCaptureAllDisplaysWithOptions": {
    "args": [
     {
      "name": "options", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGColorCreate": {
    "args": [
     {
      "name": "space", 
      "typestr": "^{CGColorSpace=}"
     }, 
     {
      "name": "components", 
      "typestr": "^d"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGColor=}"
    }
   }, 
   "CGColorCreateCopy": {
    "args": [
     {
      "name": "color", 
      "typestr": "^{CGColor=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGColor=}"
    }
   }, 
   "CGColorCreateCopyWithAlpha": {
    "args": [
     {
      "name": "color", 
      "typestr": "^{CGColor=}"
     }, 
     {
      "name": "alpha", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGColor=}"
    }
   }, 
   "CGColorCreateGenericCMYK": {
    "args": [
     {
      "name": "cyan", 
      "typestr": "d"
     }, 
     {
      "name": "magenta", 
      "typestr": "d"
     }, 
     {
      "name": "yellow", 
      "typestr": "d"
     }, 
     {
      "name": "black", 
      "typestr": "d"
     }, 
     {
      "name": "alpha", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGColor=}"
    }
   }, 
   "CGColorCreateGenericGray": {
    "args": [
     {
      "name": "gray", 
      "typestr": "d"
     }, 
     {
      "name": "alpha", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGColor=}"
    }
   }, 
   "CGColorCreateGenericRGB": {
    "args": [
     {
      "name": "red", 
      "typestr": "d"
     }, 
     {
      "name": "green", 
      "typestr": "d"
     }, 
     {
      "name": "blue", 
      "typestr": "d"
     }, 
     {
      "name": "alpha", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGColor=}"
    }
   }, 
   "CGColorCreateWithPattern": {
    "args": [
     {
      "name": "space", 
      "typestr": "^{CGColorSpace=}"
     }, 
     {
      "name": "pattern", 
      "typestr": "^{CGPattern=}"
     }, 
     {
      "name": "components", 
      "typestr": "^d"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGColor=}"
    }
   }, 
   "CGColorEqualToColor": {
    "args": [
     {
      "name": "color1", 
      "typestr": "^{CGColor=}"
     }, 
     {
      "name": "color2", 
      "typestr": "^{CGColor=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGColorGetAlpha": {
    "args": [
     {
      "name": "color", 
      "typestr": "^{CGColor=}"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CGColorGetColorSpace": {
    "args": [
     {
      "name": "color", 
      "typestr": "^{CGColor=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGColorSpace=}"
    }
   }, 
   "CGColorGetComponents": {
    "args": [
     {
      "name": "color", 
      "typestr": "^{CGColor=}"
     }
    ], 
    "retval": {
     "typestr": "^d"
    }
   }, 
   "CGColorGetConstantColor": {
    "args": [
     {
      "name": "colorName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGColor=}"
    }
   }, 
   "CGColorGetNumberOfComponents": {
    "args": [
     {
      "name": "color", 
      "typestr": "^{CGColor=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGColorGetPattern": {
    "args": [
     {
      "name": "color", 
      "typestr": "^{CGColor=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGPattern=}"
    }
   }, 
   "CGColorGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGColorRelease": {
    "args": [
     {
      "name": "color", 
      "typestr": "^{CGColor=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGColorRetain": {
    "args": [
     {
      "name": "color", 
      "typestr": "^{CGColor=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGColor=}"
    }
   }, 
   "CGColorSpaceCopyICCProfile": {
    "args": [
     {
      "name": "space", 
      "typestr": "^{CGColorSpace=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CGColorSpaceCopyName": {
    "args": [
     {
      "name": "space", 
      "typestr": "^{CGColorSpace=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CGColorSpaceCreateCalibratedGray": {
    "args": [
     {
      "name": "whitePoint", 
      "typestr": "[3d]"
     }, 
     {
      "name": "blackPoint", 
      "typestr": "[3d]"
     }, 
     {
      "name": "gamma", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGColorSpace=}"
    }
   }, 
   "CGColorSpaceCreateCalibratedRGB": {
    "args": [
     {
      "name": "whitePoint", 
      "typestr": "[3d]"
     }, 
     {
      "name": "blackPoint", 
      "typestr": "[3d]"
     }, 
     {
      "name": "gamma", 
      "typestr": "[3d]"
     }, 
     {
      "name": "matrix", 
      "typestr": "[9d]"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGColorSpace=}"
    }
   }, 
   "CGColorSpaceCreateDeviceCMYK": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGColorSpace=}"
    }
   }, 
   "CGColorSpaceCreateDeviceGray": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGColorSpace=}"
    }
   }, 
   "CGColorSpaceCreateDeviceRGB": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGColorSpace=}"
    }
   }, 
   "CGColorSpaceCreateICCBased": {
    "args": [
     {
      "name": "nComponents", 
      "typestr": "Q"
     }, 
     {
      "name": "range", 
      "typestr": "^d"
     }, 
     {
      "name": "profile", 
      "typestr": "^{CGDataProvider=}"
     }, 
     {
      "name": "alternate", 
      "typestr": "^{CGColorSpace=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGColorSpace=}"
    }
   }, 
   "CGColorSpaceCreateIndexed": {
    "args": [
     {
      "name": "baseSpace", 
      "typestr": "^{CGColorSpace=}"
     }, 
     {
      "name": "lastIndex", 
      "typestr": "Q"
     }, 
     {
      "name": "colorTable", 
      "typestr": "^C"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGColorSpace=}"
    }
   }, 
   "CGColorSpaceCreateLab": {
    "args": [
     {
      "name": "whitePoint", 
      "typestr": "[3d]"
     }, 
     {
      "name": "blackPoint", 
      "typestr": "[3d]"
     }, 
     {
      "name": "range", 
      "typestr": "[4d]"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGColorSpace=}"
    }
   }, 
   "CGColorSpaceCreatePattern": {
    "args": [
     {
      "name": "baseSpace", 
      "typestr": "^{CGColorSpace=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGColorSpace=}"
    }
   }, 
   "CGColorSpaceCreateWithICCProfile": {
    "args": [
     {
      "name": "data", 
      "typestr": "^{__CFData=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGColorSpace=}"
    }
   }, 
   "CGColorSpaceCreateWithName": {
    "args": [
     {
      "name": "name", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGColorSpace=}"
    }
   }, 
   "CGColorSpaceCreateWithPlatformColorSpace": {
    "args": [
     {
      "name": "ref", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGColorSpace=}"
    }
   }, 
   "CGColorSpaceGetBaseColorSpace": {
    "args": [
     {
      "name": "space", 
      "typestr": "^{CGColorSpace=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGColorSpace=}"
    }
   }, 
   "CGColorSpaceGetColorTable": {
    "args": [
     {
      "name": "space", 
      "typestr": "^{CGColorSpace=}"
     }, 
     {
      "name": "table", 
      "typestr": "^C"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGColorSpaceGetColorTableCount": {
    "args": [
     {
      "name": "space", 
      "typestr": "^{CGColorSpace=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGColorSpaceGetModel": {
    "args": [
     {
      "name": "space", 
      "typestr": "^{CGColorSpace=}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGColorSpaceGetNumberOfComponents": {
    "args": [
     {
      "name": "space", 
      "typestr": "^{CGColorSpace=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGColorSpaceGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGColorSpaceRelease": {
    "args": [
     {
      "name": "space", 
      "typestr": "^{CGColorSpace=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGColorSpaceRetain": {
    "args": [
     {
      "name": "space", 
      "typestr": "^{CGColorSpace=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGColorSpace=}"
    }
   }, 
   "CGCompleteDisplayConfiguration": {
    "args": [
     {
      "name": "config", 
      "typestr": "^{_CGDisplayConfigRef=}"
     }, 
     {
      "name": "option", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGConfigureDisplayFadeEffect": {
    "args": [
     {
      "name": "config", 
      "typestr": "^{_CGDisplayConfigRef=}"
     }, 
     {
      "name": "fadeOutSeconds", 
      "typestr": "f"
     }, 
     {
      "name": "fadeInSeconds", 
      "typestr": "f"
     }, 
     {
      "name": "fadeRed", 
      "typestr": "f"
     }, 
     {
      "name": "fadeGreen", 
      "typestr": "f"
     }, 
     {
      "name": "fadeBlue", 
      "typestr": "f"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGConfigureDisplayMirrorOfDisplay": {
    "args": [
     {
      "name": "config", 
      "typestr": "^{_CGDisplayConfigRef=}"
     }, 
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "master", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGConfigureDisplayMode": {
    "args": [
     {
      "name": "config", 
      "typestr": "^{_CGDisplayConfigRef=}"
     }, 
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "mode", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGConfigureDisplayOrigin": {
    "args": [
     {
      "name": "config", 
      "typestr": "^{_CGDisplayConfigRef=}"
     }, 
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "x", 
      "typestr": "i"
     }, 
     {
      "name": "y", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGConfigureDisplayStereoOperation": {
    "args": [
     {
      "name": "config", 
      "typestr": "^{_CGDisplayConfigRef=}"
     }, 
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "stereo", 
      "typestr": "I"
     }, 
     {
      "name": "forceBlueLine", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGConfigureDisplayWithDisplayMode": {
    "args": [
     {
      "name": "config", 
      "typestr": "^{_CGDisplayConfigRef=}"
     }, 
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "mode", 
      "typestr": "^{CGDisplayMode=}"
     }, 
     {
      "name": "options", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGContextAddArc": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "x", 
      "typestr": "d"
     }, 
     {
      "name": "y", 
      "typestr": "d"
     }, 
     {
      "name": "radius", 
      "typestr": "d"
     }, 
     {
      "name": "startAngle", 
      "typestr": "d"
     }, 
     {
      "name": "endAngle", 
      "typestr": "d"
     }, 
     {
      "name": "clockwise", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextAddArcToPoint": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "x1", 
      "typestr": "d"
     }, 
     {
      "name": "y1", 
      "typestr": "d"
     }, 
     {
      "name": "x2", 
      "typestr": "d"
     }, 
     {
      "name": "y2", 
      "typestr": "d"
     }, 
     {
      "name": "radius", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextAddCurveToPoint": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "cp1x", 
      "typestr": "d"
     }, 
     {
      "name": "cp1y", 
      "typestr": "d"
     }, 
     {
      "name": "cp2x", 
      "typestr": "d"
     }, 
     {
      "name": "cp2y", 
      "typestr": "d"
     }, 
     {
      "name": "x", 
      "typestr": "d"
     }, 
     {
      "name": "y", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextAddEllipseInRect": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextAddLineToPoint": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "x", 
      "typestr": "d"
     }, 
     {
      "name": "y", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextAddLines": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "points", 
      "typestr": "^{CGPoint=dd}"
     }, 
     {
      "name": "count", 
      "typestr": "Q"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextAddPath": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextAddQuadCurveToPoint": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "cpx", 
      "typestr": "d"
     }, 
     {
      "name": "cpy", 
      "typestr": "d"
     }, 
     {
      "name": "x", 
      "typestr": "d"
     }, 
     {
      "name": "y", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextAddRect": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextAddRects": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "rects", 
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "count", 
      "typestr": "Q"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextBeginPage": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "mediaBox", 
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextBeginPath": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextBeginTransparencyLayer": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "auxiliaryInfo", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextBeginTransparencyLayerWithRect": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "auxiliaryInfo", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextClearRect": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextClip": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextClipToMask": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "mask", 
      "typestr": "^{CGImage=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextClipToRect": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextClipToRects": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "rects", 
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "count", 
      "typestr": "Q"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextClosePath": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextConcatCTM": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "transform", 
      "typestr": "{CGAffineTransform=dddddd}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextConvertPointToDeviceSpace": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "point", 
      "typestr": "{CGPoint=dd}"
     }
    ], 
    "retval": {
     "typestr": "{CGPoint=dd}"
    }
   }, 
   "CGContextConvertPointToUserSpace": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "point", 
      "typestr": "{CGPoint=dd}"
     }
    ], 
    "retval": {
     "typestr": "{CGPoint=dd}"
    }
   }, 
   "CGContextConvertRectToDeviceSpace": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   }, 
   "CGContextConvertRectToUserSpace": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   }, 
   "CGContextConvertSizeToDeviceSpace": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "size", 
      "typestr": "{CGSize=dd}"
     }
    ], 
    "retval": {
     "typestr": "{CGSize=dd}"
    }
   }, 
   "CGContextConvertSizeToUserSpace": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "size", 
      "typestr": "{CGSize=dd}"
     }
    ], 
    "retval": {
     "typestr": "{CGSize=dd}"
    }
   }, 
   "CGContextCopyPath": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGPath=}"
    }
   }, 
   "CGContextDrawImage": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "image", 
      "typestr": "^{CGImage=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextDrawLayerAtPoint": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "point", 
      "typestr": "{CGPoint=dd}"
     }, 
     {
      "name": "layer", 
      "typestr": "^{CGLayer=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextDrawLayerInRect": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "layer", 
      "typestr": "^{CGLayer=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextDrawLinearGradient": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "gradient", 
      "typestr": "^{CGGradient=}"
     }, 
     {
      "name": "startPoint", 
      "typestr": "{CGPoint=dd}"
     }, 
     {
      "name": "endPoint", 
      "typestr": "{CGPoint=dd}"
     }, 
     {
      "name": "options", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextDrawPDFDocument": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "document", 
      "typestr": "^{CGPDFDocument=}"
     }, 
     {
      "name": "page", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextDrawPDFPage": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "page", 
      "typestr": "^{CGPDFPage=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextDrawPath": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "mode", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextDrawRadialGradient": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "gradient", 
      "typestr": "^{CGGradient=}"
     }, 
     {
      "name": "startCenter", 
      "typestr": "{CGPoint=dd}"
     }, 
     {
      "name": "startRadius", 
      "typestr": "d"
     }, 
     {
      "name": "endCenter", 
      "typestr": "{CGPoint=dd}"
     }, 
     {
      "name": "endRadius", 
      "typestr": "d"
     }, 
     {
      "name": "options", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextDrawShading": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "shading", 
      "typestr": "^{CGShading=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextDrawTiledImage": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "image", 
      "typestr": "^{CGImage=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextEOClip": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextEOFillPath": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextEndPage": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextEndTransparencyLayer": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextFillEllipseInRect": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextFillPath": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextFillRect": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextFillRects": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "rects", 
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "count", 
      "typestr": "Q"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextFlush": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextGetCTM": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   }, 
   "CGContextGetClipBoundingBox": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   }, 
   "CGContextGetInterpolationQuality": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGContextGetPathBoundingBox": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   }, 
   "CGContextGetPathCurrentPoint": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "{CGPoint=dd}"
    }
   }, 
   "CGContextGetTextMatrix": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   }, 
   "CGContextGetTextPosition": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "{CGPoint=dd}"
    }
   }, 
   "CGContextGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGContextGetUserSpaceToDeviceSpaceTransform": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   }, 
   "CGContextIsPathEmpty": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGContextMoveToPoint": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "x", 
      "typestr": "d"
     }, 
     {
      "name": "y", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextPathContainsPoint": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "point", 
      "typestr": "{CGPoint=dd}"
     }, 
     {
      "name": "mode", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGContextRelease": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextReplacePathWithStrokedPath": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextRestoreGState": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextRetain": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGContext=}"
    }
   }, 
   "CGContextRotateCTM": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "angle", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSaveGState": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextScaleCTM": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "sx", 
      "typestr": "d"
     }, 
     {
      "name": "sy", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSelectFont": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "name", 
      "typestr": "^c"
     }, 
     {
      "name": "size", 
      "typestr": "d"
     }, 
     {
      "name": "textEncoding", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetAllowsAntialiasing": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "allowsAntialiasing", 
      "typestr": "B"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetAllowsFontSmoothing": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "allowsFontSmoothing", 
      "typestr": "B"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetAllowsFontSubpixelPositioning": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "allowsFontSubpixelPositioning", 
      "typestr": "B"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetAllowsFontSubpixelQuantization": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "allowsFontSubpixelQuantization", 
      "typestr": "B"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetAlpha": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "alpha", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetBlendMode": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "mode", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetCMYKFillColor": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "cyan", 
      "typestr": "d"
     }, 
     {
      "name": "magenta", 
      "typestr": "d"
     }, 
     {
      "name": "yellow", 
      "typestr": "d"
     }, 
     {
      "name": "black", 
      "typestr": "d"
     }, 
     {
      "name": "alpha", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetCMYKStrokeColor": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "cyan", 
      "typestr": "d"
     }, 
     {
      "name": "magenta", 
      "typestr": "d"
     }, 
     {
      "name": "yellow", 
      "typestr": "d"
     }, 
     {
      "name": "black", 
      "typestr": "d"
     }, 
     {
      "name": "alpha", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetCharacterSpacing": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "spacing", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetFillColor": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "components", 
      "typestr": "^d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetFillColorSpace": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "space", 
      "typestr": "^{CGColorSpace=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetFillColorWithColor": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "color", 
      "typestr": "^{CGColor=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetFillPattern": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "pattern", 
      "typestr": "^{CGPattern=}"
     }, 
     {
      "name": "components", 
      "typestr": "^d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetFlatness": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "flatness", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetFont": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetFontSize": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "size", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetGrayFillColor": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "gray", 
      "typestr": "d"
     }, 
     {
      "name": "alpha", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetGrayStrokeColor": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "gray", 
      "typestr": "d"
     }, 
     {
      "name": "alpha", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetInterpolationQuality": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "quality", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetLineCap": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "cap", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetLineDash": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "phase", 
      "typestr": "d"
     }, 
     {
      "name": "lengths", 
      "typestr": "^d"
     }, 
     {
      "name": "count", 
      "typestr": "Q"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetLineJoin": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "join", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetLineWidth": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "width", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetMiterLimit": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "limit", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetPatternPhase": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "phase", 
      "typestr": "{CGSize=dd}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetRGBFillColor": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "red", 
      "typestr": "d"
     }, 
     {
      "name": "green", 
      "typestr": "d"
     }, 
     {
      "name": "blue", 
      "typestr": "d"
     }, 
     {
      "name": "alpha", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetRGBStrokeColor": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "red", 
      "typestr": "d"
     }, 
     {
      "name": "green", 
      "typestr": "d"
     }, 
     {
      "name": "blue", 
      "typestr": "d"
     }, 
     {
      "name": "alpha", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetRenderingIntent": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "intent", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetShadow": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "offset", 
      "typestr": "{CGSize=dd}"
     }, 
     {
      "name": "blur", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetShadowWithColor": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "offset", 
      "typestr": "{CGSize=dd}"
     }, 
     {
      "name": "blur", 
      "typestr": "d"
     }, 
     {
      "name": "color", 
      "typestr": "^{CGColor=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetShouldAntialias": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "shouldAntialias", 
      "typestr": "B"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetShouldSmoothFonts": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "shouldSmoothFonts", 
      "typestr": "B"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetShouldSubpixelPositionFonts": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "shouldSubpixelPositionFonts", 
      "typestr": "B"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetShouldSubpixelQuantizeFonts": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "shouldSubpixelQuantizeFonts", 
      "typestr": "B"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetStrokeColor": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "components", 
      "typestr": "^d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetStrokeColorSpace": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "space", 
      "typestr": "^{CGColorSpace=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetStrokeColorWithColor": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "color", 
      "typestr": "^{CGColor=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetStrokePattern": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "pattern", 
      "typestr": "^{CGPattern=}"
     }, 
     {
      "name": "components", 
      "typestr": "^d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetTextDrawingMode": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "mode", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetTextMatrix": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "t", 
      "typestr": "{CGAffineTransform=dddddd}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSetTextPosition": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "x", 
      "typestr": "d"
     }, 
     {
      "name": "y", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextShowGlyphs": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "g", 
      "typestr": "^S"
     }, 
     {
      "name": "count", 
      "typestr": "Q"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextShowGlyphsAtPoint": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "x", 
      "typestr": "d"
     }, 
     {
      "name": "y", 
      "typestr": "d"
     }, 
     {
      "name": "glyphs", 
      "typestr": "^S"
     }, 
     {
      "name": "count", 
      "typestr": "Q"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextShowGlyphsAtPositions": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "glyphs", 
      "typestr": "^S"
     }, 
     {
      "name": "positions", 
      "typestr": "^{CGPoint=dd}"
     }, 
     {
      "name": "count", 
      "typestr": "Q"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextShowGlyphsWithAdvances": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "glyphs", 
      "typestr": "^S"
     }, 
     {
      "name": "advances", 
      "typestr": "^{CGSize=dd}"
     }, 
     {
      "name": "count", 
      "typestr": "Q"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextShowText": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "string", 
      "typestr": "^c"
     }, 
     {
      "name": "length", 
      "typestr": "Q"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextShowTextAtPoint": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "x", 
      "typestr": "d"
     }, 
     {
      "name": "y", 
      "typestr": "d"
     }, 
     {
      "name": "string", 
      "typestr": "^c"
     }, 
     {
      "name": "length", 
      "typestr": "Q"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextStrokeEllipseInRect": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextStrokeLineSegments": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "points", 
      "typestr": "^{CGPoint=dd}"
     }, 
     {
      "name": "count", 
      "typestr": "Q"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextStrokePath": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextStrokeRect": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextStrokeRectWithWidth": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "width", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextSynchronize": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGContextTranslateCTM": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "tx", 
      "typestr": "d"
     }, 
     {
      "name": "ty", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGCursorIsDrawnInFramebuffer": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGCursorIsVisible": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDataConsumerCreate": {
    "args": [
     {
      "name": "info", 
      "typestr": "^v"
     }, 
     {
      "name": "callbacks", 
      "typestr": "^{CGDataConsumerCallbacks=^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGDataConsumer=}"
    }
   }, 
   "CGDataConsumerCreateWithCFData": {
    "args": [
     {
      "name": "data", 
      "typestr": "^{__CFData=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGDataConsumer=}"
    }
   }, 
   "CGDataConsumerCreateWithURL": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGDataConsumer=}"
    }
   }, 
   "CGDataConsumerGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGDataConsumerRelease": {
    "args": [
     {
      "name": "consumer", 
      "typestr": "^{CGDataConsumer=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGDataConsumerRetain": {
    "args": [
     {
      "name": "consumer", 
      "typestr": "^{CGDataConsumer=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGDataConsumer=}"
    }
   }, 
   "CGDataProviderCopyData": {
    "args": [
     {
      "name": "provider", 
      "typestr": "^{CGDataProvider=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CGDataProviderCreate": {
    "args": [
     {
      "name": "info", 
      "typestr": "^v"
     }, 
     {
      "name": "callbacks", 
      "typestr": "^{CGDataProviderCallbacks=^?^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGDataProvider=}"
    }
   }, 
   "CGDataProviderCreateDirect": {
    "args": [
     {
      "name": "info", 
      "typestr": "^v"
     }, 
     {
      "name": "size", 
      "typestr": "q"
     }, 
     {
      "name": "callbacks", 
      "typestr": "^{CGDataProviderDirectCallbacks=I^?^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGDataProvider=}"
    }
   }, 
   "CGDataProviderCreateDirectAccess": {
    "args": [
     {
      "name": "info", 
      "typestr": "^v"
     }, 
     {
      "name": "size", 
      "typestr": "Q"
     }, 
     {
      "name": "callbacks", 
      "typestr": "^{CGDataProviderDirectAccessCallbacks=^?^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGDataProvider=}"
    }
   }, 
   "CGDataProviderCreateSequential": {
    "args": [
     {
      "name": "info", 
      "typestr": "^v"
     }, 
     {
      "name": "callbacks", 
      "typestr": "^{CGDataProviderSequentialCallbacks=I^?^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGDataProvider=}"
    }
   }, 
   "CGDataProviderCreateWithCFData": {
    "args": [
     {
      "name": "data", 
      "typestr": "^{__CFData=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGDataProvider=}"
    }
   }, 
   "CGDataProviderCreateWithData": {
    "args": [
     {
      "name": "info", 
      "typestr": "^v"
     }, 
     {
      "name": "data", 
      "typestr": "^v"
     }, 
     {
      "name": "size", 
      "typestr": "Q"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^v", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }, 
        {
         "typestr": [
          "Q", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "releaseData", 
      "typestr": "^?"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGDataProvider=}"
    }
   }, 
   "CGDataProviderCreateWithFilename": {
    "args": [
     {
      "name": "filename", 
      "typestr": "^c"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGDataProvider=}"
    }
   }, 
   "CGDataProviderCreateWithURL": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGDataProvider=}"
    }
   }, 
   "CGDataProviderGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGDataProviderRelease": {
    "args": [
     {
      "name": "provider", 
      "typestr": "^{CGDataProvider=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGDataProviderRetain": {
    "args": [
     {
      "name": "provider", 
      "typestr": "^{CGDataProvider=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGDataProvider=}"
    }
   }, 
   "CGDisplayAddressForPosition": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "x", 
      "typestr": "i"
     }, 
     {
      "name": "y", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "^v"
    }
   }, 
   "CGDisplayAvailableModes": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CGDisplayBaseAddress": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "^v"
    }
   }, 
   "CGDisplayBeamPosition": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayBestModeForParameters": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "bitsPerPixel", 
      "typestr": "Q"
     }, 
     {
      "name": "width", 
      "typestr": "Q"
     }, 
     {
      "name": "height", 
      "typestr": "Q"
     }, 
     {
      "name": "exactMatch", 
      "typestr": "^I"
     }
    ], 
    "retval": {
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CGDisplayBestModeForParametersAndRefreshRate": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "bitsPerPixel", 
      "typestr": "Q"
     }, 
     {
      "name": "width", 
      "typestr": "Q"
     }, 
     {
      "name": "height", 
      "typestr": "Q"
     }, 
     {
      "name": "refreshRate", 
      "typestr": "d"
     }, 
     {
      "name": "exactMatch", 
      "typestr": "^I"
     }
    ], 
    "retval": {
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CGDisplayBestModeForParametersAndRefreshRateWithProperty": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "bitsPerPixel", 
      "typestr": "Q"
     }, 
     {
      "name": "width", 
      "typestr": "Q"
     }, 
     {
      "name": "height", 
      "typestr": "Q"
     }, 
     {
      "name": "refreshRate", 
      "typestr": "d"
     }, 
     {
      "name": "property", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "exactMatch", 
      "typestr": "^I"
     }
    ], 
    "retval": {
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CGDisplayBitsPerPixel": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGDisplayBitsPerSample": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGDisplayBounds": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   }, 
   "CGDisplayBytesPerRow": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGDisplayCanSetPalette": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayCapture": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGDisplayCaptureWithOptions": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "options", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGDisplayCopyAllDisplayModes": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "options", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CGDisplayCopyColorSpace": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGColorSpace=}"
    }
   }, 
   "CGDisplayCopyDisplayMode": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGDisplayMode=}"
    }
   }, 
   "CGDisplayCreateImage": {
    "args": [
     {
      "name": "displayID", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGImage=}"
    }
   }, 
   "CGDisplayCreateImageForRect": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGImage=}"
    }
   }, 
   "CGDisplayCurrentMode": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CGDisplayFade": {
    "args": [
     {
      "name": "token", 
      "typestr": "I"
     }, 
     {
      "name": "duration", 
      "typestr": "f"
     }, 
     {
      "name": "startBlend", 
      "typestr": "f"
     }, 
     {
      "name": "endBlend", 
      "typestr": "f"
     }, 
     {
      "name": "redBlend", 
      "typestr": "f"
     }, 
     {
      "name": "greenBlend", 
      "typestr": "f"
     }, 
     {
      "name": "blueBlend", 
      "typestr": "f"
     }, 
     {
      "name": "synchronous", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGDisplayFadeOperationInProgress": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayGammaTableCapacity": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayGetDrawingContext": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "^{CGContext=}"
    }
   }, 
   "CGDisplayHideCursor": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGDisplayIDToOpenGLDisplayMask": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayIOServicePort": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayIsActive": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayIsAlwaysInMirrorSet": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayIsAsleep": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayIsBuiltin": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayIsCaptured": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayIsInHWMirrorSet": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayIsInMirrorSet": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayIsMain": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayIsOnline": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayIsStereo": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayMirrorsDisplay": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayModeCopyPixelEncoding": {
    "args": [
     {
      "name": "mode", 
      "typestr": "^{CGDisplayMode=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CGDisplayModeGetHeight": {
    "args": [
     {
      "name": "mode", 
      "typestr": "^{CGDisplayMode=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGDisplayModeGetIODisplayModeID": {
    "args": [
     {
      "name": "mode", 
      "typestr": "^{CGDisplayMode=}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGDisplayModeGetIOFlags": {
    "args": [
     {
      "name": "mode", 
      "typestr": "^{CGDisplayMode=}"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayModeGetRefreshRate": {
    "args": [
     {
      "name": "mode", 
      "typestr": "^{CGDisplayMode=}"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CGDisplayModeGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGDisplayModeGetWidth": {
    "args": [
     {
      "name": "mode", 
      "typestr": "^{CGDisplayMode=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGDisplayModeIsUsableForDesktopGUI": {
    "args": [
     {
      "name": "mode", 
      "typestr": "^{CGDisplayMode=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGDisplayModeRelease": {
    "args": [
     {
      "name": "mode", 
      "typestr": "^{CGDisplayMode=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGDisplayModeRetain": {
    "args": [
     {
      "name": "mode", 
      "typestr": "^{CGDisplayMode=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGDisplayMode=}"
    }
   }, 
   "CGDisplayModelNumber": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayMoveCursorToPoint": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "point", 
      "typestr": "{CGPoint=dd}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGDisplayPixelsHigh": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGDisplayPixelsWide": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGDisplayPrimaryDisplay": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayRegisterReconfigurationCallback": {
    "args": [
     {
      "function": {
       "args": [
        {
         "typestr": [
          "I", 
          false
         ]
        }, 
        {
         "typestr": [
          "I", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "callback", 
      "typestr": "^?"
     }, 
     {
      "name": "userInfo", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGDisplayRelease": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGDisplayRemoveReconfigurationCallback": {
    "args": [
     {
      "function": {
       "args": [
        {
         "typestr": [
          "I", 
          false
         ]
        }, 
        {
         "typestr": [
          "I", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "callback", 
      "typestr": "^?"
     }, 
     {
      "name": "userInfo", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGDisplayRestoreColorSyncSettings": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGDisplayRotation": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CGDisplaySamplesPerPixel": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGDisplayScreenSize": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "{CGSize=dd}"
    }
   }, 
   "CGDisplaySerialNumber": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplaySetDisplayMode": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "mode", 
      "typestr": "^{CGDisplayMode=}"
     }, 
     {
      "name": "options", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGDisplaySetPalette": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "palette", 
      "typestr": "^{_CGDirectPaletteRef=}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGDisplaySetStereoOperation": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "stereo", 
      "typestr": "I"
     }, 
     {
      "name": "forceBlueLine", 
      "typestr": "I"
     }, 
     {
      "name": "option", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGDisplayShowCursor": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGDisplaySwitchToMode": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "mode", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGDisplayUnitNumber": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayUsesOpenGLAcceleration": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayVendorNumber": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGDisplayWaitForBeamPositionOutsideLines": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "upperScanLine", 
      "typestr": "I"
     }, 
     {
      "name": "lowerScanLine", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGEnableEventStateCombining": {
    "args": [
     {
      "name": "combineState", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGEventCreate": {
    "args": [
     {
      "name": "source", 
      "typestr": "^{__CGEventSource=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CGEvent=}"
    }
   }, 
   "CGEventCreateCopy": {
    "args": [
     {
      "name": "event", 
      "typestr": "^{__CGEvent=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CGEvent=}"
    }
   }, 
   "CGEventCreateData": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "event", 
      "typestr": "^{__CGEvent=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CGEventCreateFromData": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "data", 
      "typestr": "^{__CFData=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CGEvent=}"
    }
   }, 
   "CGEventCreateKeyboardEvent": {
    "args": [
     {
      "name": "source", 
      "typestr": "^{__CGEventSource=}"
     }, 
     {
      "name": "virtualKey", 
      "typestr": "S"
     }, 
     {
      "name": "keyDown", 
      "typestr": "B"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CGEvent=}"
    }
   }, 
   "CGEventCreateMouseEvent": {
    "args": [
     {
      "name": "source", 
      "typestr": "^{__CGEventSource=}"
     }, 
     {
      "name": "mouseType", 
      "typestr": "I"
     }, 
     {
      "name": "mouseCursorPosition", 
      "typestr": "{CGPoint=dd}"
     }, 
     {
      "name": "mouseButton", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CGEvent=}"
    }
   }, 
   "CGEventCreateScrollWheelEvent": {
    "args": [
     {
      "name": "source", 
      "typestr": "^{__CGEventSource=}"
     }, 
     {
      "name": "units", 
      "typestr": "I"
     }, 
     {
      "name": "wheelCount", 
      "typestr": "I"
     }, 
     {
      "name": "wheel1", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CGEvent=}"
    }, 
    "variadic": true
   }, 
   "CGEventCreateSourceFromEvent": {
    "args": [
     {
      "name": "event", 
      "typestr": "^{__CGEvent=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CGEventSource=}"
    }
   }, 
   "CGEventGetDoubleValueField": {
    "args": [
     {
      "name": "event", 
      "typestr": "^{__CGEvent=}"
     }, 
     {
      "name": "field", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CGEventGetFlags": {
    "args": [
     {
      "name": "event", 
      "typestr": "^{__CGEvent=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGEventGetIntegerValueField": {
    "args": [
     {
      "name": "event", 
      "typestr": "^{__CGEvent=}"
     }, 
     {
      "name": "field", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "q"
    }
   }, 
   "CGEventGetLocation": {
    "args": [
     {
      "name": "event", 
      "typestr": "^{__CGEvent=}"
     }
    ], 
    "retval": {
     "typestr": "{CGPoint=dd}"
    }
   }, 
   "CGEventGetTimestamp": {
    "args": [
     {
      "name": "event", 
      "typestr": "^{__CGEvent=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGEventGetType": {
    "args": [
     {
      "name": "event", 
      "typestr": "^{__CGEvent=}"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGEventGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGEventGetUnflippedLocation": {
    "args": [
     {
      "name": "event", 
      "typestr": "^{__CGEvent=}"
     }
    ], 
    "retval": {
     "typestr": "{CGPoint=dd}"
    }
   }, 
   "CGEventKeyboardGetUnicodeString": {
    "args": [
     {
      "name": "event", 
      "typestr": "^{__CGEvent=}"
     }, 
     {
      "name": "maxStringLength", 
      "typestr": "Q"
     }, 
     {
      "name": "actualStringLength", 
      "typestr": "^Q"
     }, 
     {
      "name": "unicodeString", 
      "typestr": "^T"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGEventKeyboardSetUnicodeString": {
    "args": [
     {
      "name": "event", 
      "typestr": "^{__CGEvent=}"
     }, 
     {
      "name": "stringLength", 
      "typestr": "Q"
     }, 
     {
      "name": "unicodeString", 
      "typestr": "^T"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGEventPost": {
    "args": [
     {
      "name": "tap", 
      "typestr": "I"
     }, 
     {
      "name": "event", 
      "typestr": "^{__CGEvent=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGEventPostToPSN": {
    "args": [
     {
      "name": "processSerialNumber", 
      "typestr": "^v"
     }, 
     {
      "name": "event", 
      "typestr": "^{__CGEvent=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGEventSetDoubleValueField": {
    "args": [
     {
      "name": "event", 
      "typestr": "^{__CGEvent=}"
     }, 
     {
      "name": "field", 
      "typestr": "I"
     }, 
     {
      "name": "value", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGEventSetFlags": {
    "args": [
     {
      "name": "event", 
      "typestr": "^{__CGEvent=}"
     }, 
     {
      "name": "flags", 
      "typestr": "Q"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGEventSetIntegerValueField": {
    "args": [
     {
      "name": "event", 
      "typestr": "^{__CGEvent=}"
     }, 
     {
      "name": "field", 
      "typestr": "I"
     }, 
     {
      "name": "value", 
      "typestr": "q"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGEventSetLocation": {
    "args": [
     {
      "name": "event", 
      "typestr": "^{__CGEvent=}"
     }, 
     {
      "name": "location", 
      "typestr": "{CGPoint=dd}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGEventSetSource": {
    "args": [
     {
      "name": "event", 
      "typestr": "^{__CGEvent=}"
     }, 
     {
      "name": "source", 
      "typestr": "^{__CGEventSource=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGEventSetTimestamp": {
    "args": [
     {
      "name": "event", 
      "typestr": "^{__CGEvent=}"
     }, 
     {
      "name": "timestamp", 
      "typestr": "Q"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGEventSetType": {
    "args": [
     {
      "name": "event", 
      "typestr": "^{__CGEvent=}"
     }, 
     {
      "name": "type", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGEventSourceButtonState": {
    "args": [
     {
      "name": "stateID", 
      "typestr": "I"
     }, 
     {
      "name": "button", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGEventSourceCounterForEventType": {
    "args": [
     {
      "name": "stateID", 
      "typestr": "I"
     }, 
     {
      "name": "eventType", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGEventSourceCreate": {
    "args": [
     {
      "name": "stateID", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CGEventSource=}"
    }
   }, 
   "CGEventSourceFlagsState": {
    "args": [
     {
      "name": "stateID", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGEventSourceGetKeyboardType": {
    "args": [
     {
      "name": "source", 
      "typestr": "^{__CGEventSource=}"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGEventSourceGetLocalEventsFilterDuringSuppressionState": {
    "args": [
     {
      "name": "source", 
      "typestr": "^{__CGEventSource=}"
     }, 
     {
      "name": "state", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGEventSourceGetLocalEventsSuppressionInterval": {
    "args": [
     {
      "name": "source", 
      "typestr": "^{__CGEventSource=}"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CGEventSourceGetPixelsPerLine": {
    "args": [
     {
      "name": "source", 
      "typestr": "^{__CGEventSource=}"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CGEventSourceGetSourceStateID": {
    "args": [
     {
      "name": "source", 
      "typestr": "^{__CGEventSource=}"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGEventSourceGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGEventSourceGetUserData": {
    "args": [
     {
      "name": "source", 
      "typestr": "^{__CGEventSource=}"
     }
    ], 
    "retval": {
     "typestr": "q"
    }
   }, 
   "CGEventSourceKeyState": {
    "args": [
     {
      "name": "stateID", 
      "typestr": "I"
     }, 
     {
      "name": "key", 
      "typestr": "S"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGEventSourceSecondsSinceLastEventType": {
    "args": [
     {
      "name": "stateID", 
      "typestr": "I"
     }, 
     {
      "name": "eventType", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CGEventSourceSetKeyboardType": {
    "args": [
     {
      "name": "source", 
      "typestr": "^{__CGEventSource=}"
     }, 
     {
      "name": "keyboardType", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGEventSourceSetLocalEventsFilterDuringSuppressionState": {
    "args": [
     {
      "name": "source", 
      "typestr": "^{__CGEventSource=}"
     }, 
     {
      "name": "filter", 
      "typestr": "I"
     }, 
     {
      "name": "state", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGEventSourceSetLocalEventsSuppressionInterval": {
    "args": [
     {
      "name": "source", 
      "typestr": "^{__CGEventSource=}"
     }, 
     {
      "name": "seconds", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGEventSourceSetPixelsPerLine": {
    "args": [
     {
      "name": "source", 
      "typestr": "^{__CGEventSource=}"
     }, 
     {
      "name": "pixelsPerLine", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGEventSourceSetUserData": {
    "args": [
     {
      "name": "source", 
      "typestr": "^{__CGEventSource=}"
     }, 
     {
      "name": "userData", 
      "typestr": "q"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGEventTapCreate": {
    "args": [
     {
      "name": "tap", 
      "typestr": "I"
     }, 
     {
      "name": "place", 
      "typestr": "I"
     }, 
     {
      "name": "options", 
      "typestr": "I"
     }, 
     {
      "name": "eventsOfInterest", 
      "typestr": "Q"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CGEventTapProxy=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "I", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{__CGEvent=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "^{__CGEvent=}", 
         false
        ]
       }
      }, 
      "name": "callback", 
      "typestr": "^?"
     }, 
     {
      "name": "userInfo", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFMachPort=}"
    }
   }, 
   "CGEventTapCreateForPSN": {
    "args": [
     {
      "name": "processSerialNumber", 
      "typestr": "^v"
     }, 
     {
      "name": "place", 
      "typestr": "I"
     }, 
     {
      "name": "options", 
      "typestr": "I"
     }, 
     {
      "name": "eventsOfInterest", 
      "typestr": "Q"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CGEventTapProxy=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "I", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{__CGEvent=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "^{__CGEvent=}", 
         false
        ]
       }
      }, 
      "name": "callback", 
      "typestr": "^?"
     }, 
     {
      "name": "userInfo", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFMachPort=}"
    }
   }, 
   "CGEventTapEnable": {
    "args": [
     {
      "name": "tap", 
      "typestr": "^{__CFMachPort=}"
     }, 
     {
      "name": "enable", 
      "typestr": "B"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGEventTapIsEnabled": {
    "args": [
     {
      "name": "tap", 
      "typestr": "^{__CFMachPort=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGEventTapPostEvent": {
    "args": [
     {
      "name": "proxy", 
      "typestr": "^{__CGEventTapProxy=}"
     }, 
     {
      "name": "event", 
      "typestr": "^{__CGEvent=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGFontCanCreatePostScriptSubset": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }, 
     {
      "name": "format", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "B"
    }
   }, 
   "CGFontCopyFullName": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CGFontCopyGlyphNameForGlyph": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }, 
     {
      "name": "glyph", 
      "typestr": "S"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CGFontCopyPostScriptName": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CGFontCopyTableForTag": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }, 
     {
      "name": "tag", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CGFontCopyTableTags": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CGFontCopyVariationAxes": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CGFontCopyVariations": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CGFontCreateCopyWithVariations": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }, 
     {
      "name": "variations", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGFont=}"
    }
   }, 
   "CGFontCreatePostScriptEncoding": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }, 
     {
      "name": "encoding", 
      "typestr": "[256S]"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CGFontCreatePostScriptSubset": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }, 
     {
      "name": "subsetName", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "format", 
      "typestr": "i"
     }, 
     {
      "name": "glyphs", 
      "typestr": "^S"
     }, 
     {
      "name": "count", 
      "typestr": "Q"
     }, 
     {
      "name": "encoding", 
      "typestr": "[256S]"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CGFontCreateWithDataProvider": {
    "args": [
     {
      "name": "provider", 
      "typestr": "^{CGDataProvider=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGFont=}"
    }
   }, 
   "CGFontCreateWithFontName": {
    "args": [
     {
      "name": "name", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGFont=}"
    }
   }, 
   "CGFontCreateWithPlatformFont": {
    "args": [
     {
      "name": "platformFontReference", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGFont=}"
    }
   }, 
   "CGFontGetAscent": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGFontGetCapHeight": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGFontGetDescent": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGFontGetFontBBox": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }
    ], 
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   }, 
   "CGFontGetGlyphAdvances": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }, 
     {
      "name": "glyphs", 
      "typestr": "^S"
     }, 
     {
      "name": "count", 
      "typestr": "Q"
     }, 
     {
      "name": "advances", 
      "typestr": "^i"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGFontGetGlyphBBoxes": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }, 
     {
      "name": "glyphs", 
      "typestr": "^S"
     }, 
     {
      "name": "count", 
      "typestr": "Q"
     }, 
     {
      "name": "bboxes", 
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGFontGetGlyphWithGlyphName": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }, 
     {
      "name": "name", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "S"
    }
   }, 
   "CGFontGetItalicAngle": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CGFontGetLeading": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGFontGetNumberOfGlyphs": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGFontGetStemV": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CGFontGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGFontGetUnitsPerEm": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGFontGetXHeight": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGFontRelease": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGFontRetain": {
    "args": [
     {
      "name": "font", 
      "typestr": "^{CGFont=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGFont=}"
    }
   }, 
   "CGFunctionCreate": {
    "args": [
     {
      "name": "info", 
      "typestr": "^v"
     }, 
     {
      "name": "domainDimension", 
      "typestr": "Q"
     }, 
     {
      "name": "domain", 
      "typestr": "^d"
     }, 
     {
      "name": "rangeDimension", 
      "typestr": "Q"
     }, 
     {
      "name": "range", 
      "typestr": "^d"
     }, 
     {
      "name": "callbacks", 
      "typestr": "^{CGFunctionCallbacks=I^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGFunction=}"
    }
   }, 
   "CGFunctionGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGFunctionRelease": {
    "args": [
     {
      "name": "function", 
      "typestr": "^{CGFunction=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGFunctionRetain": {
    "args": [
     {
      "name": "function", 
      "typestr": "^{CGFunction=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGFunction=}"
    }
   }, 
   "CGGLContextCreate": {
    "args": [
     {
      "name": "glContext", 
      "typestr": "^v"
     }, 
     {
      "name": "size", 
      "typestr": "{CGSize=dd}"
     }, 
     {
      "name": "colorspace", 
      "typestr": "^{CGColorSpace=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGContext=}"
    }
   }, 
   "CGGLContextUpdateViewportSize": {
    "args": [
     {
      "name": "c", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "size", 
      "typestr": "{CGSize=dd}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGGetActiveDisplayList": {
    "args": [
     {
      "name": "maxDisplays", 
      "typestr": "I"
     }, 
     {
      "name": "activeDisplays", 
      "typestr": "^I"
     }, 
     {
      "name": "displayCount", 
      "typestr": "^I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGGetDisplayTransferByFormula": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "redMin", 
      "typestr": "^f"
     }, 
     {
      "name": "redMax", 
      "typestr": "^f"
     }, 
     {
      "name": "redGamma", 
      "typestr": "^f"
     }, 
     {
      "name": "greenMin", 
      "typestr": "^f"
     }, 
     {
      "name": "greenMax", 
      "typestr": "^f"
     }, 
     {
      "name": "greenGamma", 
      "typestr": "^f"
     }, 
     {
      "name": "blueMin", 
      "typestr": "^f"
     }, 
     {
      "name": "blueMax", 
      "typestr": "^f"
     }, 
     {
      "name": "blueGamma", 
      "typestr": "^f"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGGetDisplayTransferByTable": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "capacity", 
      "typestr": "I"
     }, 
     {
      "name": "redTable", 
      "typestr": "^f"
     }, 
     {
      "name": "greenTable", 
      "typestr": "^f"
     }, 
     {
      "name": "blueTable", 
      "typestr": "^f"
     }, 
     {
      "name": "sampleCount", 
      "typestr": "^I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGGetDisplaysWithOpenGLDisplayMask": {
    "args": [
     {
      "name": "mask", 
      "typestr": "I"
     }, 
     {
      "name": "maxDisplays", 
      "typestr": "I"
     }, 
     {
      "name": "displays", 
      "typestr": "^I"
     }, 
     {
      "name": "matchingDisplayCount", 
      "typestr": "^I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGGetDisplaysWithPoint": {
    "args": [
     {
      "name": "point", 
      "typestr": "{CGPoint=dd}"
     }, 
     {
      "name": "maxDisplays", 
      "typestr": "I"
     }, 
     {
      "name": "displays", 
      "typestr": "^I"
     }, 
     {
      "name": "matchingDisplayCount", 
      "typestr": "^I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGGetDisplaysWithRect": {
    "args": [
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "maxDisplays", 
      "typestr": "I"
     }, 
     {
      "name": "displays", 
      "typestr": "^I"
     }, 
     {
      "name": "matchingDisplayCount", 
      "typestr": "^I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGGetEventTapList": {
    "args": [
     {
      "name": "maxNumberOfTaps", 
      "typestr": "I"
     }, 
     {
      "name": "tapList", 
      "typestr": "^{__CGEventTapInformation=IIIQiiBfff}"
     }, 
     {
      "name": "eventTapCount", 
      "typestr": "^I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGGetLastMouseDelta": {
    "args": [
     {
      "name": "deltaX", 
      "typestr": "^i"
     }, 
     {
      "name": "deltaY", 
      "typestr": "^i"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGGetOnlineDisplayList": {
    "args": [
     {
      "name": "maxDisplays", 
      "typestr": "I"
     }, 
     {
      "name": "onlineDisplays", 
      "typestr": "^I"
     }, 
     {
      "name": "displayCount", 
      "typestr": "^I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGGradientCreateWithColorComponents": {
    "args": [
     {
      "name": "space", 
      "typestr": "^{CGColorSpace=}"
     }, 
     {
      "name": "components", 
      "typestr": "^d"
     }, 
     {
      "name": "locations", 
      "typestr": "^d"
     }, 
     {
      "name": "count", 
      "typestr": "Q"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGGradient=}"
    }
   }, 
   "CGGradientCreateWithColors": {
    "args": [
     {
      "name": "space", 
      "typestr": "^{CGColorSpace=}"
     }, 
     {
      "name": "colors", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "locations", 
      "typestr": "^d"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGGradient=}"
    }
   }, 
   "CGGradientGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGGradientRelease": {
    "args": [
     {
      "name": "gradient", 
      "typestr": "^{CGGradient=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGGradientRetain": {
    "args": [
     {
      "name": "gradient", 
      "typestr": "^{CGGradient=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGGradient=}"
    }
   }, 
   "CGImageCreate": {
    "args": [
     {
      "name": "width", 
      "typestr": "Q"
     }, 
     {
      "name": "height", 
      "typestr": "Q"
     }, 
     {
      "name": "bitsPerComponent", 
      "typestr": "Q"
     }, 
     {
      "name": "bitsPerPixel", 
      "typestr": "Q"
     }, 
     {
      "name": "bytesPerRow", 
      "typestr": "Q"
     }, 
     {
      "name": "space", 
      "typestr": "^{CGColorSpace=}"
     }, 
     {
      "name": "bitmapInfo", 
      "typestr": "I"
     }, 
     {
      "name": "provider", 
      "typestr": "^{CGDataProvider=}"
     }, 
     {
      "name": "decode", 
      "typestr": "^d"
     }, 
     {
      "name": "shouldInterpolate", 
      "typestr": "B"
     }, 
     {
      "name": "intent", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGImage=}"
    }
   }, 
   "CGImageCreateCopy": {
    "args": [
     {
      "name": "image", 
      "typestr": "^{CGImage=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGImage=}"
    }
   }, 
   "CGImageCreateCopyWithColorSpace": {
    "args": [
     {
      "name": "image", 
      "typestr": "^{CGImage=}"
     }, 
     {
      "name": "space", 
      "typestr": "^{CGColorSpace=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGImage=}"
    }
   }, 
   "CGImageCreateWithImageInRect": {
    "args": [
     {
      "name": "image", 
      "typestr": "^{CGImage=}"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGImage=}"
    }
   }, 
   "CGImageCreateWithJPEGDataProvider": {
    "args": [
     {
      "name": "source", 
      "typestr": "^{CGDataProvider=}"
     }, 
     {
      "name": "decode", 
      "typestr": "^d"
     }, 
     {
      "name": "shouldInterpolate", 
      "typestr": "B"
     }, 
     {
      "name": "intent", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGImage=}"
    }
   }, 
   "CGImageCreateWithMask": {
    "args": [
     {
      "name": "image", 
      "typestr": "^{CGImage=}"
     }, 
     {
      "name": "mask", 
      "typestr": "^{CGImage=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGImage=}"
    }
   }, 
   "CGImageCreateWithMaskingColors": {
    "args": [
     {
      "name": "image", 
      "typestr": "^{CGImage=}"
     }, 
     {
      "name": "components", 
      "typestr": "^d"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGImage=}"
    }
   }, 
   "CGImageCreateWithPNGDataProvider": {
    "args": [
     {
      "name": "source", 
      "typestr": "^{CGDataProvider=}"
     }, 
     {
      "name": "decode", 
      "typestr": "^d"
     }, 
     {
      "name": "shouldInterpolate", 
      "typestr": "B"
     }, 
     {
      "name": "intent", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGImage=}"
    }
   }, 
   "CGImageGetAlphaInfo": {
    "args": [
     {
      "name": "image", 
      "typestr": "^{CGImage=}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGImageGetBitmapInfo": {
    "args": [
     {
      "name": "image", 
      "typestr": "^{CGImage=}"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGImageGetBitsPerComponent": {
    "args": [
     {
      "name": "image", 
      "typestr": "^{CGImage=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGImageGetBitsPerPixel": {
    "args": [
     {
      "name": "image", 
      "typestr": "^{CGImage=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGImageGetBytesPerRow": {
    "args": [
     {
      "name": "image", 
      "typestr": "^{CGImage=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGImageGetColorSpace": {
    "args": [
     {
      "name": "image", 
      "typestr": "^{CGImage=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGColorSpace=}"
    }
   }, 
   "CGImageGetDataProvider": {
    "args": [
     {
      "name": "image", 
      "typestr": "^{CGImage=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGDataProvider=}"
    }
   }, 
   "CGImageGetDecode": {
    "args": [
     {
      "name": "image", 
      "typestr": "^{CGImage=}"
     }
    ], 
    "retval": {
     "typestr": "^d"
    }
   }, 
   "CGImageGetHeight": {
    "args": [
     {
      "name": "image", 
      "typestr": "^{CGImage=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGImageGetRenderingIntent": {
    "args": [
     {
      "name": "image", 
      "typestr": "^{CGImage=}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGImageGetShouldInterpolate": {
    "args": [
     {
      "name": "image", 
      "typestr": "^{CGImage=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGImageGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGImageGetWidth": {
    "args": [
     {
      "name": "image", 
      "typestr": "^{CGImage=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGImageIsMask": {
    "args": [
     {
      "name": "image", 
      "typestr": "^{CGImage=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGImageMaskCreate": {
    "args": [
     {
      "name": "width", 
      "typestr": "Q"
     }, 
     {
      "name": "height", 
      "typestr": "Q"
     }, 
     {
      "name": "bitsPerComponent", 
      "typestr": "Q"
     }, 
     {
      "name": "bitsPerPixel", 
      "typestr": "Q"
     }, 
     {
      "name": "bytesPerRow", 
      "typestr": "Q"
     }, 
     {
      "name": "provider", 
      "typestr": "^{CGDataProvider=}"
     }, 
     {
      "name": "decode", 
      "typestr": "^d"
     }, 
     {
      "name": "shouldInterpolate", 
      "typestr": "B"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGImage=}"
    }
   }, 
   "CGImageRelease": {
    "args": [
     {
      "name": "image", 
      "typestr": "^{CGImage=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGImageRetain": {
    "args": [
     {
      "name": "image", 
      "typestr": "^{CGImage=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGImage=}"
    }
   }, 
   "CGInhibitLocalEvents": {
    "args": [
     {
      "name": "inhibit", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGLayerCreateWithContext": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "size", 
      "typestr": "{CGSize=dd}"
     }, 
     {
      "name": "auxiliaryInfo", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGLayer=}"
    }
   }, 
   "CGLayerGetContext": {
    "args": [
     {
      "name": "layer", 
      "typestr": "^{CGLayer=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGContext=}"
    }
   }, 
   "CGLayerGetSize": {
    "args": [
     {
      "name": "layer", 
      "typestr": "^{CGLayer=}"
     }
    ], 
    "retval": {
     "typestr": "{CGSize=dd}"
    }
   }, 
   "CGLayerGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGLayerRelease": {
    "args": [
     {
      "name": "layer", 
      "typestr": "^{CGLayer=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGLayerRetain": {
    "args": [
     {
      "name": "layer", 
      "typestr": "^{CGLayer=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGLayer=}"
    }
   }, 
   "CGMainDisplayID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGOpenGLDisplayMaskToDisplayID": {
    "args": [
     {
      "name": "mask", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGPDFArrayGetArray": {
    "args": [
     {
      "name": "array", 
      "typestr": "^{CGPDFArray=}"
     }, 
     {
      "name": "index", 
      "typestr": "Q"
     }, 
     {
      "name": "value", 
      "typestr": "^^{CGPDFArray=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFArrayGetBoolean": {
    "args": [
     {
      "name": "array", 
      "typestr": "^{CGPDFArray=}"
     }, 
     {
      "name": "index", 
      "typestr": "Q"
     }, 
     {
      "name": "value", 
      "typestr": "^C"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFArrayGetCount": {
    "args": [
     {
      "name": "array", 
      "typestr": "^{CGPDFArray=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGPDFArrayGetDictionary": {
    "args": [
     {
      "name": "array", 
      "typestr": "^{CGPDFArray=}"
     }, 
     {
      "name": "index", 
      "typestr": "Q"
     }, 
     {
      "name": "value", 
      "typestr": "^^{CGPDFDictionary=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFArrayGetInteger": {
    "args": [
     {
      "name": "array", 
      "typestr": "^{CGPDFArray=}"
     }, 
     {
      "name": "index", 
      "typestr": "Q"
     }, 
     {
      "name": "value", 
      "typestr": "^q"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFArrayGetName": {
    "args": [
     {
      "name": "array", 
      "typestr": "^{CGPDFArray=}"
     }, 
     {
      "name": "index", 
      "typestr": "Q"
     }, 
     {
      "name": "value", 
      "typestr": "^^c"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFArrayGetNull": {
    "args": [
     {
      "name": "array", 
      "typestr": "^{CGPDFArray=}"
     }, 
     {
      "name": "index", 
      "typestr": "Q"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFArrayGetNumber": {
    "args": [
     {
      "name": "array", 
      "typestr": "^{CGPDFArray=}"
     }, 
     {
      "name": "index", 
      "typestr": "Q"
     }, 
     {
      "name": "value", 
      "typestr": "^d"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFArrayGetObject": {
    "args": [
     {
      "name": "array", 
      "typestr": "^{CGPDFArray=}"
     }, 
     {
      "name": "index", 
      "typestr": "Q"
     }, 
     {
      "name": "value", 
      "typestr": "^^(CGPDFObject=)"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFArrayGetStream": {
    "args": [
     {
      "name": "array", 
      "typestr": "^{CGPDFArray=}"
     }, 
     {
      "name": "index", 
      "typestr": "Q"
     }, 
     {
      "name": "value", 
      "typestr": "^^{CGPDFStream=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFArrayGetString": {
    "args": [
     {
      "name": "array", 
      "typestr": "^{CGPDFArray=}"
     }, 
     {
      "name": "index", 
      "typestr": "Q"
     }, 
     {
      "name": "value", 
      "typestr": "^^{CGPDFString=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFContentStreamCreateWithPage": {
    "args": [
     {
      "name": "page", 
      "typestr": "^{CGPDFPage=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGPDFContentStream=}"
    }
   }, 
   "CGPDFContentStreamCreateWithStream": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{CGPDFStream=}"
     }, 
     {
      "name": "streamResources", 
      "typestr": "^{CGPDFDictionary=}"
     }, 
     {
      "name": "parent", 
      "typestr": "^{CGPDFContentStream=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGPDFContentStream=}"
    }
   }, 
   "CGPDFContentStreamGetResource": {
    "args": [
     {
      "name": "cs", 
      "typestr": "^{CGPDFContentStream=}"
     }, 
     {
      "name": "category", 
      "typestr": "^c"
     }, 
     {
      "name": "name", 
      "typestr": "^c"
     }
    ], 
    "retval": {
     "typestr": "^(CGPDFObject=)"
    }
   }, 
   "CGPDFContentStreamGetStreams": {
    "args": [
     {
      "name": "cs", 
      "typestr": "^{CGPDFContentStream=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CGPDFContentStreamRelease": {
    "args": [
     {
      "name": "cs", 
      "typestr": "^{CGPDFContentStream=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPDFContentStreamRetain": {
    "args": [
     {
      "name": "cs", 
      "typestr": "^{CGPDFContentStream=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGPDFContentStream=}"
    }
   }, 
   "CGPDFContextAddDestinationAtPoint": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "name", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "point", 
      "typestr": "{CGPoint=dd}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPDFContextBeginPage": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "pageInfo", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPDFContextClose": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPDFContextCreate": {
    "args": [
     {
      "name": "consumer", 
      "typestr": "^{CGDataConsumer=}"
     }, 
     {
      "name": "mediaBox", 
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "auxiliaryInfo", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGContext=}"
    }
   }, 
   "CGPDFContextCreateWithURL": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "mediaBox", 
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "auxiliaryInfo", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGContext=}"
    }
   }, 
   "CGPDFContextEndPage": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPDFContextSetDestinationForRect": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "name", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPDFContextSetURLForRect": {
    "args": [
     {
      "name": "context", 
      "typestr": "^{CGContext=}"
     }, 
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPDFDictionaryApplyFunction": {
    "args": [
     {
      "name": "dict", 
      "typestr": "^{CGPDFDictionary=}"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^c", 
          false
         ]
        }, 
        {
         "typestr": [
          "^(CGPDFObject=)", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "function", 
      "typestr": "^?"
     }, 
     {
      "name": "info", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPDFDictionaryGetArray": {
    "args": [
     {
      "name": "dict", 
      "typestr": "^{CGPDFDictionary=}"
     }, 
     {
      "name": "key", 
      "typestr": "^c"
     }, 
     {
      "name": "value", 
      "typestr": "^^{CGPDFArray=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFDictionaryGetBoolean": {
    "args": [
     {
      "name": "dict", 
      "typestr": "^{CGPDFDictionary=}"
     }, 
     {
      "name": "key", 
      "typestr": "^c"
     }, 
     {
      "name": "value", 
      "typestr": "^C"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFDictionaryGetCount": {
    "args": [
     {
      "name": "dict", 
      "typestr": "^{CGPDFDictionary=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGPDFDictionaryGetDictionary": {
    "args": [
     {
      "name": "dict", 
      "typestr": "^{CGPDFDictionary=}"
     }, 
     {
      "name": "key", 
      "typestr": "^c"
     }, 
     {
      "name": "value", 
      "typestr": "^^{CGPDFDictionary=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFDictionaryGetInteger": {
    "args": [
     {
      "name": "dict", 
      "typestr": "^{CGPDFDictionary=}"
     }, 
     {
      "name": "key", 
      "typestr": "^c"
     }, 
     {
      "name": "value", 
      "typestr": "^q"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFDictionaryGetName": {
    "args": [
     {
      "name": "dict", 
      "typestr": "^{CGPDFDictionary=}"
     }, 
     {
      "name": "key", 
      "typestr": "^c"
     }, 
     {
      "name": "value", 
      "typestr": "^^c"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFDictionaryGetNumber": {
    "args": [
     {
      "name": "dict", 
      "typestr": "^{CGPDFDictionary=}"
     }, 
     {
      "name": "key", 
      "typestr": "^c"
     }, 
     {
      "name": "value", 
      "typestr": "^d"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFDictionaryGetObject": {
    "args": [
     {
      "name": "dict", 
      "typestr": "^{CGPDFDictionary=}"
     }, 
     {
      "name": "key", 
      "typestr": "^c"
     }, 
     {
      "name": "value", 
      "typestr": "^^(CGPDFObject=)"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFDictionaryGetStream": {
    "args": [
     {
      "name": "dict", 
      "typestr": "^{CGPDFDictionary=}"
     }, 
     {
      "name": "key", 
      "typestr": "^c"
     }, 
     {
      "name": "value", 
      "typestr": "^^{CGPDFStream=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFDictionaryGetString": {
    "args": [
     {
      "name": "dict", 
      "typestr": "^{CGPDFDictionary=}"
     }, 
     {
      "name": "key", 
      "typestr": "^c"
     }, 
     {
      "name": "value", 
      "typestr": "^^{CGPDFString=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFDocumentAllowsCopying": {
    "args": [
     {
      "name": "document", 
      "typestr": "^{CGPDFDocument=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "B"
    }
   }, 
   "CGPDFDocumentAllowsPrinting": {
    "args": [
     {
      "name": "document", 
      "typestr": "^{CGPDFDocument=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFDocumentCreateWithProvider": {
    "args": [
     {
      "name": "provider", 
      "typestr": "^{CGDataProvider=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGPDFDocument=}"
    }
   }, 
   "CGPDFDocumentCreateWithURL": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGPDFDocument=}"
    }
   }, 
   "CGPDFDocumentGetArtBox": {
    "args": [
     {
      "name": "document", 
      "typestr": "^{CGPDFDocument=}"
     }, 
     {
      "name": "page", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   }, 
   "CGPDFDocumentGetBleedBox": {
    "args": [
     {
      "name": "document", 
      "typestr": "^{CGPDFDocument=}"
     }, 
     {
      "name": "page", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   }, 
   "CGPDFDocumentGetCatalog": {
    "args": [
     {
      "name": "document", 
      "typestr": "^{CGPDFDocument=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGPDFDictionary=}"
    }
   }, 
   "CGPDFDocumentGetCropBox": {
    "args": [
     {
      "name": "document", 
      "typestr": "^{CGPDFDocument=}"
     }, 
     {
      "name": "page", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   }, 
   "CGPDFDocumentGetID": {
    "args": [
     {
      "name": "document", 
      "typestr": "^{CGPDFDocument=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGPDFArray=}"
    }
   }, 
   "CGPDFDocumentGetInfo": {
    "args": [
     {
      "name": "document", 
      "typestr": "^{CGPDFDocument=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGPDFDictionary=}"
    }
   }, 
   "CGPDFDocumentGetMediaBox": {
    "args": [
     {
      "name": "document", 
      "typestr": "^{CGPDFDocument=}"
     }, 
     {
      "name": "page", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   }, 
   "CGPDFDocumentGetNumberOfPages": {
    "args": [
     {
      "name": "document", 
      "typestr": "^{CGPDFDocument=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGPDFDocumentGetPage": {
    "args": [
     {
      "name": "document", 
      "typestr": "^{CGPDFDocument=}"
     }, 
     {
      "name": "pageNumber", 
      "typestr": "Q"
     }
    ], 
    "retval": {
     "typestr": "^{CGPDFPage=}"
    }
   }, 
   "CGPDFDocumentGetRotationAngle": {
    "args": [
     {
      "name": "document", 
      "typestr": "^{CGPDFDocument=}"
     }, 
     {
      "name": "page", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGPDFDocumentGetTrimBox": {
    "args": [
     {
      "name": "document", 
      "typestr": "^{CGPDFDocument=}"
     }, 
     {
      "name": "page", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   }, 
   "CGPDFDocumentGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGPDFDocumentGetVersion": {
    "args": [
     {
      "name": "document", 
      "typestr": "^{CGPDFDocument=}"
     }, 
     {
      "name": "majorVersion", 
      "typestr": "^i"
     }, 
     {
      "name": "minorVersion", 
      "typestr": "^i"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPDFDocumentIsEncrypted": {
    "args": [
     {
      "name": "document", 
      "typestr": "^{CGPDFDocument=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFDocumentIsUnlocked": {
    "args": [
     {
      "name": "document", 
      "typestr": "^{CGPDFDocument=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFDocumentRelease": {
    "args": [
     {
      "name": "document", 
      "typestr": "^{CGPDFDocument=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPDFDocumentRetain": {
    "args": [
     {
      "name": "document", 
      "typestr": "^{CGPDFDocument=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGPDFDocument=}"
    }
   }, 
   "CGPDFDocumentUnlockWithPassword": {
    "args": [
     {
      "name": "document", 
      "typestr": "^{CGPDFDocument=}"
     }, 
     {
      "name": "password", 
      "typestr": "^c"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFObjectGetType": {
    "args": [
     {
      "name": "object", 
      "typestr": "^(CGPDFObject=)"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGPDFObjectGetValue": {
    "args": [
     {
      "name": "object", 
      "typestr": "^(CGPDFObject=)"
     }, 
     {
      "name": "type", 
      "typestr": "i"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFOperatorTableCreate": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGPDFOperatorTable=}"
    }
   }, 
   "CGPDFOperatorTableRelease": {
    "args": [
     {
      "name": "table", 
      "typestr": "^{CGPDFOperatorTable=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPDFOperatorTableRetain": {
    "args": [
     {
      "name": "table", 
      "typestr": "^{CGPDFOperatorTable=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGPDFOperatorTable=}"
    }
   }, 
   "CGPDFOperatorTableSetCallback": {
    "args": [
     {
      "name": "table", 
      "typestr": "^{CGPDFOperatorTable=}"
     }, 
     {
      "name": "name", 
      "typestr": "^c"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{CGPDFScanner=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "callback", 
      "typestr": "^?"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPDFPageGetBoxRect": {
    "args": [
     {
      "name": "page", 
      "typestr": "^{CGPDFPage=}"
     }, 
     {
      "name": "box", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   }, 
   "CGPDFPageGetDictionary": {
    "args": [
     {
      "name": "page", 
      "typestr": "^{CGPDFPage=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGPDFDictionary=}"
    }
   }, 
   "CGPDFPageGetDocument": {
    "args": [
     {
      "name": "page", 
      "typestr": "^{CGPDFPage=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGPDFDocument=}"
    }
   }, 
   "CGPDFPageGetDrawingTransform": {
    "args": [
     {
      "name": "page", 
      "typestr": "^{CGPDFPage=}"
     }, 
     {
      "name": "box", 
      "typestr": "i"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "rotate", 
      "typestr": "i"
     }, 
     {
      "name": "preserveAspectRatio", 
      "typestr": "B"
     }
    ], 
    "retval": {
     "typestr": "{CGAffineTransform=dddddd}"
    }
   }, 
   "CGPDFPageGetPageNumber": {
    "args": [
     {
      "name": "page", 
      "typestr": "^{CGPDFPage=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGPDFPageGetRotationAngle": {
    "args": [
     {
      "name": "page", 
      "typestr": "^{CGPDFPage=}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGPDFPageGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGPDFPageRelease": {
    "args": [
     {
      "name": "page", 
      "typestr": "^{CGPDFPage=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPDFPageRetain": {
    "args": [
     {
      "name": "page", 
      "typestr": "^{CGPDFPage=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGPDFPage=}"
    }
   }, 
   "CGPDFScannerCreate": {
    "args": [
     {
      "name": "cs", 
      "typestr": "^{CGPDFContentStream=}"
     }, 
     {
      "name": "table", 
      "typestr": "^{CGPDFOperatorTable=}"
     }, 
     {
      "name": "info", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGPDFScanner=}"
    }
   }, 
   "CGPDFScannerGetContentStream": {
    "args": [
     {
      "name": "scanner", 
      "typestr": "^{CGPDFScanner=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGPDFContentStream=}"
    }
   }, 
   "CGPDFScannerPopArray": {
    "args": [
     {
      "name": "scanner", 
      "typestr": "^{CGPDFScanner=}"
     }, 
     {
      "name": "value", 
      "typestr": "^^{CGPDFArray=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFScannerPopBoolean": {
    "args": [
     {
      "name": "scanner", 
      "typestr": "^{CGPDFScanner=}"
     }, 
     {
      "name": "value", 
      "typestr": "^C"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFScannerPopDictionary": {
    "args": [
     {
      "name": "scanner", 
      "typestr": "^{CGPDFScanner=}"
     }, 
     {
      "name": "value", 
      "typestr": "^^{CGPDFDictionary=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFScannerPopInteger": {
    "args": [
     {
      "name": "scanner", 
      "typestr": "^{CGPDFScanner=}"
     }, 
     {
      "name": "value", 
      "typestr": "^q"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFScannerPopName": {
    "args": [
     {
      "name": "scanner", 
      "typestr": "^{CGPDFScanner=}"
     }, 
     {
      "name": "value", 
      "typestr": "^^c"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFScannerPopNumber": {
    "args": [
     {
      "name": "scanner", 
      "typestr": "^{CGPDFScanner=}"
     }, 
     {
      "name": "value", 
      "typestr": "^d"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFScannerPopObject": {
    "args": [
     {
      "name": "scanner", 
      "typestr": "^{CGPDFScanner=}"
     }, 
     {
      "name": "value", 
      "typestr": "^^(CGPDFObject=)"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFScannerPopStream": {
    "args": [
     {
      "name": "scanner", 
      "typestr": "^{CGPDFScanner=}"
     }, 
     {
      "name": "value", 
      "typestr": "^^{CGPDFStream=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFScannerPopString": {
    "args": [
     {
      "name": "scanner", 
      "typestr": "^{CGPDFScanner=}"
     }, 
     {
      "name": "value", 
      "typestr": "^^{CGPDFString=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFScannerRelease": {
    "args": [
     {
      "name": "scanner", 
      "typestr": "^{CGPDFScanner=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPDFScannerRetain": {
    "args": [
     {
      "name": "scanner", 
      "typestr": "^{CGPDFScanner=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGPDFScanner=}"
    }
   }, 
   "CGPDFScannerScan": {
    "args": [
     {
      "name": "scanner", 
      "typestr": "^{CGPDFScanner=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPDFStreamCopyData": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{CGPDFStream=}"
     }, 
     {
      "name": "format", 
      "typestr": "^i"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CGPDFStreamGetDictionary": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{CGPDFStream=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGPDFDictionary=}"
    }
   }, 
   "CGPDFStringCopyDate": {
    "args": [
     {
      "name": "string", 
      "typestr": "^{CGPDFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFDate=}"
    }
   }, 
   "CGPDFStringCopyTextString": {
    "args": [
     {
      "name": "string", 
      "typestr": "^{CGPDFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CGPDFStringGetBytePtr": {
    "args": [
     {
      "name": "string", 
      "typestr": "^{CGPDFString=}"
     }
    ], 
    "retval": {
     "typestr": "^C"
    }
   }, 
   "CGPDFStringGetLength": {
    "args": [
     {
      "name": "string", 
      "typestr": "^{CGPDFString=}"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGPSConverterAbort": {
    "args": [
     {
      "name": "converter", 
      "typestr": "^{CGPSConverter=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPSConverterConvert": {
    "args": [
     {
      "name": "converter", 
      "typestr": "^{CGPSConverter=}"
     }, 
     {
      "name": "provider", 
      "typestr": "^{CGDataProvider=}"
     }, 
     {
      "name": "consumer", 
      "typestr": "^{CGDataConsumer=}"
     }, 
     {
      "name": "options", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPSConverterCreate": {
    "args": [
     {
      "name": "info", 
      "typestr": "^v"
     }, 
     {
      "name": "callbacks", 
      "typestr": "^{CGPSConverterCallbacks=I^?^?^?^?^?^?^?}"
     }, 
     {
      "name": "options", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGPSConverter=}"
    }
   }, 
   "CGPSConverterGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGPSConverterIsConverting": {
    "args": [
     {
      "name": "converter", 
      "typestr": "^{CGPSConverter=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPaletteCreateCopy": {
    "args": [
     {
      "name": "palette", 
      "typestr": "^{_CGDirectPaletteRef=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{_CGDirectPaletteRef=}"
    }
   }, 
   "CGPaletteCreateDefaultColorPalette": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{_CGDirectPaletteRef=}"
    }
   }, 
   "CGPaletteCreateFromPaletteBlendedWithColor": {
    "args": [
     {
      "name": "palette", 
      "typestr": "^{_CGDirectPaletteRef=}"
     }, 
     {
      "name": "fraction", 
      "typestr": "f"
     }, 
     {
      "name": "color", 
      "typestr": "{CGDeviceColor=fff}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{_CGDirectPaletteRef=}"
    }
   }, 
   "CGPaletteCreateWithByteSamples": {
    "args": [
     {
      "name": "samples", 
      "typestr": "^{CGDeviceByteColor=CCC}"
     }, 
     {
      "name": "count", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{_CGDirectPaletteRef=}"
    }
   }, 
   "CGPaletteCreateWithCapacity": {
    "args": [
     {
      "name": "capacity", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{_CGDirectPaletteRef=}"
    }
   }, 
   "CGPaletteCreateWithDisplay": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{_CGDirectPaletteRef=}"
    }
   }, 
   "CGPaletteCreateWithSamples": {
    "args": [
     {
      "name": "samples", 
      "typestr": "^{CGDeviceColor=fff}"
     }, 
     {
      "name": "count", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{_CGDirectPaletteRef=}"
    }
   }, 
   "CGPaletteGetColorAtIndex": {
    "args": [
     {
      "name": "palette", 
      "typestr": "^{_CGDirectPaletteRef=}"
     }, 
     {
      "name": "index", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "{CGDeviceColor=fff}"
    }
   }, 
   "CGPaletteGetIndexForColor": {
    "args": [
     {
      "name": "palette", 
      "typestr": "^{_CGDirectPaletteRef=}"
     }, 
     {
      "name": "color", 
      "typestr": "{CGDeviceColor=fff}"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGPaletteGetNumberOfSamples": {
    "args": [
     {
      "name": "palette", 
      "typestr": "^{_CGDirectPaletteRef=}"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGPaletteIsEqualToPalette": {
    "args": [
     {
      "name": "palette1", 
      "typestr": "^{_CGDirectPaletteRef=}"
     }, 
     {
      "name": "palette2", 
      "typestr": "^{_CGDirectPaletteRef=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPaletteRelease": {
    "args": [
     {
      "name": "palette", 
      "typestr": "^{_CGDirectPaletteRef=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPaletteSetColorAtIndex": {
    "args": [
     {
      "name": "palette", 
      "typestr": "^{_CGDirectPaletteRef=}"
     }, 
     {
      "name": "color", 
      "typestr": "{CGDeviceColor=fff}"
     }, 
     {
      "name": "index", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPathAddArc": {
    "args": [
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }, 
     {
      "name": "m", 
      "typestr": "^{CGAffineTransform=dddddd}"
     }, 
     {
      "name": "x", 
      "typestr": "d"
     }, 
     {
      "name": "y", 
      "typestr": "d"
     }, 
     {
      "name": "radius", 
      "typestr": "d"
     }, 
     {
      "name": "startAngle", 
      "typestr": "d"
     }, 
     {
      "name": "endAngle", 
      "typestr": "d"
     }, 
     {
      "name": "clockwise", 
      "typestr": "B"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPathAddArcToPoint": {
    "args": [
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }, 
     {
      "name": "m", 
      "typestr": "^{CGAffineTransform=dddddd}"
     }, 
     {
      "name": "x1", 
      "typestr": "d"
     }, 
     {
      "name": "y1", 
      "typestr": "d"
     }, 
     {
      "name": "x2", 
      "typestr": "d"
     }, 
     {
      "name": "y2", 
      "typestr": "d"
     }, 
     {
      "name": "radius", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPathAddCurveToPoint": {
    "args": [
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }, 
     {
      "name": "m", 
      "typestr": "^{CGAffineTransform=dddddd}"
     }, 
     {
      "name": "cp1x", 
      "typestr": "d"
     }, 
     {
      "name": "cp1y", 
      "typestr": "d"
     }, 
     {
      "name": "cp2x", 
      "typestr": "d"
     }, 
     {
      "name": "cp2y", 
      "typestr": "d"
     }, 
     {
      "name": "x", 
      "typestr": "d"
     }, 
     {
      "name": "y", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPathAddEllipseInRect": {
    "args": [
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }, 
     {
      "name": "m", 
      "typestr": "^{CGAffineTransform=dddddd}"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPathAddLineToPoint": {
    "args": [
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }, 
     {
      "name": "m", 
      "typestr": "^{CGAffineTransform=dddddd}"
     }, 
     {
      "name": "x", 
      "typestr": "d"
     }, 
     {
      "name": "y", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPathAddLines": {
    "args": [
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }, 
     {
      "name": "m", 
      "typestr": "^{CGAffineTransform=dddddd}"
     }, 
     {
      "name": "points", 
      "typestr": "^{CGPoint=dd}"
     }, 
     {
      "name": "count", 
      "typestr": "Q"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPathAddPath": {
    "args": [
     {
      "name": "path1", 
      "typestr": "^{CGPath=}"
     }, 
     {
      "name": "m", 
      "typestr": "^{CGAffineTransform=dddddd}"
     }, 
     {
      "name": "path2", 
      "typestr": "^{CGPath=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPathAddQuadCurveToPoint": {
    "args": [
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }, 
     {
      "name": "m", 
      "typestr": "^{CGAffineTransform=dddddd}"
     }, 
     {
      "name": "cpx", 
      "typestr": "d"
     }, 
     {
      "name": "cpy", 
      "typestr": "d"
     }, 
     {
      "name": "x", 
      "typestr": "d"
     }, 
     {
      "name": "y", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPathAddRect": {
    "args": [
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }, 
     {
      "name": "m", 
      "typestr": "^{CGAffineTransform=dddddd}"
     }, 
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPathAddRects": {
    "args": [
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }, 
     {
      "name": "m", 
      "typestr": "^{CGAffineTransform=dddddd}"
     }, 
     {
      "name": "rects", 
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "count", 
      "typestr": "Q"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPathApply": {
    "args": [
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }, 
     {
      "name": "info", 
      "typestr": "^v"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^v", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{CGPathElement=i^{CGPoint=dd}}", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "function", 
      "typestr": "^?"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPathCloseSubpath": {
    "args": [
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPathContainsPoint": {
    "args": [
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }, 
     {
      "name": "m", 
      "typestr": "^{CGAffineTransform=dddddd}"
     }, 
     {
      "name": "point", 
      "typestr": "{CGPoint=dd}"
     }, 
     {
      "name": "eoFill", 
      "typestr": "B"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPathCreateCopy": {
    "args": [
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGPath=}"
    }
   }, 
   "CGPathCreateMutable": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGPath=}"
    }
   }, 
   "CGPathCreateMutableCopy": {
    "args": [
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGPath=}"
    }
   }, 
   "CGPathEqualToPath": {
    "args": [
     {
      "name": "path1", 
      "typestr": "^{CGPath=}"
     }, 
     {
      "name": "path2", 
      "typestr": "^{CGPath=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPathGetBoundingBox": {
    "args": [
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }
    ], 
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   }, 
   "CGPathGetCurrentPoint": {
    "args": [
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }
    ], 
    "retval": {
     "typestr": "{CGPoint=dd}"
    }
   }, 
   "CGPathGetPathBoundingBox": {
    "args": [
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }
    ], 
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   }, 
   "CGPathGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGPathIsEmpty": {
    "args": [
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPathIsRect": {
    "args": [
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }, 
     {
      "name": "rect", 
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPathMoveToPoint": {
    "args": [
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }, 
     {
      "name": "m", 
      "typestr": "^{CGAffineTransform=dddddd}"
     }, 
     {
      "name": "x", 
      "typestr": "d"
     }, 
     {
      "name": "y", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPathRelease": {
    "args": [
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPathRetain": {
    "args": [
     {
      "name": "path", 
      "typestr": "^{CGPath=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGPath=}"
    }
   }, 
   "CGPatternCreate": {
    "args": [
     {
      "name": "info", 
      "typestr": "^v"
     }, 
     {
      "name": "bounds", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "matrix", 
      "typestr": "{CGAffineTransform=dddddd}"
     }, 
     {
      "name": "xStep", 
      "typestr": "d"
     }, 
     {
      "name": "yStep", 
      "typestr": "d"
     }, 
     {
      "name": "tiling", 
      "typestr": "i"
     }, 
     {
      "name": "isColored", 
      "typestr": "B"
     }, 
     {
      "name": "callbacks", 
      "typestr": "^{CGPatternCallbacks=I^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGPattern=}"
    }
   }, 
   "CGPatternGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGPatternRelease": {
    "args": [
     {
      "name": "pattern", 
      "typestr": "^{CGPattern=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGPatternRetain": {
    "args": [
     {
      "name": "pattern", 
      "typestr": "^{CGPattern=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGPattern=}"
    }
   }, 
   "CGPointApplyAffineTransform": {
    "args": [
     {
      "name": "point", 
      "typestr": "{CGPoint=dd}"
     }, 
     {
      "name": "t", 
      "typestr": "{CGAffineTransform=dddddd}"
     }
    ], 
    "retval": {
     "typestr": "{CGPoint=dd}"
    }
   }, 
   "CGPointCreateDictionaryRepresentation": {
    "args": [
     {
      "name": "point", 
      "typestr": "{CGPoint=dd}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CGPointEqualToPoint": {
    "args": [
     {
      "name": "point1", 
      "typestr": "{CGPoint=dd}"
     }, 
     {
      "name": "point2", 
      "typestr": "{CGPoint=dd}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPointMake": {
    "args": [
     {
      "name": "x", 
      "typestr": "d"
     }, 
     {
      "name": "y", 
      "typestr": "d"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "{CGPoint=dd}"
    }
   }, 
   "CGPointMakeWithDictionaryRepresentation": {
    "args": [
     {
      "name": "dict", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "point", 
      "typestr": "^{CGPoint=dd}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGPostKeyboardEvent": {
    "args": [
     {
      "name": "keyChar", 
      "typestr": "S"
     }, 
     {
      "name": "virtualKey", 
      "typestr": "S"
     }, 
     {
      "name": "keyDown", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGPostMouseEvent": {
    "args": [
     {
      "name": "mouseCursorPosition", 
      "typestr": "{CGPoint=dd}"
     }, 
     {
      "name": "updateMouseCursorPosition", 
      "typestr": "I"
     }, 
     {
      "name": "buttonCount", 
      "typestr": "I"
     }, 
     {
      "name": "mouseButtonDown", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }, 
    "variadic": true
   }, 
   "CGPostScrollWheelEvent": {
    "args": [
     {
      "name": "wheelCount", 
      "typestr": "I"
     }, 
     {
      "name": "wheel1", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "i"
    }, 
    "variadic": true
   }, 
   "CGRectApplyAffineTransform": {
    "args": [
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "t", 
      "typestr": "{CGAffineTransform=dddddd}"
     }
    ], 
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   }, 
   "CGRectContainsPoint": {
    "args": [
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "point", 
      "typestr": "{CGPoint=dd}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGRectContainsRect": {
    "args": [
     {
      "name": "rect1", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "rect2", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGRectCreateDictionaryRepresentation": {
    "args": [
     {
      "name": null, 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CGRectDivide": {
    "args": [
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "slice", 
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "remainder", 
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "amount", 
      "typestr": "d"
     }, 
     {
      "name": "edge", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGRectEqualToRect": {
    "args": [
     {
      "name": "rect1", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "rect2", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGRectGetHeight": {
    "args": [
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CGRectGetMaxX": {
    "args": [
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CGRectGetMaxY": {
    "args": [
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CGRectGetMidX": {
    "args": [
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CGRectGetMidY": {
    "args": [
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CGRectGetMinX": {
    "args": [
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CGRectGetMinY": {
    "args": [
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CGRectGetWidth": {
    "args": [
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CGRectInset": {
    "args": [
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "dx", 
      "typestr": "d"
     }, 
     {
      "name": "dy", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   }, 
   "CGRectIntegral": {
    "args": [
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   }, 
   "CGRectIntersection": {
    "args": [
     {
      "name": "r1", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "r2", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   }, 
   "CGRectIntersectsRect": {
    "args": [
     {
      "name": "rect1", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "rect2", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGRectIsEmpty": {
    "args": [
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGRectIsInfinite": {
    "args": [
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGRectIsNull": {
    "args": [
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGRectMake": {
    "args": [
     {
      "name": "x", 
      "typestr": "d"
     }, 
     {
      "name": "y", 
      "typestr": "d"
     }, 
     {
      "name": "width", 
      "typestr": "d"
     }, 
     {
      "name": "height", 
      "typestr": "d"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   }, 
   "CGRectMakeWithDictionaryRepresentation": {
    "args": [
     {
      "name": "dict", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "rect", 
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGRectOffset": {
    "args": [
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "dx", 
      "typestr": "d"
     }, 
     {
      "name": "dy", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   }, 
   "CGRectStandardize": {
    "args": [
     {
      "name": "rect", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   }, 
   "CGRectUnion": {
    "args": [
     {
      "name": "r1", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "r2", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
    }
   }, 
   "CGRegisterScreenRefreshCallback": {
    "args": [
     {
      "function": {
       "args": [
        {
         "typestr": [
          "I", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{CGRect={CGPoint=dd}{CGSize=dd}}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "callback", 
      "typestr": "^?"
     }, 
     {
      "name": "userInfo", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGReleaseAllDisplays": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGReleaseDisplayFadeReservation": {
    "args": [
     {
      "name": "token", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGReleaseScreenRefreshRects": {
    "args": [
     {
      "name": "rects", 
      "typestr": "^{CGRect={CGPoint=dd}{CGSize=dd}}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGRestorePermanentDisplayConfiguration": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGScreenRegisterMoveCallback": {
    "args": [
     {
      "function": {
       "args": [
        {
         "typestr": [
          "{CGScreenUpdateMoveDelta=ii}", 
          false
         ]
        }, 
        {
         "typestr": [
          "Q", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{CGRect={CGPoint=dd}{CGSize=dd}}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "callback", 
      "typestr": "^?"
     }, 
     {
      "name": "userInfo", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGScreenUnregisterMoveCallback": {
    "args": [
     {
      "function": {
       "args": [
        {
         "typestr": [
          "{CGScreenUpdateMoveDelta=ii}", 
          false
         ]
        }, 
        {
         "typestr": [
          "Q", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{CGRect={CGPoint=dd}{CGSize=dd}}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "callback", 
      "typestr": "^?"
     }, 
     {
      "name": "userInfo", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGSessionCopyCurrentDictionary": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CGSetDisplayTransferByByteTable": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "tableSize", 
      "typestr": "I"
     }, 
     {
      "name": "redTable", 
      "typestr": "^C"
     }, 
     {
      "name": "greenTable", 
      "typestr": "^C"
     }, 
     {
      "name": "blueTable", 
      "typestr": "^C"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGSetDisplayTransferByFormula": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "redMin", 
      "typestr": "f"
     }, 
     {
      "name": "redMax", 
      "typestr": "f"
     }, 
     {
      "name": "redGamma", 
      "typestr": "f"
     }, 
     {
      "name": "greenMin", 
      "typestr": "f"
     }, 
     {
      "name": "greenMax", 
      "typestr": "f"
     }, 
     {
      "name": "greenGamma", 
      "typestr": "f"
     }, 
     {
      "name": "blueMin", 
      "typestr": "f"
     }, 
     {
      "name": "blueMax", 
      "typestr": "f"
     }, 
     {
      "name": "blueGamma", 
      "typestr": "f"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGSetDisplayTransferByTable": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }, 
     {
      "name": "tableSize", 
      "typestr": "I"
     }, 
     {
      "name": "redTable", 
      "typestr": "^f"
     }, 
     {
      "name": "greenTable", 
      "typestr": "^f"
     }, 
     {
      "name": "blueTable", 
      "typestr": "^f"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGSetLocalEventsFilterDuringSuppressionState": {
    "args": [
     {
      "name": "filter", 
      "typestr": "I"
     }, 
     {
      "name": "state", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGSetLocalEventsSuppressionInterval": {
    "args": [
     {
      "name": "seconds", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGShadingCreateAxial": {
    "args": [
     {
      "name": "space", 
      "typestr": "^{CGColorSpace=}"
     }, 
     {
      "name": "start", 
      "typestr": "{CGPoint=dd}"
     }, 
     {
      "name": "end", 
      "typestr": "{CGPoint=dd}"
     }, 
     {
      "name": "function", 
      "typestr": "^{CGFunction=}"
     }, 
     {
      "name": "extendStart", 
      "typestr": "B"
     }, 
     {
      "name": "extendEnd", 
      "typestr": "B"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGShading=}"
    }
   }, 
   "CGShadingCreateRadial": {
    "args": [
     {
      "name": "space", 
      "typestr": "^{CGColorSpace=}"
     }, 
     {
      "name": "start", 
      "typestr": "{CGPoint=dd}"
     }, 
     {
      "name": "startRadius", 
      "typestr": "d"
     }, 
     {
      "name": "end", 
      "typestr": "{CGPoint=dd}"
     }, 
     {
      "name": "endRadius", 
      "typestr": "d"
     }, 
     {
      "name": "function", 
      "typestr": "^{CGFunction=}"
     }, 
     {
      "name": "extendStart", 
      "typestr": "B"
     }, 
     {
      "name": "extendEnd", 
      "typestr": "B"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGShading=}"
    }
   }, 
   "CGShadingGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CGShadingRelease": {
    "args": [
     {
      "name": "shading", 
      "typestr": "^{CGShading=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGShadingRetain": {
    "args": [
     {
      "name": "shading", 
      "typestr": "^{CGShading=}"
     }
    ], 
    "retval": {
     "typestr": "^{CGShading=}"
    }
   }, 
   "CGShieldingWindowID": {
    "args": [
     {
      "name": "display", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CGShieldingWindowLevel": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGSizeApplyAffineTransform": {
    "args": [
     {
      "name": "size", 
      "typestr": "{CGSize=dd}"
     }, 
     {
      "name": "t", 
      "typestr": "{CGAffineTransform=dddddd}"
     }
    ], 
    "retval": {
     "typestr": "{CGSize=dd}"
    }
   }, 
   "CGSizeCreateDictionaryRepresentation": {
    "args": [
     {
      "name": "size", 
      "typestr": "{CGSize=dd}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CGSizeEqualToSize": {
    "args": [
     {
      "name": "size1", 
      "typestr": "{CGSize=dd}"
     }, 
     {
      "name": "size2", 
      "typestr": "{CGSize=dd}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGSizeMake": {
    "args": [
     {
      "name": "width", 
      "typestr": "d"
     }, 
     {
      "name": "height", 
      "typestr": "d"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "{CGSize=dd}"
    }
   }, 
   "CGSizeMakeWithDictionaryRepresentation": {
    "args": [
     {
      "name": "dict", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "size", 
      "typestr": "^{CGSize=dd}"
     }
    ], 
    "retval": {
     "typestr": "B"
    }
   }, 
   "CGUnregisterScreenRefreshCallback": {
    "args": [
     {
      "function": {
       "args": [
        {
         "typestr": [
          "I", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{CGRect={CGPoint=dd}{CGSize=dd}}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "callback", 
      "typestr": "^?"
     }, 
     {
      "name": "userInfo", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CGWaitForScreenRefreshRects": {
    "args": [
     {
      "name": "rects", 
      "typestr": "^^{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "count", 
      "typestr": "^I"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGWaitForScreenUpdateRects": {
    "args": [
     {
      "name": "requestedOperations", 
      "typestr": "I"
     }, 
     {
      "name": "currentOperation", 
      "typestr": "^I"
     }, 
     {
      "name": "rects", 
      "typestr": "^^{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "rectCount", 
      "typestr": "^Q"
     }, 
     {
      "name": "delta", 
      "typestr": "^{CGScreenUpdateMoveDelta=ii}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGWarpMouseCursorPosition": {
    "args": [
     {
      "name": "newCursorPosition", 
      "typestr": "{CGPoint=dd}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGWindowLevelForKey": {
    "args": [
     {
      "name": "key", 
      "typestr": "i"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CGWindowListCopyWindowInfo": {
    "args": [
     {
      "name": "option", 
      "typestr": "I"
     }, 
     {
      "name": "relativeToWindow", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CGWindowListCreate": {
    "args": [
     {
      "name": "option", 
      "typestr": "I"
     }, 
     {
      "name": "relativeToWindow", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CGWindowListCreateDescriptionFromArray": {
    "args": [
     {
      "name": "windowArray", 
      "typestr": "^{__CFArray=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CGWindowListCreateImage": {
    "args": [
     {
      "name": "screenBounds", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "listOption", 
      "typestr": "I"
     }, 
     {
      "name": "windowID", 
      "typestr": "I"
     }, 
     {
      "name": "imageOption", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGImage=}"
    }
   }, 
   "CGWindowListCreateImageFromArray": {
    "args": [
     {
      "name": "screenBounds", 
      "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
     }, 
     {
      "name": "windowArray", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "imageOption", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{CGImage=}"
    }
   }, 
   "CGWindowServerCFMachPort": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "^{__CFMachPort=}"
    }
   }
  }, 
  "informal_protocols": {}, 
  "literals": {
   "kCGDisplayBitsPerPixel": "BitsPerPixel", 
   "kCGDisplayBitsPerSample": "BitsPerSample", 
   "kCGDisplayBlendNormal": 0.0, 
   "kCGDisplayBlendSolidColor": 1.0, 
   "kCGDisplayBytesPerRow": "kCGDisplayBytesPerRow", 
   "kCGDisplayHeight": "Height", 
   "kCGDisplayIOFlags": "IOFlags", 
   "kCGDisplayMode": "Mode", 
   "kCGDisplayModeIsInterlaced": "kCGDisplayModeIsInterlaced", 
   "kCGDisplayModeIsSafeForHardware": "kCGDisplayModeIsSafeForHardware", 
   "kCGDisplayModeIsStretched": "kCGDisplayModeIsStretched", 
   "kCGDisplayModeIsTelevisionOutput": "kCGDisplayModeIsTelevisionOutput", 
   "kCGDisplayModeUsableForDesktopGUI": "UsableForDesktopGUI", 
   "kCGDisplayRefreshRate": "RefreshRate", 
   "kCGDisplaySamplesPerPixel": "SamplesPerPixel", 
   "kCGDisplayWidth": "Width", 
   "kCGIODisplayModeID": "IODisplayModeID", 
   "kCGMaxDisplayReservationInterval": 15.0, 
   "kCGMouseDownEventMaskingDeadSwitchTimeout": 60.0, 
   "kCGNotifyEventTapAdded": "com.apple.coregraphics.eventTapAdded", 
   "kCGNotifyEventTapRemoved": "com.apple.coregraphics.eventTapRemoved", 
   "kCGNotifyGUIConsoleSessionChanged": "com.apple.coregraphics.GUIConsoleSessionChanged", 
   "kCGNotifyGUISessionUserChanged": "com.apple.coregraphics.GUISessionUserChanged", 
   "kCGSessionConsoleSetKey": "kCGSSessionConsoleSetKey", 
   "kCGSessionLoginDoneKey": "kCGSessionLoginDoneKey", 
   "kCGSessionOnConsoleKey": "kCGSSessionOnConsoleKey", 
   "kCGSessionUserIDKey": "kCGSSessionUserIDKey", 
   "kCGSessionUserNameKey": "kCGSSessionUserNameKey"
  }, 
  "structs": {
   "CGAffineTransform": {
    "fieldnames": [], 
    "special": false, 
    "typestr": "{CGAffineTransform=dddddd}"
   }, 
   "CGDataConsumerCallbacks": {
    "fieldnames": [], 
    "special": false, 
    "typestr": "{CGDataConsumerCallbacks=^?^?}"
   }, 
   "CGDataProviderCallbacks": {
    "fieldnames": [], 
    "special": false, 
    "typestr": "{CGDataProviderCallbacks=^?^?^?^?}"
   }, 
   "CGDataProviderDirectAccessCallbacks": {
    "fieldnames": [], 
    "special": false, 
    "typestr": "{CGDataProviderDirectAccessCallbacks=^?^?^?^?}"
   }, 
   "CGDataProviderDirectCallbacks": {
    "fieldnames": [], 
    "special": false, 
    "typestr": "{CGDataProviderDirectCallbacks=I^?^?^?^?}"
   }, 
   "CGDataProviderSequentialCallbacks": {
    "fieldnames": [], 
    "special": false, 
    "typestr": "{CGDataProviderSequentialCallbacks=I^?^?^?^?}"
   }, 
   "CGDeviceByteColor": {
    "fieldnames": [], 
    "special": false, 
    "typestr": "{CGDeviceByteColor=CCC}"
   }, 
   "CGDeviceColor": {
    "fieldnames": [], 
    "special": false, 
    "typestr": "{CGDeviceColor=fff}"
   }, 
   "CGEventTapInformation": {
    "fieldnames": [], 
    "special": false, 
    "typestr": "{__CGEventTapInformation=IIIQiiBfff}"
   }, 
   "CGFunctionCallbacks": {
    "fieldnames": [], 
    "special": false, 
    "typestr": "{CGFunctionCallbacks=I^?^?}"
   }, 
   "CGPSConverterCallbacks": {
    "fieldnames": [], 
    "special": false, 
    "typestr": "{CGPSConverterCallbacks=I^?^?^?^?^?^?^?}"
   }, 
   "CGPathElement": {
    "fieldnames": [], 
    "special": false, 
    "typestr": "{CGPathElement=i^{CGPoint=dd}}"
   }, 
   "CGPatternCallbacks": {
    "fieldnames": [], 
    "special": false, 
    "typestr": "{CGPatternCallbacks=I^?^?}"
   }, 
   "CGPoint": {
    "fieldnames": [], 
    "special": false, 
    "typestr": "{CGPoint=dd}"
   }, 
   "CGRect": {
    "fieldnames": [], 
    "special": false, 
    "typestr": "{CGRect={CGPoint=dd}{CGSize=dd}}"
   }, 
   "CGScreenUpdateMoveDelta": {
    "fieldnames": [], 
    "special": false, 
    "typestr": "{CGScreenUpdateMoveDelta=ii}"
   }, 
   "CGSize": {
    "fieldnames": [], 
    "special": false, 
    "typestr": "{CGSize=dd}"
   }
  }
 }, 
 "framework": "CoreGraphics", 
 "headers": [
  "CGAffineTransform.h", 
  "CGBase.h", 
  "CGBitmapContext.h", 
  "CGColor.h", 
  "CGColorSpace.h", 
  "CGContext.h", 
  "CGDataConsumer.h", 
  "CGDataProvider.h", 
  "CGDirectDisplay.h", 
  "CGDirectPalette.h", 
  "CGDisplayConfiguration.h", 
  "CGDisplayFade.h", 
  "CGError.h", 
  "CGEvent.h", 
  "CGEventSource.h", 
  "CGEventTypes.h", 
  "CGFont.h", 
  "CGFunction.h", 
  "CGGLContext.h", 
  "CGGeometry.h", 
  "CGGradient.h", 
  "CGImage.h", 
  "CGLayer.h", 
  "CGPDFArray.h", 
  "CGPDFContentStream.h", 
  "CGPDFContext.h", 
  "CGPDFDictionary.h", 
  "CGPDFDocument.h", 
  "CGPDFObject.h", 
  "CGPDFOperatorTable.h", 
  "CGPDFPage.h", 
  "CGPDFScanner.h", 
  "CGPDFStream.h", 
  "CGPDFString.h", 
  "CGPSConverter.h", 
  "CGPath.h", 
  "CGPattern.h", 
  "CGRemoteOperation.h", 
  "CGSession.h", 
  "CGShading.h", 
  "CGWindow.h", 
  "CGWindowLevel.h"
 ], 
 "release": "10.7.3", 
 "sdk": "/Developer/SDKs/MacOSX10.6.sdk"
}
