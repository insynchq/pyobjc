#             GENERATED FILE DO NOT EDIT
#
# This file was generated by objective.metadata
# Last update: Wed Apr 25 17:21:04 2012
{
 "arch": "i386", 
 "definitions": {
  "aliases": {}, 
  "called_definitions": {}, 
  "cftypes": {
   "CFAllocatorRef": {
    "gettypeid_func": "CFAllocatorGetTypeID", 
    "typestr": "^{__CFAllocator=}"
   }, 
   "CFArrayRef": {
    "gettypeid_func": "CFArrayGetTypeID", 
    "typestr": "^{__CFArray=}"
   }, 
   "CFAttributedStringRef": {
    "gettypeid_func": "CFAttributedStringGetTypeID", 
    "typestr": "^{__CFAttributedString=}"
   }, 
   "CFBagRef": {
    "gettypeid_func": "CFBagGetTypeID", 
    "typestr": "^{__CFBag=}"
   }, 
   "CFBinaryHeapRef": {
    "gettypeid_func": "CFBinaryHeapGetTypeID", 
    "typestr": "^{__CFBinaryHeap=}"
   }, 
   "CFBitVectorRef": {
    "gettypeid_func": "CFBitVectorGetTypeID", 
    "typestr": "^{__CFBitVector=}"
   }, 
   "CFBooleanRef": {
    "gettypeid_func": "CFBooleanGetTypeID", 
    "typestr": "^{__CFBoolean=}"
   }, 
   "CFBundleRef": {
    "gettypeid_func": "CFBundleGetTypeID", 
    "typestr": "^{__CFBundle=}"
   }, 
   "CFCalendarRef": {
    "gettypeid_func": "CFCalendarGetTypeID", 
    "typestr": "^{__CFCalendar=}"
   }, 
   "CFCharacterSetRef": {
    "gettypeid_func": "CFCharacterSetGetTypeID", 
    "typestr": "^{__CFCharacterSet=}"
   }, 
   "CFDataRef": {
    "gettypeid_func": "CFDataGetTypeID", 
    "typestr": "^{__CFData=}"
   }, 
   "CFDateFormatterRef": {
    "gettypeid_func": "CFDateFormatterGetTypeID", 
    "typestr": "^{__CFDateFormatter=}"
   }, 
   "CFDateRef": {
    "gettypeid_func": "CFDateGetTypeID", 
    "typestr": "^{__CFDate=}"
   }, 
   "CFDictionaryRef": {
    "gettypeid_func": "CFDictionaryGetTypeID", 
    "typestr": "^{__CFDictionary=}"
   }, 
   "CFErrorRef": {
    "gettypeid_func": "CFErrorGetTypeID", 
    "typestr": "^{__CFError=}"
   }, 
   "CFFileDescriptorRef": {
    "gettypeid_func": "CFFileDescriptorGetTypeID", 
    "typestr": "^{__CFFileDescriptor=}"
   }, 
   "CFLocaleRef": {
    "gettypeid_func": "CFLocaleGetTypeID", 
    "typestr": "^{__CFLocale=}"
   }, 
   "CFMachPortRef": {
    "gettypeid_func": "CFMachPortGetTypeID", 
    "typestr": "^{__CFMachPort=}"
   }, 
   "CFMessagePortRef": {
    "gettypeid_func": "CFMessagePortGetTypeID", 
    "typestr": "^{__CFMessagePort=}"
   }, 
   "CFMutableArrayRef": {
    "typestr": "^{__CFArray=}"
   }, 
   "CFMutableAttributedStringRef": {
    "typestr": "^{__CFAttributedString=}"
   }, 
   "CFMutableBagRef": {
    "typestr": "^{__CFBag=}"
   }, 
   "CFMutableBitVectorRef": {
    "typestr": "^{__CFBitVector=}"
   }, 
   "CFMutableCharacterSetRef": {
    "typestr": "^{__CFCharacterSet=}"
   }, 
   "CFMutableDataRef": {
    "typestr": "^{__CFData=}"
   }, 
   "CFMutableDictionaryRef": {
    "typestr": "^{__CFDictionary=}"
   }, 
   "CFMutableSetRef": {
    "typestr": "^{__CFSet=}"
   }, 
   "CFMutableStringRef": {
    "typestr": "^{__CFString=}"
   }, 
   "CFNotificationCenterRef": {
    "gettypeid_func": "CFNotificationCenterGetTypeID", 
    "typestr": "^{__CFNotificationCenter=}"
   }, 
   "CFNullRef": {
    "gettypeid_func": "CFNullGetTypeID", 
    "typestr": "^{__CFNull=}"
   }, 
   "CFNumberFormatterRef": {
    "gettypeid_func": "CFNumberFormatterGetTypeID", 
    "typestr": "^{__CFNumberFormatter=}"
   }, 
   "CFNumberRef": {
    "gettypeid_func": "CFNumberGetTypeID", 
    "typestr": "^{__CFNumber=}"
   }, 
   "CFPlugInInstanceRef": {
    "gettypeid_func": "CFPlugInInstanceGetTypeID", 
    "typestr": "^{__CFPlugInInstance=}"
   }, 
   "CFPlugInRef": {
    "gettypeid_func": "CFPlugInGetTypeID", 
    "typestr": "^{__CFBundle=}"
   }, 
   "CFReadStreamRef": {
    "gettypeid_func": "CFReadStreamGetTypeID", 
    "typestr": "^{__CFReadStream=}"
   }, 
   "CFRunLoopObserverRef": {
    "gettypeid_func": "CFRunLoopObserverGetTypeID", 
    "typestr": "^{__CFRunLoopObserver=}"
   }, 
   "CFRunLoopRef": {
    "gettypeid_func": "CFRunLoopGetTypeID", 
    "typestr": "^{__CFRunLoop=}"
   }, 
   "CFRunLoopSourceRef": {
    "gettypeid_func": "CFRunLoopSourceGetTypeID", 
    "typestr": "^{__CFRunLoopSource=}"
   }, 
   "CFRunLoopTimerRef": {
    "gettypeid_func": "CFRunLoopTimerGetTypeID", 
    "typestr": "^{__CFRunLoopTimer=}"
   }, 
   "CFSetRef": {
    "gettypeid_func": "CFSetGetTypeID", 
    "typestr": "^{__CFSet=}"
   }, 
   "CFSocketRef": {
    "gettypeid_func": "CFSocketGetTypeID", 
    "typestr": "^{__CFSocket=}"
   }, 
   "CFStringRef": {
    "gettypeid_func": "CFStringGetTypeID", 
    "typestr": "^{__CFString=}"
   }, 
   "CFStringTokenizerRef": {
    "gettypeid_func": "CFStringTokenizerGetTypeID", 
    "typestr": "^{__CFStringTokenizer=}"
   }, 
   "CFTimeZoneRef": {
    "gettypeid_func": "CFTimeZoneGetTypeID", 
    "typestr": "^{__CFTimeZone=}"
   }, 
   "CFTreeRef": {
    "gettypeid_func": "CFTreeGetTypeID", 
    "typestr": "^{__CFTree=}"
   }, 
   "CFURLEnumeratorRef": {
    "gettypeid_func": "CFURLEnumeratorGetTypeID", 
    "typestr": "^{__CFURLEnumerator=}"
   }, 
   "CFURLRef": {
    "gettypeid_func": "CFURLGetTypeID", 
    "typestr": "^{__CFURL=}"
   }, 
   "CFUUIDRef": {
    "gettypeid_func": "CFUUIDGetTypeID", 
    "typestr": "^{__CFUUID=}"
   }, 
   "CFUserNotificationRef": {
    "gettypeid_func": "CFUserNotificationGetTypeID", 
    "typestr": "^{__CFUserNotification=}"
   }, 
   "CFWriteStreamRef": {
    "gettypeid_func": "CFWriteStreamGetTypeID", 
    "typestr": "^{__CFWriteStream=}"
   }, 
   "CFXMLNodeRef": {
    "gettypeid_func": "CFXMLNodeGetTypeID", 
    "typestr": "^{__CFXMLNode=}"
   }, 
   "CFXMLParserRef": {
    "gettypeid_func": "CFXMLParserGetTypeID", 
    "typestr": "^{__CFXMLParser=}"
   }
  }, 
  "classes": {}, 
  "enum": {
   "CFByteOrderBigEndian": 2, 
   "CFByteOrderLittleEndian": 1, 
   "CFByteOrderUnknown": 0, 
   "CFNotificationSuspensionBehaviorCoalesce": 2, 
   "CFNotificationSuspensionBehaviorDeliverImmediately": 4, 
   "CFNotificationSuspensionBehaviorDrop": 1, 
   "CFNotificationSuspensionBehaviorHold": 3, 
   "CF_USE_OSBYTEORDER_H": 1, 
   "COREFOUNDATION_CFPLUGINCOM_SEPARATE": 1, 
   "FALSE": 0, 
   "TRUE": 1, 
   "kCFBookmarkResolutionWithoutMountingMask": 512, 
   "kCFBookmarkResolutionWithoutUIMask": 256, 
   "kCFBundleExecutableArchitectureI386": 7, 
   "kCFBundleExecutableArchitecturePPC": 18, 
   "kCFBundleExecutableArchitecturePPC64": 16777234, 
   "kCFBundleExecutableArchitectureX86_64": 16777223, 
   "kCFCalendarComponentsWrap": 1, 
   "kCFCalendarUnitDay": 16, 
   "kCFCalendarUnitEra": 2, 
   "kCFCalendarUnitHour": 32, 
   "kCFCalendarUnitMinute": 64, 
   "kCFCalendarUnitMonth": 8, 
   "kCFCalendarUnitQuarter": 2048, 
   "kCFCalendarUnitSecond": 128, 
   "kCFCalendarUnitWeek": 256, 
   "kCFCalendarUnitWeekday": 512, 
   "kCFCalendarUnitWeekdayOrdinal": 1024, 
   "kCFCalendarUnitYear": 4, 
   "kCFCharacterSetAlphaNumeric": 10, 
   "kCFCharacterSetCapitalizedLetter": 13, 
   "kCFCharacterSetControl": 1, 
   "kCFCharacterSetDecimalDigit": 4, 
   "kCFCharacterSetDecomposable": 9, 
   "kCFCharacterSetIllegal": 12, 
   "kCFCharacterSetLetter": 5, 
   "kCFCharacterSetLowercaseLetter": 6, 
   "kCFCharacterSetNewline": 15, 
   "kCFCharacterSetNonBase": 8, 
   "kCFCharacterSetPunctuation": 11, 
   "kCFCharacterSetSymbol": 14, 
   "kCFCharacterSetUppercaseLetter": 7, 
   "kCFCharacterSetWhitespace": 2, 
   "kCFCharacterSetWhitespaceAndNewline": 3, 
   "kCFCompareAnchored": 8, 
   "kCFCompareBackwards": 4, 
   "kCFCompareCaseInsensitive": 1, 
   "kCFCompareDiacriticInsensitive": 128, 
   "kCFCompareEqualTo": 0, 
   "kCFCompareForcedOrdering": 512, 
   "kCFCompareGreaterThan": 1, 
   "kCFCompareLessThan": -1, 
   "kCFCompareLocalized": 32, 
   "kCFCompareNonliteral": 16, 
   "kCFCompareNumerically": 64, 
   "kCFCompareWidthInsensitive": 256, 
   "kCFDataSearchAnchored": 2, 
   "kCFDataSearchBackwards": 1, 
   "kCFDateFormatterFullStyle": 4, 
   "kCFDateFormatterLongStyle": 3, 
   "kCFDateFormatterMediumStyle": 2, 
   "kCFDateFormatterNoStyle": 0, 
   "kCFDateFormatterShortStyle": 1, 
   "kCFFileDescriptorReadCallBack": 1, 
   "kCFFileDescriptorWriteCallBack": 2, 
   "kCFGregorianAllUnits": 16777215, 
   "kCFGregorianUnitsDays": 4, 
   "kCFGregorianUnitsHours": 8, 
   "kCFGregorianUnitsMinutes": 16, 
   "kCFGregorianUnitsMonths": 2, 
   "kCFGregorianUnitsSeconds": 32, 
   "kCFGregorianUnitsYears": 1, 
   "kCFLocaleLanguageDirectionBottomToTop": 4, 
   "kCFLocaleLanguageDirectionLeftToRight": 1, 
   "kCFLocaleLanguageDirectionRightToLeft": 2, 
   "kCFLocaleLanguageDirectionTopToBottom": 3, 
   "kCFLocaleLanguageDirectionUnknown": 0, 
   "kCFMessagePortBecameInvalidError": -5, 
   "kCFMessagePortIsInvalid": -3, 
   "kCFMessagePortReceiveTimeout": -2, 
   "kCFMessagePortSendTimeout": -1, 
   "kCFMessagePortSuccess": 0, 
   "kCFMessagePortTransportError": -4, 
   "kCFNotFound": -1, 
   "kCFNotificationDeliverImmediately": 1, 
   "kCFNotificationPostToAllSessions": 2, 
   "kCFNumberCFIndexType": 14, 
   "kCFNumberCGFloatType": 16, 
   "kCFNumberCharType": 7, 
   "kCFNumberDoubleType": 13, 
   "kCFNumberFloat32Type": 5, 
   "kCFNumberFloat64Type": 6, 
   "kCFNumberFloatType": 12, 
   "kCFNumberFormatterCurrencyStyle": 2, 
   "kCFNumberFormatterDecimalStyle": 1, 
   "kCFNumberFormatterNoStyle": 0, 
   "kCFNumberFormatterPadAfterPrefix": 1, 
   "kCFNumberFormatterPadAfterSuffix": 3, 
   "kCFNumberFormatterPadBeforePrefix": 0, 
   "kCFNumberFormatterPadBeforeSuffix": 2, 
   "kCFNumberFormatterParseIntegersOnly": 1, 
   "kCFNumberFormatterPercentStyle": 3, 
   "kCFNumberFormatterRoundCeiling": 0, 
   "kCFNumberFormatterRoundDown": 2, 
   "kCFNumberFormatterRoundFloor": 1, 
   "kCFNumberFormatterRoundHalfDown": 5, 
   "kCFNumberFormatterRoundHalfEven": 4, 
   "kCFNumberFormatterRoundHalfUp": 6, 
   "kCFNumberFormatterRoundUp": 3, 
   "kCFNumberFormatterScientificStyle": 4, 
   "kCFNumberFormatterSpellOutStyle": 5, 
   "kCFNumberIntType": 9, 
   "kCFNumberLongLongType": 11, 
   "kCFNumberLongType": 10, 
   "kCFNumberMaxType": 16, 
   "kCFNumberNSIntegerType": 15, 
   "kCFNumberSInt16Type": 2, 
   "kCFNumberSInt32Type": 3, 
   "kCFNumberSInt64Type": 4, 
   "kCFNumberSInt8Type": 1, 
   "kCFNumberShortType": 8, 
   "kCFPropertyListBinaryFormat_v1_0": 200, 
   "kCFPropertyListImmutable": 0, 
   "kCFPropertyListMutableContainers": 1, 
   "kCFPropertyListMutableContainersAndLeaves": 2, 
   "kCFPropertyListOpenStepFormat": 1, 
   "kCFPropertyListReadCorruptError": 3840, 
   "kCFPropertyListReadStreamError": 3842, 
   "kCFPropertyListReadUnknownVersionError": 3841, 
   "kCFPropertyListWriteStreamError": 3851, 
   "kCFPropertyListXMLFormat_v1_0": 100, 
   "kCFRunLoopAfterWaiting": 64, 
   "kCFRunLoopAllActivities": 268435455, 
   "kCFRunLoopBeforeSources": 4, 
   "kCFRunLoopBeforeTimers": 2, 
   "kCFRunLoopBeforeWaiting": 32, 
   "kCFRunLoopEntry": 1, 
   "kCFRunLoopExit": 128, 
   "kCFRunLoopRunFinished": 1, 
   "kCFRunLoopRunHandledSource": 4, 
   "kCFRunLoopRunStopped": 2, 
   "kCFRunLoopRunTimedOut": 3, 
   "kCFSocketAcceptCallBack": 2, 
   "kCFSocketAutomaticallyReenableAcceptCallBack": 2, 
   "kCFSocketAutomaticallyReenableDataCallBack": 3, 
   "kCFSocketAutomaticallyReenableReadCallBack": 1, 
   "kCFSocketAutomaticallyReenableWriteCallBack": 8, 
   "kCFSocketCloseOnInvalidate": 128, 
   "kCFSocketConnectCallBack": 4, 
   "kCFSocketDataCallBack": 3, 
   "kCFSocketError": -1, 
   "kCFSocketLeaveErrors": 64, 
   "kCFSocketNoCallBack": 0, 
   "kCFSocketReadCallBack": 1, 
   "kCFSocketSuccess": 0, 
   "kCFSocketTimeout": -2, 
   "kCFSocketWriteCallBack": 8, 
   "kCFStreamErrorDomainCustom": -1, 
   "kCFStreamErrorDomainMacOSStatus": 2, 
   "kCFStreamErrorDomainPOSIX": 1, 
   "kCFStreamEventCanAcceptBytes": 4, 
   "kCFStreamEventEndEncountered": 16, 
   "kCFStreamEventErrorOccurred": 8, 
   "kCFStreamEventHasBytesAvailable": 2, 
   "kCFStreamEventNone": 0, 
   "kCFStreamEventOpenCompleted": 1, 
   "kCFStreamStatusAtEnd": 5, 
   "kCFStreamStatusClosed": 6, 
   "kCFStreamStatusError": 7, 
   "kCFStreamStatusNotOpen": 0, 
   "kCFStreamStatusOpen": 2, 
   "kCFStreamStatusOpening": 1, 
   "kCFStreamStatusReading": 3, 
   "kCFStreamStatusWriting": 4, 
   "kCFStringEncodingANSEL": 1537, 
   "kCFStringEncodingASCII": 1536, 
   "kCFStringEncodingBig5": 2563, 
   "kCFStringEncodingBig5_E": 2569, 
   "kCFStringEncodingBig5_HKSCS_1999": 2566, 
   "kCFStringEncodingCNS_11643_92_P1": 1617, 
   "kCFStringEncodingCNS_11643_92_P2": 1618, 
   "kCFStringEncodingCNS_11643_92_P3": 1619, 
   "kCFStringEncodingDOSArabic": 1049, 
   "kCFStringEncodingDOSBalticRim": 1030, 
   "kCFStringEncodingDOSCanadianFrench": 1048, 
   "kCFStringEncodingDOSChineseSimplif": 1057, 
   "kCFStringEncodingDOSChineseTrad": 1059, 
   "kCFStringEncodingDOSCyrillic": 1043, 
   "kCFStringEncodingDOSGreek": 1029, 
   "kCFStringEncodingDOSGreek1": 1041, 
   "kCFStringEncodingDOSGreek2": 1052, 
   "kCFStringEncodingDOSHebrew": 1047, 
   "kCFStringEncodingDOSIcelandic": 1046, 
   "kCFStringEncodingDOSJapanese": 1056, 
   "kCFStringEncodingDOSKorean": 1058, 
   "kCFStringEncodingDOSLatin1": 1040, 
   "kCFStringEncodingDOSLatin2": 1042, 
   "kCFStringEncodingDOSLatinUS": 1024, 
   "kCFStringEncodingDOSNordic": 1050, 
   "kCFStringEncodingDOSPortuguese": 1045, 
   "kCFStringEncodingDOSRussian": 1051, 
   "kCFStringEncodingDOSThai": 1053, 
   "kCFStringEncodingDOSTurkish": 1044, 
   "kCFStringEncodingEBCDIC_CP037": 3074, 
   "kCFStringEncodingEBCDIC_US": 3073, 
   "kCFStringEncodingEUC_CN": 2352, 
   "kCFStringEncodingEUC_JP": 2336, 
   "kCFStringEncodingEUC_KR": 2368, 
   "kCFStringEncodingEUC_TW": 2353, 
   "kCFStringEncodingGBK_95": 1585, 
   "kCFStringEncodingGB_18030_2000": 1586, 
   "kCFStringEncodingGB_2312_80": 1584, 
   "kCFStringEncodingHZ_GB_2312": 2565, 
   "kCFStringEncodingISOLatin1": 513, 
   "kCFStringEncodingISOLatin10": 528, 
   "kCFStringEncodingISOLatin2": 514, 
   "kCFStringEncodingISOLatin3": 515, 
   "kCFStringEncodingISOLatin4": 516, 
   "kCFStringEncodingISOLatin5": 521, 
   "kCFStringEncodingISOLatin6": 522, 
   "kCFStringEncodingISOLatin7": 525, 
   "kCFStringEncodingISOLatin8": 526, 
   "kCFStringEncodingISOLatin9": 527, 
   "kCFStringEncodingISOLatinArabic": 518, 
   "kCFStringEncodingISOLatinCyrillic": 517, 
   "kCFStringEncodingISOLatinGreek": 519, 
   "kCFStringEncodingISOLatinHebrew": 520, 
   "kCFStringEncodingISOLatinThai": 523, 
   "kCFStringEncodingISO_2022_CN": 2096, 
   "kCFStringEncodingISO_2022_CN_EXT": 2097, 
   "kCFStringEncodingISO_2022_JP": 2080, 
   "kCFStringEncodingISO_2022_JP_1": 2082, 
   "kCFStringEncodingISO_2022_JP_2": 2081, 
   "kCFStringEncodingISO_2022_JP_3": 2083, 
   "kCFStringEncodingISO_2022_KR": 2112, 
   "kCFStringEncodingInvalidId": 4294967295, 
   "kCFStringEncodingJIS_C6226_78": 1572, 
   "kCFStringEncodingJIS_X0201_76": 1568, 
   "kCFStringEncodingJIS_X0208_83": 1569, 
   "kCFStringEncodingJIS_X0208_90": 1570, 
   "kCFStringEncodingJIS_X0212_90": 1571, 
   "kCFStringEncodingKOI8_R": 2562, 
   "kCFStringEncodingKOI8_U": 2568, 
   "kCFStringEncodingKSC_5601_87": 1600, 
   "kCFStringEncodingKSC_5601_92_Johab": 1601, 
   "kCFStringEncodingMacArabic": 4, 
   "kCFStringEncodingMacArmenian": 24, 
   "kCFStringEncodingMacBengali": 13, 
   "kCFStringEncodingMacBurmese": 19, 
   "kCFStringEncodingMacCeltic": 39, 
   "kCFStringEncodingMacCentralEurRoman": 29, 
   "kCFStringEncodingMacChineseSimp": 25, 
   "kCFStringEncodingMacChineseTrad": 2, 
   "kCFStringEncodingMacCroatian": 36, 
   "kCFStringEncodingMacCyrillic": 7, 
   "kCFStringEncodingMacDevanagari": 9, 
   "kCFStringEncodingMacDingbats": 34, 
   "kCFStringEncodingMacEthiopic": 28, 
   "kCFStringEncodingMacExtArabic": 31, 
   "kCFStringEncodingMacFarsi": 140, 
   "kCFStringEncodingMacGaelic": 40, 
   "kCFStringEncodingMacGeorgian": 23, 
   "kCFStringEncodingMacGreek": 6, 
   "kCFStringEncodingMacGujarati": 11, 
   "kCFStringEncodingMacGurmukhi": 10, 
   "kCFStringEncodingMacHFS": 255, 
   "kCFStringEncodingMacHebrew": 5, 
   "kCFStringEncodingMacIcelandic": 37, 
   "kCFStringEncodingMacInuit": 236, 
   "kCFStringEncodingMacJapanese": 1, 
   "kCFStringEncodingMacKannada": 16, 
   "kCFStringEncodingMacKhmer": 20, 
   "kCFStringEncodingMacKorean": 3, 
   "kCFStringEncodingMacLaotian": 22, 
   "kCFStringEncodingMacMalayalam": 17, 
   "kCFStringEncodingMacMongolian": 27, 
   "kCFStringEncodingMacOriya": 12, 
   "kCFStringEncodingMacRoman": 0, 
   "kCFStringEncodingMacRomanLatin1": 2564, 
   "kCFStringEncodingMacRomanian": 38, 
   "kCFStringEncodingMacSinhalese": 18, 
   "kCFStringEncodingMacSymbol": 33, 
   "kCFStringEncodingMacTamil": 14, 
   "kCFStringEncodingMacTelugu": 15, 
   "kCFStringEncodingMacThai": 21, 
   "kCFStringEncodingMacTibetan": 26, 
   "kCFStringEncodingMacTurkish": 35, 
   "kCFStringEncodingMacUkrainian": 152, 
   "kCFStringEncodingMacVT100": 252, 
   "kCFStringEncodingMacVietnamese": 30, 
   "kCFStringEncodingNextStepJapanese": 2818, 
   "kCFStringEncodingNextStepLatin": 2817, 
   "kCFStringEncodingNonLossyASCII": 3071, 
   "kCFStringEncodingShiftJIS": 2561, 
   "kCFStringEncodingShiftJIS_X0213": 1576, 
   "kCFStringEncodingShiftJIS_X0213_00": 1576, 
   "kCFStringEncodingShiftJIS_X0213_MenKuTen": 1577, 
   "kCFStringEncodingUTF16": 256, 
   "kCFStringEncodingUTF16BE": 268435712, 
   "kCFStringEncodingUTF16LE": 335544576, 
   "kCFStringEncodingUTF32": 201326848, 
   "kCFStringEncodingUTF32BE": 402653440, 
   "kCFStringEncodingUTF32LE": 469762304, 
   "kCFStringEncodingUTF7": 67109120, 
   "kCFStringEncodingUTF7_IMAP": 2576, 
   "kCFStringEncodingUTF8": 134217984, 
   "kCFStringEncodingUnicode": 256, 
   "kCFStringEncodingVISCII": 2567, 
   "kCFStringEncodingWindowsArabic": 1286, 
   "kCFStringEncodingWindowsBalticRim": 1287, 
   "kCFStringEncodingWindowsCyrillic": 1282, 
   "kCFStringEncodingWindowsGreek": 1283, 
   "kCFStringEncodingWindowsHebrew": 1285, 
   "kCFStringEncodingWindowsKoreanJohab": 1296, 
   "kCFStringEncodingWindowsLatin1": 1280, 
   "kCFStringEncodingWindowsLatin2": 1281, 
   "kCFStringEncodingWindowsLatin5": 1284, 
   "kCFStringEncodingWindowsVietnamese": 1288, 
   "kCFStringNormalizationFormC": 2, 
   "kCFStringNormalizationFormD": 0, 
   "kCFStringNormalizationFormKC": 3, 
   "kCFStringNormalizationFormKD": 1, 
   "kCFStringTokenizerAttributeLanguage": 131072, 
   "kCFStringTokenizerAttributeLatinTranscription": 65536, 
   "kCFStringTokenizerTokenHasDerivedSubTokensMask": 4, 
   "kCFStringTokenizerTokenHasHasNumbersMask": 8, 
   "kCFStringTokenizerTokenHasNonLettersMask": 16, 
   "kCFStringTokenizerTokenHasSubTokensMask": 2, 
   "kCFStringTokenizerTokenIsCJWordMask": 32, 
   "kCFStringTokenizerTokenNone": 0, 
   "kCFStringTokenizerTokenNormal": 1, 
   "kCFStringTokenizerUnitLineBreak": 3, 
   "kCFStringTokenizerUnitParagraph": 2, 
   "kCFStringTokenizerUnitSentence": 1, 
   "kCFStringTokenizerUnitWord": 0, 
   "kCFStringTokenizerUnitWordBoundary": 4, 
   "kCFTimeZoneNameStyleDaylightSaving": 2, 
   "kCFTimeZoneNameStyleGeneric": 4, 
   "kCFTimeZoneNameStyleShortDaylightSaving": 3, 
   "kCFTimeZoneNameStyleShortGeneric": 5, 
   "kCFTimeZoneNameStyleShortStandard": 1, 
   "kCFTimeZoneNameStyleStandard": 0, 
   "kCFURLBookmarkCreationMinimalBookmarkMask": 512, 
   "kCFURLBookmarkCreationPreferFileIDResolutionMask": 256, 
   "kCFURLBookmarkCreationSuitableForBookmarkFile": 1024, 
   "kCFURLComponentFragment": 12, 
   "kCFURLComponentHost": 8, 
   "kCFURLComponentNetLocation": 2, 
   "kCFURLComponentParameterString": 10, 
   "kCFURLComponentPassword": 6, 
   "kCFURLComponentPath": 3, 
   "kCFURLComponentPort": 9, 
   "kCFURLComponentQuery": 11, 
   "kCFURLComponentResourceSpecifier": 4, 
   "kCFURLComponentScheme": 1, 
   "kCFURLComponentUser": 5, 
   "kCFURLComponentUserInfo": 7, 
   "kCFURLEnumeratorDescendRecursively": 1, 
   "kCFURLEnumeratorEnd": 2, 
   "kCFURLEnumeratorError": 3, 
   "kCFURLEnumeratorGenerateFileReferenceURLs": 4, 
   "kCFURLEnumeratorSkipInvisibles": 2, 
   "kCFURLEnumeratorSkipPackageContents": 8, 
   "kCFURLEnumeratorSuccess": 1, 
   "kCFURLHFSPathStyle": 1, 
   "kCFURLImproperArgumentsError": -15, 
   "kCFURLPOSIXPathStyle": 0, 
   "kCFURLPropertyKeyUnavailableError": -17, 
   "kCFURLRemoteHostUnavailableError": -14, 
   "kCFURLResourceAccessViolationError": -13, 
   "kCFURLResourceNotFoundError": -12, 
   "kCFURLTimeoutError": -18, 
   "kCFURLUnknownError": -10, 
   "kCFURLUnknownPropertyKeyError": -16, 
   "kCFURLUnknownSchemeError": -11, 
   "kCFURLWindowsPathStyle": 2, 
   "kCFUserNotificationAlternateResponse": 1, 
   "kCFUserNotificationCancelResponse": 3, 
   "kCFUserNotificationCautionAlertLevel": 2, 
   "kCFUserNotificationDefaultResponse": 0, 
   "kCFUserNotificationNoDefaultButtonFlag": 32, 
   "kCFUserNotificationNoteAlertLevel": 1, 
   "kCFUserNotificationOtherResponse": 2, 
   "kCFUserNotificationPlainAlertLevel": 3, 
   "kCFUserNotificationStopAlertLevel": 0, 
   "kCFUserNotificationUseRadioButtonsFlag": 64, 
   "kCFXMLEntityTypeCharacter": 4, 
   "kCFXMLEntityTypeParameter": 0, 
   "kCFXMLEntityTypeParsedExternal": 2, 
   "kCFXMLEntityTypeParsedInternal": 1, 
   "kCFXMLEntityTypeUnparsed": 3, 
   "kCFXMLErrorElementlessDocument": 11, 
   "kCFXMLErrorEncodingConversionFailure": 3, 
   "kCFXMLErrorMalformedCDSect": 7, 
   "kCFXMLErrorMalformedCharacterReference": 13, 
   "kCFXMLErrorMalformedCloseTag": 8, 
   "kCFXMLErrorMalformedComment": 12, 
   "kCFXMLErrorMalformedDTD": 5, 
   "kCFXMLErrorMalformedDocument": 10, 
   "kCFXMLErrorMalformedName": 6, 
   "kCFXMLErrorMalformedParsedCharacterData": 14, 
   "kCFXMLErrorMalformedProcessingInstruction": 4, 
   "kCFXMLErrorMalformedStartTag": 9, 
   "kCFXMLErrorNoData": 15, 
   "kCFXMLErrorUnexpectedEOF": 1, 
   "kCFXMLErrorUnknownEncoding": 2, 
   "kCFXMLNodeCurrentVersion": 1, 
   "kCFXMLNodeTypeAttribute": 3, 
   "kCFXMLNodeTypeAttributeListDeclaration": 15, 
   "kCFXMLNodeTypeCDATASection": 7, 
   "kCFXMLNodeTypeComment": 5, 
   "kCFXMLNodeTypeDocument": 1, 
   "kCFXMLNodeTypeDocumentFragment": 8, 
   "kCFXMLNodeTypeDocumentType": 11, 
   "kCFXMLNodeTypeElement": 2, 
   "kCFXMLNodeTypeElementTypeDeclaration": 14, 
   "kCFXMLNodeTypeEntity": 9, 
   "kCFXMLNodeTypeEntityReference": 10, 
   "kCFXMLNodeTypeNotation": 13, 
   "kCFXMLNodeTypeProcessingInstruction": 4, 
   "kCFXMLNodeTypeText": 6, 
   "kCFXMLNodeTypeWhitespace": 12, 
   "kCFXMLParserAddImpliedAttributes": 32, 
   "kCFXMLParserAllOptions": 16777215, 
   "kCFXMLParserNoOptions": 0, 
   "kCFXMLParserReplacePhysicalEntities": 4, 
   "kCFXMLParserResolveExternalEntities": 16, 
   "kCFXMLParserSkipMetaData": 2, 
   "kCFXMLParserSkipWhitespace": 8, 
   "kCFXMLParserValidateDocument": 1, 
   "kCFXMLStatusParseInProgress": -1, 
   "kCFXMLStatusParseNotBegun": -2, 
   "kCFXMLStatusParseSuccessful": 0
  }, 
  "expressions": {}, 
  "externs": {
   "kCFAbsoluteTimeIntervalSince1904": {
    "typestr": "d"
   }, 
   "kCFAbsoluteTimeIntervalSince1970": {
    "typestr": "d"
   }, 
   "kCFAllocatorDefault": {
    "typestr": "^{__CFAllocator=}"
   }, 
   "kCFAllocatorMalloc": {
    "typestr": "^{__CFAllocator=}"
   }, 
   "kCFAllocatorMallocZone": {
    "typestr": "^{__CFAllocator=}"
   }, 
   "kCFAllocatorNull": {
    "typestr": "^{__CFAllocator=}"
   }, 
   "kCFAllocatorSystemDefault": {
    "typestr": "^{__CFAllocator=}"
   }, 
   "kCFAllocatorUseContext": {
    "typestr": "^{__CFAllocator=}"
   }, 
   "kCFBooleanFalse": {
    "typestr": "^{__CFBoolean=}"
   }, 
   "kCFBooleanTrue": {
    "typestr": "^{__CFBoolean=}"
   }, 
   "kCFBuddhistCalendar": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFBundleDevelopmentRegionKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFBundleExecutableKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFBundleIdentifierKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFBundleInfoDictionaryVersionKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFBundleLocalizationsKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFBundleNameKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFBundleVersionKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFChineseCalendar": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFCopyStringBagCallBacks": {
    "typestr": "{_CFBagCallBacks=l^?^?^?^?^?}"
   }, 
   "kCFCopyStringDictionaryKeyCallBacks": {
    "typestr": "{_CFDictionaryKeyCallBacks=l^?^?^?^?^?}"
   }, 
   "kCFCopyStringSetCallBacks": {
    "typestr": "{_CFSetCallBacks=l^?^?^?^?^?}"
   }, 
   "kCFCoreFoundationVersionNumber": {
    "typestr": "d"
   }, 
   "kCFDateFormatterAMSymbol": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterCalendar": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterCalendarName": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterDefaultDate": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterDefaultFormat": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterDoesRelativeDateFormattingKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterEraSymbols": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterGregorianStartDate": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterIsLenient": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterLongEraSymbols": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterMonthSymbols": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterPMSymbol": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterQuarterSymbols": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterShortMonthSymbols": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterShortQuarterSymbols": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterShortStandaloneMonthSymbols": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterShortStandaloneQuarterSymbols": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterShortStandaloneWeekdaySymbols": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterShortWeekdaySymbols": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterStandaloneMonthSymbols": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterStandaloneQuarterSymbols": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterStandaloneWeekdaySymbols": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterTimeZone": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterTwoDigitStartDate": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterVeryShortMonthSymbols": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterVeryShortStandaloneMonthSymbols": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterVeryShortStandaloneWeekdaySymbols": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterVeryShortWeekdaySymbols": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFDateFormatterWeekdaySymbols": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFErrorDescriptionKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFErrorDomainCocoa": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFErrorDomainMach": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFErrorDomainOSStatus": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFErrorDomainPOSIX": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFErrorLocalizedDescriptionKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFErrorLocalizedFailureReasonKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFErrorLocalizedRecoverySuggestionKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFErrorUnderlyingErrorKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFGregorianCalendar": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFHebrewCalendar": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFISO8601Calendar": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFIndianCalendar": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFIslamicCalendar": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFIslamicCivilCalendar": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFJapaneseCalendar": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFLocaleAlternateQuotationBeginDelimiterKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFLocaleAlternateQuotationEndDelimiterKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFLocaleCalendar": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFLocaleCalendarIdentifier": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFLocaleCollationIdentifier": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFLocaleCollatorIdentifier": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFLocaleCountryCode": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFLocaleCurrencyCode": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFLocaleCurrencySymbol": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFLocaleCurrentLocaleDidChangeNotification": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFLocaleDecimalSeparator": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFLocaleExemplarCharacterSet": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFLocaleGroupingSeparator": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFLocaleIdentifier": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFLocaleLanguageCode": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFLocaleMeasurementSystem": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFLocaleQuotationBeginDelimiterKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFLocaleQuotationEndDelimiterKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFLocaleScriptCode": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFLocaleUsesMetricSystem": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFLocaleVariantCode": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNull": {
    "typestr": "^{__CFNull=}"
   }, 
   "kCFNumberFormatterAlwaysShowDecimalSeparator": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterCurrencyCode": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterCurrencyDecimalSeparator": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterCurrencyGroupingSeparator": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterCurrencySymbol": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterDecimalSeparator": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterDefaultFormat": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterExponentSymbol": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterFormatWidth": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterGroupingSeparator": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterGroupingSize": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterInfinitySymbol": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterInternationalCurrencySymbol": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterIsLenient": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterMaxFractionDigits": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterMaxIntegerDigits": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterMaxSignificantDigits": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterMinFractionDigits": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterMinIntegerDigits": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterMinSignificantDigits": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterMinusSign": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterMultiplier": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterNaNSymbol": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterNegativePrefix": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterNegativeSuffix": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterPaddingCharacter": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterPaddingPosition": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterPerMillSymbol": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterPercentSymbol": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterPlusSign": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterPositivePrefix": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterPositiveSuffix": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterRoundingIncrement": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterRoundingMode": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterSecondaryGroupingSize": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterUseGroupingSeparator": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterUseSignificantDigits": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberFormatterZeroSymbol": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFNumberNaN": {
    "typestr": "^{__CFNumber=}"
   }, 
   "kCFNumberNegativeInfinity": {
    "typestr": "^{__CFNumber=}"
   }, 
   "kCFNumberPositiveInfinity": {
    "typestr": "^{__CFNumber=}"
   }, 
   "kCFPersianCalendar": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFPlugInDynamicRegisterFunctionKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFPlugInDynamicRegistrationKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFPlugInFactoriesKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFPlugInTypesKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFPlugInUnloadFunctionKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFPreferencesAnyApplication": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFPreferencesAnyHost": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFPreferencesAnyUser": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFPreferencesCurrentApplication": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFPreferencesCurrentHost": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFPreferencesCurrentUser": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFRepublicOfChinaCalendar": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFRunLoopCommonModes": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFRunLoopDefaultMode": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFSocketCommandKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFSocketErrorKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFSocketNameKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFSocketRegisterCommand": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFSocketResultKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFSocketRetrieveCommand": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFSocketValueKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyAppendToFile": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyDataWritten": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertyFileCurrentOffset": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertySocketNativeHandle": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertySocketRemoteHostName": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStreamPropertySocketRemotePortNumber": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStringBinaryHeapCallBacks": {
    "typestr": "{_CFBinaryHeapCallBacks=l^?^?^?^?}"
   }, 
   "kCFStringTransformFullwidthHalfwidth": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStringTransformHiraganaKatakana": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStringTransformLatinArabic": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStringTransformLatinCyrillic": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStringTransformLatinGreek": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStringTransformLatinHangul": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStringTransformLatinHebrew": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStringTransformLatinHiragana": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStringTransformLatinKatakana": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStringTransformLatinThai": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStringTransformMandarinLatin": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStringTransformStripCombiningMarks": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStringTransformStripDiacritics": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStringTransformToLatin": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStringTransformToUnicodeName": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFStringTransformToXMLHex": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFTimeZoneSystemTimeZoneDidChangeNotification": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFTypeArrayCallBacks": {
    "typestr": "{_CFArrayCallBacks=l^?^?^?^?}"
   }, 
   "kCFTypeBagCallBacks": {
    "typestr": "{_CFBagCallBacks=l^?^?^?^?^?}"
   }, 
   "kCFTypeDictionaryKeyCallBacks": {
    "typestr": "{_CFDictionaryKeyCallBacks=l^?^?^?^?^?}"
   }, 
   "kCFTypeDictionaryValueCallBacks": {
    "typestr": "{_CFDictionaryValueCallBacks=l^?^?^?^?}"
   }, 
   "kCFTypeSetCallBacks": {
    "typestr": "{_CFSetCallBacks=l^?^?^?^?^?}"
   }, 
   "kCFURLAttributeModificationDateKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLContentAccessDateKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLContentModificationDateKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLCreationDateKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLCustomIconKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLEffectiveIconKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLFileAllocatedSizeKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLFileDirectoryContents": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLFileExists": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLFileLastModificationTime": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLFileLength": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLFileOwnerID": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLFilePOSIXMode": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLFileSizeKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLHTTPStatusCode": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLHTTPStatusLine": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLHasHiddenExtensionKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLIsAliasFileKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLIsDirectoryKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLIsHiddenKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLIsPackageKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLIsRegularFileKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLIsSymbolicLinkKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLIsSystemImmutableKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLIsUserImmutableKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLIsVolumeKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLLabelColorKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLLabelNumberKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLLinkCountKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLLocalizedLabelKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLLocalizedNameKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLLocalizedTypeDescriptionKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLNameKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLParentDirectoryURLKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLTypeIdentifierKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLVolumeAvailableCapacityKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLVolumeIsJournalingKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLVolumeLocalizedFormatDescriptionKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLVolumeResourceCountKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLVolumeSupportsCasePreservedNamesKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLVolumeSupportsCaseSensitiveNamesKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLVolumeSupportsHardLinksKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLVolumeSupportsJournalingKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLVolumeSupportsPersistentIDsKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLVolumeSupportsSparseFilesKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLVolumeSupportsSymbolicLinksKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLVolumeSupportsZeroRunsKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLVolumeTotalCapacityKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFURLVolumeURLKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFUserNotificationAlertHeaderKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFUserNotificationAlertMessageKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFUserNotificationAlternateButtonTitleKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFUserNotificationCheckBoxTitlesKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFUserNotificationDefaultButtonTitleKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFUserNotificationIconURLKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFUserNotificationLocalizationURLKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFUserNotificationOtherButtonTitleKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFUserNotificationPopUpSelectionKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFUserNotificationPopUpTitlesKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFUserNotificationProgressIndicatorValueKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFUserNotificationSoundURLKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFUserNotificationTextFieldTitlesKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFUserNotificationTextFieldValuesKey": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFXMLTreeErrorDescription": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFXMLTreeErrorLineNumber": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFXMLTreeErrorLocation": {
    "typestr": "^{__CFString=}"
   }, 
   "kCFXMLTreeErrorStatusCode": {
    "typestr": "^{__CFString=}"
   }
  }, 
  "formal_protocols": {}, 
  "func_macros": {
   "CFCopyLocalizedString": "def CFCopyLocalizedString(key,comment): return CFBundleCopyLocalizedString(CFBundleGetMainBundle(), (key), (key), NULL)", 
   "CFCopyLocalizedStringFromTable": "def CFCopyLocalizedStringFromTable(key,tbl,comment): return CFBundleCopyLocalizedString(CFBundleGetMainBundle(), (key), (key), (tbl))", 
   "CFCopyLocalizedStringFromTableInBundle": "def CFCopyLocalizedStringFromTableInBundle(key,tbl,bundle,comment): return CFBundleCopyLocalizedString((bundle), (key), (key), (tbl))", 
   "CFCopyLocalizedStringWithDefaultValue": "def CFCopyLocalizedStringWithDefaultValue(key,tbl,bundle,value,comment): return CFBundleCopyLocalizedString((bundle), (key), (value), (tbl))", 
   "CF_FORMAT_ARGUMENT": "def CF_FORMAT_ARGUMENT(A): return __attribute__((format_arg(A)))", 
   "CF_FORMAT_FUNCTION": "def CF_FORMAT_FUNCTION(F,A): return __attribute__((format(CFString, F, A)))"
  }, 
  "functions": {
   "CFAbsoluteTimeAddGregorianUnits": {
    "args": [
     {
      "name": "at", 
      "typestr": "d"
     }, 
     {
      "name": "tz", 
      "typestr": "^{__CFTimeZone=}"
     }, 
     {
      "name": "units", 
      "typestr": "{_CFGregorianUnits=llllld}"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CFAbsoluteTimeGetCurrent": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CFAbsoluteTimeGetDayOfWeek": {
    "args": [
     {
      "name": "at", 
      "typestr": "d"
     }, 
     {
      "name": "tz", 
      "typestr": "^{__CFTimeZone=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFAbsoluteTimeGetDayOfYear": {
    "args": [
     {
      "name": "at", 
      "typestr": "d"
     }, 
     {
      "name": "tz", 
      "typestr": "^{__CFTimeZone=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFAbsoluteTimeGetDifferenceAsGregorianUnits": {
    "args": [
     {
      "name": "at1", 
      "typestr": "d"
     }, 
     {
      "name": "at2", 
      "typestr": "d"
     }, 
     {
      "name": "tz", 
      "typestr": "^{__CFTimeZone=}"
     }, 
     {
      "name": "unitFlags", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "{_CFGregorianUnits=llllld}"
    }
   }, 
   "CFAbsoluteTimeGetGregorianDate": {
    "args": [
     {
      "name": "at", 
      "typestr": "d"
     }, 
     {
      "name": "tz", 
      "typestr": "^{__CFTimeZone=}"
     }
    ], 
    "retval": {
     "typestr": "{_CFGregorianDate=lccccd}"
    }
   }, 
   "CFAbsoluteTimeGetWeekOfYear": {
    "args": [
     {
      "name": "at", 
      "typestr": "d"
     }, 
     {
      "name": "tz", 
      "typestr": "^{__CFTimeZone=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFAllocatorAllocate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "size", 
      "typestr": "l"
     }, 
     {
      "name": "hint", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "^v"
    }
   }, 
   "CFAllocatorCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFAllocatorContext=l^v^?^?^?^?^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFAllocator=}"
    }
   }, 
   "CFAllocatorDeallocate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "ptr", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFAllocatorGetContext": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFAllocatorContext=l^v^?^?^?^?^?^?^?}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFAllocatorGetDefault": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "^{__CFAllocator=}"
    }
   }, 
   "CFAllocatorGetPreferredSizeForSize": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "size", 
      "typestr": "l"
     }, 
     {
      "name": "hint", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFAllocatorGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFAllocatorReallocate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "ptr", 
      "typestr": "^v"
     }, 
     {
      "name": "newsize", 
      "typestr": "l"
     }, 
     {
      "name": "hint", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "^v"
    }
   }, 
   "CFAllocatorSetDefault": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFArrayAppendArray": {
    "args": [
     {
      "name": "theArray", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "otherArray", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "otherRange", 
      "typestr": "{_CFRange=ll}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFArrayAppendValue": {
    "args": [
     {
      "name": "theArray", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFArrayApplyFunction": {
    "args": [
     {
      "name": "theArray", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^v", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "applier", 
      "typestr": "^?"
     }, 
     {
      "name": "context", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFArrayBSearchValues": {
    "args": [
     {
      "name": "theArray", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": "@"
        }, 
        {
         "typestr": "@"
        }, 
        {
         "typestr": "@"
        }
       ], 
       "retval": {
        "typestr": "L"
       }
      }, 
      "name": "comparator", 
      "typestr": "^?"
     }, 
     {
      "name": "context", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFArrayContainsValue": {
    "args": [
     {
      "name": "theArray", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFArrayCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "values", 
      "typestr": "^^v"
     }, 
     {
      "name": "numValues", 
      "typestr": "l"
     }, 
     {
      "name": "callBacks", 
      "typestr": "^{_CFArrayCallBacks=l^?^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFArrayCreateCopy": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "theArray", 
      "typestr": "^{__CFArray=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFArrayCreateMutable": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "capacity", 
      "typestr": "l"
     }, 
     {
      "name": "callBacks", 
      "typestr": "^{_CFArrayCallBacks=l^?^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFArrayCreateMutableCopy": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "capacity", 
      "typestr": "l"
     }, 
     {
      "name": "theArray", 
      "typestr": "^{__CFArray=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFArrayExchangeValuesAtIndices": {
    "args": [
     {
      "name": "theArray", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "idx1", 
      "typestr": "l"
     }, 
     {
      "name": "idx2", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFArrayGetCount": {
    "args": [
     {
      "name": "theArray", 
      "typestr": "^{__CFArray=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFArrayGetCountOfValue": {
    "args": [
     {
      "name": "theArray", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFArrayGetFirstIndexOfValue": {
    "args": [
     {
      "name": "theArray", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFArrayGetLastIndexOfValue": {
    "args": [
     {
      "name": "theArray", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFArrayGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFArrayGetValueAtIndex": {
    "args": [
     {
      "name": "theArray", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "idx", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "^v"
    }
   }, 
   "CFArrayGetValues": {
    "args": [
     {
      "name": "theArray", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "values", 
      "typestr": "^^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFArrayInsertValueAtIndex": {
    "args": [
     {
      "name": "theArray", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "idx", 
      "typestr": "l"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFArrayRemoveAllValues": {
    "args": [
     {
      "name": "theArray", 
      "typestr": "^{__CFArray=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFArrayRemoveValueAtIndex": {
    "args": [
     {
      "name": "theArray", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "idx", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFArrayReplaceValues": {
    "args": [
     {
      "name": "theArray", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "newValues", 
      "typestr": "^^v"
     }, 
     {
      "name": "newCount", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFArraySetValueAtIndex": {
    "args": [
     {
      "name": "theArray", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "idx", 
      "typestr": "l"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFArraySortValues": {
    "args": [
     {
      "name": "theArray", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": "@"
        }, 
        {
         "typestr": "@"
        }, 
        {
         "typestr": "@"
        }
       ], 
       "retval": {
        "typestr": "L"
       }
      }, 
      "name": "comparator", 
      "typestr": "^?"
     }, 
     {
      "name": "context", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFAttributedStringBeginEditing": {
    "args": [
     {
      "name": "aStr", 
      "typestr": "^{__CFAttributedString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFAttributedStringCreate": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "str", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "attributes", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFAttributedString=}"
    }
   }, 
   "CFAttributedStringCreateCopy": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "aStr", 
      "typestr": "^{__CFAttributedString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFAttributedString=}"
    }
   }, 
   "CFAttributedStringCreateMutable": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "maxLength", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFAttributedString=}"
    }
   }, 
   "CFAttributedStringCreateMutableCopy": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "maxLength", 
      "typestr": "l"
     }, 
     {
      "name": "aStr", 
      "typestr": "^{__CFAttributedString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFAttributedString=}"
    }
   }, 
   "CFAttributedStringCreateWithSubstring": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "aStr", 
      "typestr": "^{__CFAttributedString=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFAttributedString=}"
    }
   }, 
   "CFAttributedStringEndEditing": {
    "args": [
     {
      "name": "aStr", 
      "typestr": "^{__CFAttributedString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFAttributedStringGetAttribute": {
    "args": [
     {
      "name": "aStr", 
      "typestr": "^{__CFAttributedString=}"
     }, 
     {
      "name": "loc", 
      "typestr": "l"
     }, 
     {
      "name": "attrName", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "effectiveRange", 
      "typestr": "^{_CFRange=ll}"
     }
    ], 
    "retval": {
     "typestr": "@"
    }
   }, 
   "CFAttributedStringGetAttributeAndLongestEffectiveRange": {
    "args": [
     {
      "name": "aStr", 
      "typestr": "^{__CFAttributedString=}"
     }, 
     {
      "name": "loc", 
      "typestr": "l"
     }, 
     {
      "name": "attrName", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "inRange", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "longestEffectiveRange", 
      "typestr": "^{_CFRange=ll}"
     }
    ], 
    "retval": {
     "typestr": "@"
    }
   }, 
   "CFAttributedStringGetAttributes": {
    "args": [
     {
      "name": "aStr", 
      "typestr": "^{__CFAttributedString=}"
     }, 
     {
      "name": "loc", 
      "typestr": "l"
     }, 
     {
      "name": "effectiveRange", 
      "typestr": "^{_CFRange=ll}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CFAttributedStringGetAttributesAndLongestEffectiveRange": {
    "args": [
     {
      "name": "aStr", 
      "typestr": "^{__CFAttributedString=}"
     }, 
     {
      "name": "loc", 
      "typestr": "l"
     }, 
     {
      "name": "inRange", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "longestEffectiveRange", 
      "typestr": "^{_CFRange=ll}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CFAttributedStringGetLength": {
    "args": [
     {
      "name": "aStr", 
      "typestr": "^{__CFAttributedString=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFAttributedStringGetMutableString": {
    "args": [
     {
      "name": "aStr", 
      "typestr": "^{__CFAttributedString=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFAttributedStringGetString": {
    "args": [
     {
      "name": "aStr", 
      "typestr": "^{__CFAttributedString=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFAttributedStringGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFAttributedStringRemoveAttribute": {
    "args": [
     {
      "name": "aStr", 
      "typestr": "^{__CFAttributedString=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "attrName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFAttributedStringReplaceAttributedString": {
    "args": [
     {
      "name": "aStr", 
      "typestr": "^{__CFAttributedString=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "replacement", 
      "typestr": "^{__CFAttributedString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFAttributedStringReplaceString": {
    "args": [
     {
      "name": "aStr", 
      "typestr": "^{__CFAttributedString=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "replacement", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFAttributedStringSetAttribute": {
    "args": [
     {
      "name": "aStr", 
      "typestr": "^{__CFAttributedString=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "attrName", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "value", 
      "typestr": "@"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFAttributedStringSetAttributes": {
    "args": [
     {
      "name": "aStr", 
      "typestr": "^{__CFAttributedString=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "replacement", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "clearOtherAttributes", 
      "typestr": "Z"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBagAddValue": {
    "args": [
     {
      "name": "theBag", 
      "typestr": "^{__CFBag=}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBagApplyFunction": {
    "args": [
     {
      "name": "theBag", 
      "typestr": "^{__CFBag=}"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^v", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "applier", 
      "typestr": "^?"
     }, 
     {
      "name": "context", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBagContainsValue": {
    "args": [
     {
      "name": "theBag", 
      "typestr": "^{__CFBag=}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFBagCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "values", 
      "typestr": "^^v"
     }, 
     {
      "name": "numValues", 
      "typestr": "l"
     }, 
     {
      "name": "callBacks", 
      "typestr": "^{_CFBagCallBacks=l^?^?^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFBag=}"
    }
   }, 
   "CFBagCreateCopy": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "theBag", 
      "typestr": "^{__CFBag=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFBag=}"
    }
   }, 
   "CFBagCreateMutable": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "capacity", 
      "typestr": "l"
     }, 
     {
      "name": "callBacks", 
      "typestr": "^{_CFBagCallBacks=l^?^?^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFBag=}"
    }
   }, 
   "CFBagCreateMutableCopy": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "capacity", 
      "typestr": "l"
     }, 
     {
      "name": "theBag", 
      "typestr": "^{__CFBag=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFBag=}"
    }
   }, 
   "CFBagGetCount": {
    "args": [
     {
      "name": "theBag", 
      "typestr": "^{__CFBag=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFBagGetCountOfValue": {
    "args": [
     {
      "name": "theBag", 
      "typestr": "^{__CFBag=}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFBagGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFBagGetValue": {
    "args": [
     {
      "name": "theBag", 
      "typestr": "^{__CFBag=}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "^v"
    }
   }, 
   "CFBagGetValueIfPresent": {
    "args": [
     {
      "name": "theBag", 
      "typestr": "^{__CFBag=}"
     }, 
     {
      "name": "candidate", 
      "typestr": "^v"
     }, 
     {
      "name": "value", 
      "typestr": "^^v"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFBagGetValues": {
    "args": [
     {
      "name": "theBag", 
      "typestr": "^{__CFBag=}"
     }, 
     {
      "name": "values", 
      "typestr": "^^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBagRemoveAllValues": {
    "args": [
     {
      "name": "theBag", 
      "typestr": "^{__CFBag=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBagRemoveValue": {
    "args": [
     {
      "name": "theBag", 
      "typestr": "^{__CFBag=}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBagReplaceValue": {
    "args": [
     {
      "name": "theBag", 
      "typestr": "^{__CFBag=}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBagSetValue": {
    "args": [
     {
      "name": "theBag", 
      "typestr": "^{__CFBag=}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBinaryHeapAddValue": {
    "args": [
     {
      "name": "heap", 
      "typestr": "^{__CFBinaryHeap=}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBinaryHeapApplyFunction": {
    "args": [
     {
      "name": "heap", 
      "typestr": "^{__CFBinaryHeap=}"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^v", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "applier", 
      "typestr": "^?"
     }, 
     {
      "name": "context", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBinaryHeapContainsValue": {
    "args": [
     {
      "name": "heap", 
      "typestr": "^{__CFBinaryHeap=}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFBinaryHeapCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "capacity", 
      "typestr": "l"
     }, 
     {
      "name": "callBacks", 
      "typestr": "^{_CFBinaryHeapCallBacks=l^?^?^?^?}"
     }, 
     {
      "name": "compareContext", 
      "typestr": "^{_CFBinaryHeapCompareContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFBinaryHeap=}"
    }
   }, 
   "CFBinaryHeapCreateCopy": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "capacity", 
      "typestr": "l"
     }, 
     {
      "name": "heap", 
      "typestr": "^{__CFBinaryHeap=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFBinaryHeap=}"
    }
   }, 
   "CFBinaryHeapGetCount": {
    "args": [
     {
      "name": "heap", 
      "typestr": "^{__CFBinaryHeap=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFBinaryHeapGetCountOfValue": {
    "args": [
     {
      "name": "heap", 
      "typestr": "^{__CFBinaryHeap=}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFBinaryHeapGetMinimum": {
    "args": [
     {
      "name": "heap", 
      "typestr": "^{__CFBinaryHeap=}"
     }
    ], 
    "retval": {
     "typestr": "^v"
    }
   }, 
   "CFBinaryHeapGetMinimumIfPresent": {
    "args": [
     {
      "name": "heap", 
      "typestr": "^{__CFBinaryHeap=}"
     }, 
     {
      "name": "value", 
      "typestr": "^^v"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFBinaryHeapGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFBinaryHeapGetValues": {
    "args": [
     {
      "name": "heap", 
      "typestr": "^{__CFBinaryHeap=}"
     }, 
     {
      "name": "values", 
      "typestr": "^^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBinaryHeapRemoveAllValues": {
    "args": [
     {
      "name": "heap", 
      "typestr": "^{__CFBinaryHeap=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBinaryHeapRemoveMinimumValue": {
    "args": [
     {
      "name": "heap", 
      "typestr": "^{__CFBinaryHeap=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBitVectorContainsBit": {
    "args": [
     {
      "name": "bv", 
      "typestr": "^{__CFBitVector=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "value", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFBitVectorCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "bytes", 
      "typestr": "^C"
     }, 
     {
      "name": "numBits", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFBitVector=}"
    }
   }, 
   "CFBitVectorCreateCopy": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "bv", 
      "typestr": "^{__CFBitVector=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFBitVector=}"
    }
   }, 
   "CFBitVectorCreateMutable": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "capacity", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFBitVector=}"
    }
   }, 
   "CFBitVectorCreateMutableCopy": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "capacity", 
      "typestr": "l"
     }, 
     {
      "name": "bv", 
      "typestr": "^{__CFBitVector=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFBitVector=}"
    }
   }, 
   "CFBitVectorFlipBitAtIndex": {
    "args": [
     {
      "name": "bv", 
      "typestr": "^{__CFBitVector=}"
     }, 
     {
      "name": "idx", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBitVectorFlipBits": {
    "args": [
     {
      "name": "bv", 
      "typestr": "^{__CFBitVector=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBitVectorGetBitAtIndex": {
    "args": [
     {
      "name": "bv", 
      "typestr": "^{__CFBitVector=}"
     }, 
     {
      "name": "idx", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFBitVectorGetBits": {
    "args": [
     {
      "name": "bv", 
      "typestr": "^{__CFBitVector=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "bytes", 
      "typestr": "^C"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBitVectorGetCount": {
    "args": [
     {
      "name": "bv", 
      "typestr": "^{__CFBitVector=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFBitVectorGetCountOfBit": {
    "args": [
     {
      "name": "bv", 
      "typestr": "^{__CFBitVector=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "value", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFBitVectorGetFirstIndexOfBit": {
    "args": [
     {
      "name": "bv", 
      "typestr": "^{__CFBitVector=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "value", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFBitVectorGetLastIndexOfBit": {
    "args": [
     {
      "name": "bv", 
      "typestr": "^{__CFBitVector=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "value", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFBitVectorGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFBitVectorSetAllBits": {
    "args": [
     {
      "name": "bv", 
      "typestr": "^{__CFBitVector=}"
     }, 
     {
      "name": "value", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBitVectorSetBitAtIndex": {
    "args": [
     {
      "name": "bv", 
      "typestr": "^{__CFBitVector=}"
     }, 
     {
      "name": "idx", 
      "typestr": "l"
     }, 
     {
      "name": "value", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBitVectorSetBits": {
    "args": [
     {
      "name": "bv", 
      "typestr": "^{__CFBitVector=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "value", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBitVectorSetCount": {
    "args": [
     {
      "name": "bv", 
      "typestr": "^{__CFBitVector=}"
     }, 
     {
      "name": "count", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBooleanGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFBooleanGetValue": {
    "args": [
     {
      "name": "boolean", 
      "typestr": "^{__CFBoolean=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFBundleCloseBundleResourceMap": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }, 
     {
      "name": "refNum", 
      "typestr": "s"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBundleCopyAuxiliaryExecutableURL": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }, 
     {
      "name": "executableName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFBundleCopyBuiltInPlugInsURL": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFBundleCopyBundleLocalizations": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFBundleCopyBundleURL": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFBundleCopyExecutableArchitectures": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFBundleCopyExecutableArchitecturesForURL": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFBundleCopyExecutableURL": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFBundleCopyInfoDictionaryForURL": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CFBundleCopyInfoDictionaryInDirectory": {
    "args": [
     {
      "name": "bundleURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CFBundleCopyLocalizationsForPreferences": {
    "args": [
     {
      "name": "locArray", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "prefArray", 
      "typestr": "^{__CFArray=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFBundleCopyLocalizationsForURL": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFBundleCopyLocalizedString": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }, 
     {
      "name": "key", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "value", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "tableName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFBundleCopyPreferredLocalizationsFromArray": {
    "args": [
     {
      "name": "locArray", 
      "typestr": "^{__CFArray=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFBundleCopyPrivateFrameworksURL": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFBundleCopyResourceURL": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }, 
     {
      "name": "resourceName", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "resourceType", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "subDirName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFBundleCopyResourceURLForLocalization": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }, 
     {
      "name": "resourceName", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "resourceType", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "subDirName", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "localizationName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFBundleCopyResourceURLInDirectory": {
    "args": [
     {
      "name": "bundleURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "resourceName", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "resourceType", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "subDirName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFBundleCopyResourceURLsOfType": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }, 
     {
      "name": "resourceType", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "subDirName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFBundleCopyResourceURLsOfTypeForLocalization": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }, 
     {
      "name": "resourceType", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "subDirName", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "localizationName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFBundleCopyResourceURLsOfTypeInDirectory": {
    "args": [
     {
      "name": "bundleURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "resourceType", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "subDirName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFBundleCopyResourcesDirectoryURL": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFBundleCopySharedFrameworksURL": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFBundleCopySharedSupportURL": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFBundleCopySupportFilesDirectoryURL": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFBundleCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "bundleURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFBundle=}"
    }
   }, 
   "CFBundleCreateBundlesFromDirectory": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "directoryURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "bundleType", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFBundleGetAllBundles": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFBundleGetBundleWithIdentifier": {
    "args": [
     {
      "name": "bundleID", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFBundle=}"
    }
   }, 
   "CFBundleGetDataPointerForName": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }, 
     {
      "name": "symbolName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "^v"
    }
   }, 
   "CFBundleGetDataPointersForNames": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }, 
     {
      "name": "symbolNames", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "stbl", 
      "typestr": "^^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBundleGetDevelopmentRegion": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFBundleGetFunctionPointerForName": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }, 
     {
      "name": "functionName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "^v"
    }
   }, 
   "CFBundleGetFunctionPointersForNames": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }, 
     {
      "name": "functionNames", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "ftbl", 
      "typestr": "^^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBundleGetIdentifier": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFBundleGetInfoDictionary": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CFBundleGetLocalInfoDictionary": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CFBundleGetMainBundle": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "^{__CFBundle=}"
    }
   }, 
   "CFBundleGetPackageInfo": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }, 
     {
      "name": "packageType", 
      "typestr": "^L"
     }, 
     {
      "name": "packageCreator", 
      "typestr": "^L"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFBundleGetPackageInfoInDirectory": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "packageType", 
      "typestr": "^L"
     }, 
     {
      "name": "packageCreator", 
      "typestr": "^L"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFBundleGetPlugIn": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFBundle=}"
    }
   }, 
   "CFBundleGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFBundleGetValueForInfoDictionaryKey": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }, 
     {
      "name": "key", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "@"
    }
   }, 
   "CFBundleGetVersionNumber": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFBundleIsExecutableLoaded": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFBundleLoadExecutable": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFBundleLoadExecutableAndReturnError": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }, 
     {
      "already_cfretained": true, 
      "name": "error", 
      "null_accepted": true, 
      "type_modifier": "o", 
      "typestr": "^^{__CFError=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFBundleOpenBundleResourceFiles": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }, 
     {
      "name": "refNum", 
      "typestr": "^s"
     }, 
     {
      "name": "localizedRefNum", 
      "typestr": "^s"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFBundleOpenBundleResourceMap": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "typestr": "s"
    }
   }, 
   "CFBundlePreflightExecutable": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }, 
     {
      "already_cfretained": true, 
      "name": "error", 
      "null_accepted": true, 
      "type_modifier": "o", 
      "typestr": "^^{__CFError=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFBundleUnloadExecutable": {
    "args": [
     {
      "name": "bundle", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFByteOrderGetCurrent": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFCalendarAddComponents": {
    "args": [
     {
      "name": "calendar", 
      "typestr": "^{__CFCalendar=}"
     }, 
     {
      "name": "at", 
      "typestr": "^d"
     }, 
     {
      "name": "options", 
      "typestr": "L"
     }, 
     {
      "name": "componentDesc", 
      "typestr": "^c"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }, 
    "variadic": true
   }, 
   "CFCalendarComposeAbsoluteTime": {
    "args": [
     {
      "name": "calendar", 
      "typestr": "^{__CFCalendar=}"
     }, 
     {
      "name": "at", 
      "typestr": "^d"
     }, 
     {
      "name": "componentDesc", 
      "typestr": "^c"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }, 
    "variadic": true
   }, 
   "CFCalendarCopyCurrent": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFCalendar=}"
    }
   }, 
   "CFCalendarCopyLocale": {
    "args": [
     {
      "name": "calendar", 
      "typestr": "^{__CFCalendar=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFLocale=}"
    }
   }, 
   "CFCalendarCopyTimeZone": {
    "args": [
     {
      "name": "calendar", 
      "typestr": "^{__CFCalendar=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFTimeZone=}"
    }
   }, 
   "CFCalendarCreateWithIdentifier": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "identifier", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFCalendar=}"
    }
   }, 
   "CFCalendarDecomposeAbsoluteTime": {
    "args": [
     {
      "name": "calendar", 
      "typestr": "^{__CFCalendar=}"
     }, 
     {
      "name": "at", 
      "typestr": "d"
     }, 
     {
      "name": "componentDesc", 
      "typestr": "^c"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }, 
    "variadic": true
   }, 
   "CFCalendarGetComponentDifference": {
    "args": [
     {
      "name": "calendar", 
      "typestr": "^{__CFCalendar=}"
     }, 
     {
      "name": "startingAT", 
      "typestr": "d"
     }, 
     {
      "name": "resultAT", 
      "typestr": "d"
     }, 
     {
      "name": "options", 
      "typestr": "L"
     }, 
     {
      "name": "componentDesc", 
      "typestr": "^c"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }, 
    "variadic": true
   }, 
   "CFCalendarGetFirstWeekday": {
    "args": [
     {
      "name": "calendar", 
      "typestr": "^{__CFCalendar=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFCalendarGetIdentifier": {
    "args": [
     {
      "name": "calendar", 
      "typestr": "^{__CFCalendar=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFCalendarGetMaximumRangeOfUnit": {
    "args": [
     {
      "name": "calendar", 
      "typestr": "^{__CFCalendar=}"
     }, 
     {
      "name": "unit", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "{_CFRange=ll}"
    }
   }, 
   "CFCalendarGetMinimumDaysInFirstWeek": {
    "args": [
     {
      "name": "calendar", 
      "typestr": "^{__CFCalendar=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFCalendarGetMinimumRangeOfUnit": {
    "args": [
     {
      "name": "calendar", 
      "typestr": "^{__CFCalendar=}"
     }, 
     {
      "name": "unit", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "{_CFRange=ll}"
    }
   }, 
   "CFCalendarGetOrdinalityOfUnit": {
    "args": [
     {
      "name": "calendar", 
      "typestr": "^{__CFCalendar=}"
     }, 
     {
      "name": "smallerUnit", 
      "typestr": "L"
     }, 
     {
      "name": "biggerUnit", 
      "typestr": "L"
     }, 
     {
      "name": "at", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFCalendarGetRangeOfUnit": {
    "args": [
     {
      "name": "calendar", 
      "typestr": "^{__CFCalendar=}"
     }, 
     {
      "name": "smallerUnit", 
      "typestr": "L"
     }, 
     {
      "name": "biggerUnit", 
      "typestr": "L"
     }, 
     {
      "name": "at", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "{_CFRange=ll}"
    }
   }, 
   "CFCalendarGetTimeRangeOfUnit": {
    "args": [
     {
      "name": "calendar", 
      "typestr": "^{__CFCalendar=}"
     }, 
     {
      "name": "unit", 
      "typestr": "L"
     }, 
     {
      "name": "at", 
      "typestr": "d"
     }, 
     {
      "name": "startp", 
      "typestr": "^d"
     }, 
     {
      "name": "tip", 
      "typestr": "^d"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFCalendarGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFCalendarSetFirstWeekday": {
    "args": [
     {
      "name": "calendar", 
      "typestr": "^{__CFCalendar=}"
     }, 
     {
      "name": "wkdy", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFCalendarSetLocale": {
    "args": [
     {
      "name": "calendar", 
      "typestr": "^{__CFCalendar=}"
     }, 
     {
      "name": "locale", 
      "typestr": "^{__CFLocale=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFCalendarSetMinimumDaysInFirstWeek": {
    "args": [
     {
      "name": "calendar", 
      "typestr": "^{__CFCalendar=}"
     }, 
     {
      "name": "mwd", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFCalendarSetTimeZone": {
    "args": [
     {
      "name": "calendar", 
      "typestr": "^{__CFCalendar=}"
     }, 
     {
      "name": "tz", 
      "typestr": "^{__CFTimeZone=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFCharacterSetAddCharactersInRange": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFCharacterSet=}"
     }, 
     {
      "name": "theRange", 
      "typestr": "{_CFRange=ll}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFCharacterSetAddCharactersInString": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFCharacterSet=}"
     }, 
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFCharacterSetCreateBitmapRepresentation": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "theSet", 
      "typestr": "^{__CFCharacterSet=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CFCharacterSetCreateCopy": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "theSet", 
      "typestr": "^{__CFCharacterSet=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFCharacterSet=}"
    }
   }, 
   "CFCharacterSetCreateInvertedSet": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "theSet", 
      "typestr": "^{__CFCharacterSet=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFCharacterSet=}"
    }
   }, 
   "CFCharacterSetCreateMutable": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFCharacterSet=}"
    }
   }, 
   "CFCharacterSetCreateMutableCopy": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "theSet", 
      "typestr": "^{__CFCharacterSet=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFCharacterSet=}"
    }
   }, 
   "CFCharacterSetCreateWithBitmapRepresentation": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "theData", 
      "typestr": "^{__CFData=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFCharacterSet=}"
    }
   }, 
   "CFCharacterSetCreateWithCharactersInRange": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "theRange", 
      "typestr": "{_CFRange=ll}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFCharacterSet=}"
    }
   }, 
   "CFCharacterSetCreateWithCharactersInString": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFCharacterSet=}"
    }
   }, 
   "CFCharacterSetGetPredefined": {
    "args": [
     {
      "name": "theSetIdentifier", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "^{__CFCharacterSet=}"
    }
   }, 
   "CFCharacterSetGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFCharacterSetHasMemberInPlane": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFCharacterSet=}"
     }, 
     {
      "name": "thePlane", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFCharacterSetIntersect": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFCharacterSet=}"
     }, 
     {
      "name": "theOtherSet", 
      "typestr": "^{__CFCharacterSet=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFCharacterSetInvert": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFCharacterSet=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFCharacterSetIsCharacterMember": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFCharacterSet=}"
     }, 
     {
      "name": "theChar", 
      "typestr": "T"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFCharacterSetIsLongCharacterMember": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFCharacterSet=}"
     }, 
     {
      "name": "theChar", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFCharacterSetIsSupersetOfSet": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFCharacterSet=}"
     }, 
     {
      "name": "theOtherset", 
      "typestr": "^{__CFCharacterSet=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFCharacterSetRemoveCharactersInRange": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFCharacterSet=}"
     }, 
     {
      "name": "theRange", 
      "typestr": "{_CFRange=ll}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFCharacterSetRemoveCharactersInString": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFCharacterSet=}"
     }, 
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFCharacterSetUnion": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFCharacterSet=}"
     }, 
     {
      "name": "theOtherSet", 
      "typestr": "^{__CFCharacterSet=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFConvertDoubleHostToSwapped": {
    "args": [
     {
      "name": "arg", 
      "typestr": "d"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "{_CFSwappedFloat64=Q}"
    }
   }, 
   "CFConvertDoubleSwappedToHost": {
    "args": [
     {
      "name": "arg", 
      "typestr": "{_CFSwappedFloat64=Q}"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CFConvertFloat32HostToSwapped": {
    "args": [
     {
      "name": "arg", 
      "typestr": "f"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "{_CFSwappedFloat32=I}"
    }
   }, 
   "CFConvertFloat32SwappedToHost": {
    "args": [
     {
      "name": "arg", 
      "typestr": "{_CFSwappedFloat32=I}"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "f"
    }
   }, 
   "CFConvertFloat64HostToSwapped": {
    "args": [
     {
      "name": "arg", 
      "typestr": "d"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "{_CFSwappedFloat64=Q}"
    }
   }, 
   "CFConvertFloat64SwappedToHost": {
    "args": [
     {
      "name": "arg", 
      "typestr": "{_CFSwappedFloat64=Q}"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CFConvertFloatHostToSwapped": {
    "args": [
     {
      "name": "arg", 
      "typestr": "f"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "{_CFSwappedFloat32=I}"
    }
   }, 
   "CFConvertFloatSwappedToHost": {
    "args": [
     {
      "name": "arg", 
      "typestr": "{_CFSwappedFloat32=I}"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "f"
    }
   }, 
   "CFCopyDescription": {
    "args": [
     {
      "name": "cf", 
      "typestr": "@"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFCopyTypeIDDescription": {
    "args": [
     {
      "name": "type_id", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFDataAppendBytes": {
    "args": [
     {
      "name": "theData", 
      "typestr": "^{__CFData=}"
     }, 
     {
      "name": "bytes", 
      "typestr": "^C"
     }, 
     {
      "name": "length", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFDataCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "bytes", 
      "typestr": "^C"
     }, 
     {
      "name": "length", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CFDataCreateCopy": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "theData", 
      "typestr": "^{__CFData=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CFDataCreateMutable": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "capacity", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CFDataCreateMutableCopy": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "capacity", 
      "typestr": "l"
     }, 
     {
      "name": "theData", 
      "typestr": "^{__CFData=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CFDataCreateWithBytesNoCopy": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "bytes", 
      "typestr": "^C"
     }, 
     {
      "name": "length", 
      "typestr": "l"
     }, 
     {
      "name": "bytesDeallocator", 
      "typestr": "^{__CFAllocator=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CFDataDeleteBytes": {
    "args": [
     {
      "name": "theData", 
      "typestr": "^{__CFData=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFDataFind": {
    "args": [
     {
      "name": "theData", 
      "typestr": "^{__CFData=}"
     }, 
     {
      "name": "dataToFind", 
      "typestr": "^{__CFData=}"
     }, 
     {
      "name": "searchRange", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "compareOptions", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "{_CFRange=ll}"
    }
   }, 
   "CFDataGetBytePtr": {
    "args": [
     {
      "name": "theData", 
      "typestr": "^{__CFData=}"
     }
    ], 
    "retval": {
     "typestr": "^C"
    }
   }, 
   "CFDataGetBytes": {
    "args": [
     {
      "name": "theData", 
      "typestr": "^{__CFData=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "buffer", 
      "typestr": "^C"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFDataGetLength": {
    "args": [
     {
      "name": "theData", 
      "typestr": "^{__CFData=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFDataGetMutableBytePtr": {
    "args": [
     {
      "name": "theData", 
      "typestr": "^{__CFData=}"
     }
    ], 
    "retval": {
     "typestr": "^C"
    }
   }, 
   "CFDataGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFDataIncreaseLength": {
    "args": [
     {
      "name": "theData", 
      "typestr": "^{__CFData=}"
     }, 
     {
      "name": "extraLength", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFDataReplaceBytes": {
    "args": [
     {
      "name": "theData", 
      "typestr": "^{__CFData=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "newBytes", 
      "typestr": "^C"
     }, 
     {
      "name": "newLength", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFDataSetLength": {
    "args": [
     {
      "name": "theData", 
      "typestr": "^{__CFData=}"
     }, 
     {
      "name": "length", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFDateCompare": {
    "args": [
     {
      "name": "theDate", 
      "typestr": "^{__CFDate=}"
     }, 
     {
      "name": "otherDate", 
      "typestr": "^{__CFDate=}"
     }, 
     {
      "name": "context", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFDateCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "at", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFDate=}"
    }
   }, 
   "CFDateFormatterCopyProperty": {
    "args": [
     {
      "name": "formatter", 
      "typestr": "^{__CFDateFormatter=}"
     }, 
     {
      "name": "key", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "@"
    }
   }, 
   "CFDateFormatterCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "locale", 
      "typestr": "^{__CFLocale=}"
     }, 
     {
      "name": "dateStyle", 
      "typestr": "l"
     }, 
     {
      "name": "timeStyle", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFDateFormatter=}"
    }
   }, 
   "CFDateFormatterCreateDateFormatFromTemplate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "tmplate", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "options", 
      "typestr": "L"
     }, 
     {
      "name": "locale", 
      "typestr": "^{__CFLocale=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFDateFormatterCreateDateFromString": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "formatter", 
      "typestr": "^{__CFDateFormatter=}"
     }, 
     {
      "name": "string", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "rangep", 
      "typestr": "^{_CFRange=ll}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFDate=}"
    }
   }, 
   "CFDateFormatterCreateStringWithAbsoluteTime": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "formatter", 
      "typestr": "^{__CFDateFormatter=}"
     }, 
     {
      "name": "at", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFDateFormatterCreateStringWithDate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "formatter", 
      "typestr": "^{__CFDateFormatter=}"
     }, 
     {
      "name": "date", 
      "typestr": "^{__CFDate=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFDateFormatterGetAbsoluteTimeFromString": {
    "args": [
     {
      "name": "formatter", 
      "typestr": "^{__CFDateFormatter=}"
     }, 
     {
      "name": "string", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "rangep", 
      "typestr": "^{_CFRange=ll}"
     }, 
     {
      "name": "atp", 
      "typestr": "^d"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFDateFormatterGetDateStyle": {
    "args": [
     {
      "name": "formatter", 
      "typestr": "^{__CFDateFormatter=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFDateFormatterGetFormat": {
    "args": [
     {
      "name": "formatter", 
      "typestr": "^{__CFDateFormatter=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFDateFormatterGetLocale": {
    "args": [
     {
      "name": "formatter", 
      "typestr": "^{__CFDateFormatter=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFLocale=}"
    }
   }, 
   "CFDateFormatterGetTimeStyle": {
    "args": [
     {
      "name": "formatter", 
      "typestr": "^{__CFDateFormatter=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFDateFormatterGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFDateFormatterSetFormat": {
    "args": [
     {
      "name": "formatter", 
      "typestr": "^{__CFDateFormatter=}"
     }, 
     {
      "name": "formatString", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFDateFormatterSetProperty": {
    "args": [
     {
      "name": "formatter", 
      "typestr": "^{__CFDateFormatter=}"
     }, 
     {
      "name": "key", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "value", 
      "typestr": "@"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFDateGetAbsoluteTime": {
    "args": [
     {
      "name": "theDate", 
      "typestr": "^{__CFDate=}"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CFDateGetTimeIntervalSinceDate": {
    "args": [
     {
      "name": "theDate", 
      "typestr": "^{__CFDate=}"
     }, 
     {
      "name": "otherDate", 
      "typestr": "^{__CFDate=}"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CFDateGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFDictionaryAddValue": {
    "args": [
     {
      "name": "theDict", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "key", 
      "typestr": "^v"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFDictionaryApplyFunction": {
    "args": [
     {
      "name": "theDict", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^v", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "applier", 
      "typestr": "^?"
     }, 
     {
      "name": "context", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFDictionaryContainsKey": {
    "args": [
     {
      "name": "theDict", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "key", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFDictionaryContainsValue": {
    "args": [
     {
      "name": "theDict", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFDictionaryCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "keys", 
      "typestr": "^^v"
     }, 
     {
      "name": "values", 
      "typestr": "^^v"
     }, 
     {
      "name": "numValues", 
      "typestr": "l"
     }, 
     {
      "name": "keyCallBacks", 
      "typestr": "^{_CFDictionaryKeyCallBacks=l^?^?^?^?^?}"
     }, 
     {
      "name": "valueCallBacks", 
      "typestr": "^{_CFDictionaryValueCallBacks=l^?^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CFDictionaryCreateCopy": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "theDict", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CFDictionaryCreateMutable": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "capacity", 
      "typestr": "l"
     }, 
     {
      "name": "keyCallBacks", 
      "typestr": "^{_CFDictionaryKeyCallBacks=l^?^?^?^?^?}"
     }, 
     {
      "name": "valueCallBacks", 
      "typestr": "^{_CFDictionaryValueCallBacks=l^?^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CFDictionaryCreateMutableCopy": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "capacity", 
      "typestr": "l"
     }, 
     {
      "name": "theDict", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CFDictionaryGetCount": {
    "args": [
     {
      "name": "theDict", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFDictionaryGetCountOfKey": {
    "args": [
     {
      "name": "theDict", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "key", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFDictionaryGetCountOfValue": {
    "args": [
     {
      "name": "theDict", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFDictionaryGetKeysAndValues": {
    "args": [
     {
      "name": "theDict", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "keys", 
      "typestr": "^^v"
     }, 
     {
      "name": "values", 
      "typestr": "^^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFDictionaryGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFDictionaryGetValue": {
    "args": [
     {
      "name": "theDict", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "key", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "^v"
    }
   }, 
   "CFDictionaryGetValueIfPresent": {
    "args": [
     {
      "name": "theDict", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "key", 
      "typestr": "^v"
     }, 
     {
      "name": "value", 
      "typestr": "^^v"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFDictionaryRemoveAllValues": {
    "args": [
     {
      "name": "theDict", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFDictionaryRemoveValue": {
    "args": [
     {
      "name": "theDict", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "key", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFDictionaryReplaceValue": {
    "args": [
     {
      "name": "theDict", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "key", 
      "typestr": "^v"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFDictionarySetValue": {
    "args": [
     {
      "name": "theDict", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "key", 
      "typestr": "^v"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFEqual": {
    "args": [
     {
      "name": "cf1", 
      "typestr": "@"
     }, 
     {
      "name": "cf2", 
      "typestr": "@"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFErrorCopyDescription": {
    "args": [
     {
      "name": "err", 
      "typestr": "^{__CFError=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFErrorCopyFailureReason": {
    "args": [
     {
      "name": "err", 
      "typestr": "^{__CFError=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFErrorCopyRecoverySuggestion": {
    "args": [
     {
      "name": "err", 
      "typestr": "^{__CFError=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFErrorCopyUserInfo": {
    "args": [
     {
      "name": "err", 
      "typestr": "^{__CFError=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CFErrorCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "domain", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "code", 
      "typestr": "l"
     }, 
     {
      "name": "userInfo", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFError=}"
    }
   }, 
   "CFErrorCreateWithUserInfoKeysAndValues": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "domain", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "code", 
      "typestr": "l"
     }, 
     {
      "name": "userInfoKeys", 
      "typestr": "^^v"
     }, 
     {
      "name": "userInfoValues", 
      "typestr": "^^v"
     }, 
     {
      "name": "numUserInfoValues", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFError=}"
    }
   }, 
   "CFErrorGetCode": {
    "args": [
     {
      "name": "err", 
      "typestr": "^{__CFError=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFErrorGetDomain": {
    "args": [
     {
      "name": "err", 
      "typestr": "^{__CFError=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFErrorGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFFileDescriptorCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "fd", 
      "typestr": "i"
     }, 
     {
      "name": "closeOnInvalidate", 
      "typestr": "Z"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CFFileDescriptor=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "L", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "callout", 
      "typestr": "^?"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFFileDescriptorContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFFileDescriptor=}"
    }
   }, 
   "CFFileDescriptorCreateRunLoopSource": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "f", 
      "typestr": "^{__CFFileDescriptor=}"
     }, 
     {
      "name": "order", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFRunLoopSource=}"
    }
   }, 
   "CFFileDescriptorDisableCallBacks": {
    "args": [
     {
      "name": "f", 
      "typestr": "^{__CFFileDescriptor=}"
     }, 
     {
      "name": "callBackTypes", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFFileDescriptorEnableCallBacks": {
    "args": [
     {
      "name": "f", 
      "typestr": "^{__CFFileDescriptor=}"
     }, 
     {
      "name": "callBackTypes", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFFileDescriptorGetContext": {
    "args": [
     {
      "name": "f", 
      "typestr": "^{__CFFileDescriptor=}"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFFileDescriptorContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFFileDescriptorGetNativeDescriptor": {
    "args": [
     {
      "name": "f", 
      "typestr": "^{__CFFileDescriptor=}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CFFileDescriptorGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFFileDescriptorInvalidate": {
    "args": [
     {
      "name": "f", 
      "typestr": "^{__CFFileDescriptor=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFFileDescriptorIsValid": {
    "args": [
     {
      "name": "f", 
      "typestr": "^{__CFFileDescriptor=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFGetAllocator": {
    "args": [
     {
      "name": "cf", 
      "typestr": "@"
     }
    ], 
    "retval": {
     "typestr": "^{__CFAllocator=}"
    }
   }, 
   "CFGetRetainCount": {
    "args": [
     {
      "name": "cf", 
      "typestr": "@"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFGetTypeID": {
    "args": [
     {
      "name": "cf", 
      "typestr": "@"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFGregorianDateGetAbsoluteTime": {
    "args": [
     {
      "name": "gdate", 
      "typestr": "{_CFGregorianDate=lccccd}"
     }, 
     {
      "name": "tz", 
      "typestr": "^{__CFTimeZone=}"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CFGregorianDateIsValid": {
    "args": [
     {
      "name": "gdate", 
      "typestr": "{_CFGregorianDate=lccccd}"
     }, 
     {
      "name": "unitFlags", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFHash": {
    "args": [
     {
      "name": "cf", 
      "typestr": "@"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFLocaleCopyAvailableLocaleIdentifiers": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFLocaleCopyCommonISOCurrencyCodes": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFLocaleCopyCurrent": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFLocale=}"
    }
   }, 
   "CFLocaleCopyDisplayNameForPropertyValue": {
    "args": [
     {
      "name": "displayLocale", 
      "typestr": "^{__CFLocale=}"
     }, 
     {
      "name": "key", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "value", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFLocaleCopyISOCountryCodes": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFLocaleCopyISOCurrencyCodes": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFLocaleCopyISOLanguageCodes": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFLocaleCopyPreferredLanguages": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFLocaleCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "localeIdentifier", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFLocale=}"
    }
   }, 
   "CFLocaleCreateCanonicalLanguageIdentifierFromString": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "localeIdentifier", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFLocaleCreateCanonicalLocaleIdentifierFromScriptManagerCodes": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "lcode", 
      "typestr": "s"
     }, 
     {
      "name": "rcode", 
      "typestr": "s"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFLocaleCreateCanonicalLocaleIdentifierFromString": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "localeIdentifier", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFLocaleCreateComponentsFromLocaleIdentifier": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "localeID", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CFLocaleCreateCopy": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "locale", 
      "typestr": "^{__CFLocale=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFLocale=}"
    }
   }, 
   "CFLocaleCreateLocaleIdentifierFromComponents": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "dictionary", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFLocaleCreateLocaleIdentifierFromWindowsLocaleCode": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "lcid", 
      "typestr": "I"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFLocaleGetIdentifier": {
    "args": [
     {
      "name": "locale", 
      "typestr": "^{__CFLocale=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFLocaleGetLanguageCharacterDirection": {
    "args": [
     {
      "name": "isoLangCode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFLocaleGetLanguageLineDirection": {
    "args": [
     {
      "name": "isoLangCode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFLocaleGetSystem": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "^{__CFLocale=}"
    }
   }, 
   "CFLocaleGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFLocaleGetValue": {
    "args": [
     {
      "name": "locale", 
      "typestr": "^{__CFLocale=}"
     }, 
     {
      "name": "key", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "@"
    }
   }, 
   "CFLocaleGetWindowsLocaleCodeFromLocaleIdentifier": {
    "args": [
     {
      "name": "localeIdentifier", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CFMachPortCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CFMachPort=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }, 
        {
         "typestr": [
          "l", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "callout", 
      "typestr": "^?"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFMachPortContext=l^v^?^?^?}"
     }, 
     {
      "name": "shouldFreeInfo", 
      "typestr": "^Z"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFMachPort=}"
    }
   }, 
   "CFMachPortCreateRunLoopSource": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "port", 
      "typestr": "^{__CFMachPort=}"
     }, 
     {
      "name": "order", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFRunLoopSource=}"
    }
   }, 
   "CFMachPortCreateWithPort": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "portNum", 
      "typestr": "I"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CFMachPort=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }, 
        {
         "typestr": [
          "l", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "callout", 
      "typestr": "^?"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFMachPortContext=l^v^?^?^?}"
     }, 
     {
      "name": "shouldFreeInfo", 
      "typestr": "^Z"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFMachPort=}"
    }
   }, 
   "CFMachPortGetContext": {
    "args": [
     {
      "name": "port", 
      "typestr": "^{__CFMachPort=}"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFMachPortContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFMachPortGetInvalidationCallBack": {
    "args": [
     {
      "name": "port", 
      "typestr": "^{__CFMachPort=}"
     }
    ], 
    "retval": {
     "typestr": "^?"
    }
   }, 
   "CFMachPortGetPort": {
    "args": [
     {
      "name": "port", 
      "typestr": "^{__CFMachPort=}"
     }
    ], 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CFMachPortGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFMachPortInvalidate": {
    "args": [
     {
      "name": "port", 
      "typestr": "^{__CFMachPort=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFMachPortIsValid": {
    "args": [
     {
      "name": "port", 
      "typestr": "^{__CFMachPort=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFMachPortSetInvalidationCallBack": {
    "args": [
     {
      "name": "port", 
      "typestr": "^{__CFMachPort=}"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CFMachPort=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "callout", 
      "typestr": "^?"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFMakeCollectable": {
    "args": [
     {
      "name": "cf", 
      "typestr": "@"
     }
    ], 
    "retval": {
     "typestr": "@"
    }
   }, 
   "CFMessagePortCreateLocal": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "name", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CFMessagePort=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "l", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{__CFData=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "^{__CFData=}", 
         false
        ]
       }
      }, 
      "name": "callout", 
      "typestr": "^?"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFMessagePortContext=l^v^?^?^?}"
     }, 
     {
      "name": "shouldFreeInfo", 
      "typestr": "^Z"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFMessagePort=}"
    }
   }, 
   "CFMessagePortCreateRemote": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "name", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFMessagePort=}"
    }
   }, 
   "CFMessagePortCreateRunLoopSource": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "local", 
      "typestr": "^{__CFMessagePort=}"
     }, 
     {
      "name": "order", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFRunLoopSource=}"
    }
   }, 
   "CFMessagePortGetContext": {
    "args": [
     {
      "name": "ms", 
      "typestr": "^{__CFMessagePort=}"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFMessagePortContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFMessagePortGetInvalidationCallBack": {
    "args": [
     {
      "name": "ms", 
      "typestr": "^{__CFMessagePort=}"
     }
    ], 
    "retval": {
     "typestr": "^?"
    }
   }, 
   "CFMessagePortGetName": {
    "args": [
     {
      "name": "ms", 
      "typestr": "^{__CFMessagePort=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFMessagePortGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFMessagePortInvalidate": {
    "args": [
     {
      "name": "ms", 
      "typestr": "^{__CFMessagePort=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFMessagePortIsRemote": {
    "args": [
     {
      "name": "ms", 
      "typestr": "^{__CFMessagePort=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFMessagePortIsValid": {
    "args": [
     {
      "name": "ms", 
      "typestr": "^{__CFMessagePort=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFMessagePortSendRequest": {
    "args": [
     {
      "name": "remote", 
      "typestr": "^{__CFMessagePort=}"
     }, 
     {
      "name": "msgid", 
      "typestr": "l"
     }, 
     {
      "name": "data", 
      "typestr": "^{__CFData=}"
     }, 
     {
      "name": "sendTimeout", 
      "typestr": "d"
     }, 
     {
      "name": "rcvTimeout", 
      "typestr": "d"
     }, 
     {
      "name": "replyMode", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "returnData", 
      "typestr": "^^{__CFData=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFMessagePortSetDispatchQueue": {
    "args": [
     {
      "name": "ms", 
      "typestr": "^{__CFMessagePort=}"
     }, 
     {
      "name": "queue", 
      "typestr": "^{dispatch_queue_s=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFMessagePortSetInvalidationCallBack": {
    "args": [
     {
      "name": "ms", 
      "typestr": "^{__CFMessagePort=}"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CFMessagePort=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "callout", 
      "typestr": "^?"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFMessagePortSetName": {
    "args": [
     {
      "name": "ms", 
      "typestr": "^{__CFMessagePort=}"
     }, 
     {
      "name": "newName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFNotificationCenterAddObserver": {
    "args": [
     {
      "name": "center", 
      "typestr": "^{__CFNotificationCenter=}"
     }, 
     {
      "name": "observer", 
      "typestr": "^v"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CFNotificationCenter=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{__CFString=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{__CFDictionary=}", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "callBack", 
      "typestr": "^?"
     }, 
     {
      "name": "name", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "object", 
      "typestr": "^v"
     }, 
     {
      "name": "suspensionBehavior", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFNotificationCenterGetDarwinNotifyCenter": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "^{__CFNotificationCenter=}"
    }
   }, 
   "CFNotificationCenterGetDistributedCenter": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "^{__CFNotificationCenter=}"
    }
   }, 
   "CFNotificationCenterGetLocalCenter": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "^{__CFNotificationCenter=}"
    }
   }, 
   "CFNotificationCenterGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFNotificationCenterPostNotification": {
    "args": [
     {
      "name": "center", 
      "typestr": "^{__CFNotificationCenter=}"
     }, 
     {
      "name": "name", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "object", 
      "typestr": "^v"
     }, 
     {
      "name": "userInfo", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "deliverImmediately", 
      "typestr": "Z"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFNotificationCenterPostNotificationWithOptions": {
    "args": [
     {
      "name": "center", 
      "typestr": "^{__CFNotificationCenter=}"
     }, 
     {
      "name": "name", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "object", 
      "typestr": "^v"
     }, 
     {
      "name": "userInfo", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "options", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFNotificationCenterRemoveEveryObserver": {
    "args": [
     {
      "name": "center", 
      "typestr": "^{__CFNotificationCenter=}"
     }, 
     {
      "name": "observer", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFNotificationCenterRemoveObserver": {
    "args": [
     {
      "name": "center", 
      "typestr": "^{__CFNotificationCenter=}"
     }, 
     {
      "name": "observer", 
      "typestr": "^v"
     }, 
     {
      "name": "name", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "object", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFNullGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFNumberCompare": {
    "args": [
     {
      "name": "number", 
      "typestr": "^{__CFNumber=}"
     }, 
     {
      "name": "otherNumber", 
      "typestr": "^{__CFNumber=}"
     }, 
     {
      "name": "context", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFNumberCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "theType", 
      "typestr": "l"
     }, 
     {
      "name": "valuePtr", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFNumber=}"
    }
   }, 
   "CFNumberFormatterCopyProperty": {
    "args": [
     {
      "name": "formatter", 
      "typestr": "^{__CFNumberFormatter=}"
     }, 
     {
      "name": "key", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "@"
    }
   }, 
   "CFNumberFormatterCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "locale", 
      "typestr": "^{__CFLocale=}"
     }, 
     {
      "name": "style", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFNumberFormatter=}"
    }
   }, 
   "CFNumberFormatterCreateNumberFromString": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "formatter", 
      "typestr": "^{__CFNumberFormatter=}"
     }, 
     {
      "name": "string", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "rangep", 
      "typestr": "^{_CFRange=ll}"
     }, 
     {
      "name": "options", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFNumber=}"
    }
   }, 
   "CFNumberFormatterCreateStringWithNumber": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "formatter", 
      "typestr": "^{__CFNumberFormatter=}"
     }, 
     {
      "name": "number", 
      "typestr": "^{__CFNumber=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFNumberFormatterCreateStringWithValue": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "formatter", 
      "typestr": "^{__CFNumberFormatter=}"
     }, 
     {
      "name": "numberType", 
      "typestr": "l"
     }, 
     {
      "name": "valuePtr", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFNumberFormatterGetDecimalInfoForCurrencyCode": {
    "args": [
     {
      "name": "currencyCode", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "defaultFractionDigits", 
      "typestr": "^i"
     }, 
     {
      "name": "roundingIncrement", 
      "typestr": "^d"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFNumberFormatterGetFormat": {
    "args": [
     {
      "name": "formatter", 
      "typestr": "^{__CFNumberFormatter=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFNumberFormatterGetLocale": {
    "args": [
     {
      "name": "formatter", 
      "typestr": "^{__CFNumberFormatter=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFLocale=}"
    }
   }, 
   "CFNumberFormatterGetStyle": {
    "args": [
     {
      "name": "formatter", 
      "typestr": "^{__CFNumberFormatter=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFNumberFormatterGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFNumberFormatterGetValueFromString": {
    "args": [
     {
      "name": "formatter", 
      "typestr": "^{__CFNumberFormatter=}"
     }, 
     {
      "name": "string", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "rangep", 
      "typestr": "^{_CFRange=ll}"
     }, 
     {
      "name": "numberType", 
      "typestr": "l"
     }, 
     {
      "name": "valuePtr", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFNumberFormatterSetFormat": {
    "args": [
     {
      "name": "formatter", 
      "typestr": "^{__CFNumberFormatter=}"
     }, 
     {
      "name": "formatString", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFNumberFormatterSetProperty": {
    "args": [
     {
      "name": "formatter", 
      "typestr": "^{__CFNumberFormatter=}"
     }, 
     {
      "name": "key", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "value", 
      "typestr": "@"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFNumberGetByteSize": {
    "args": [
     {
      "name": "number", 
      "typestr": "^{__CFNumber=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFNumberGetType": {
    "args": [
     {
      "name": "number", 
      "typestr": "^{__CFNumber=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFNumberGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFNumberGetValue": {
    "args": [
     {
      "name": "number", 
      "typestr": "^{__CFNumber=}"
     }, 
     {
      "name": "theType", 
      "typestr": "l"
     }, 
     {
      "name": "valuePtr", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFNumberIsFloatType": {
    "args": [
     {
      "name": "number", 
      "typestr": "^{__CFNumber=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFPlugInAddInstanceForFactory": {
    "args": [
     {
      "name": "factoryID", 
      "typestr": "^{__CFUUID=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFPlugInCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "plugInURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFBundle=}"
    }
   }, 
   "CFPlugInFindFactoriesForPlugInType": {
    "args": [
     {
      "name": "typeUUID", 
      "typestr": "^{__CFUUID=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFPlugInFindFactoriesForPlugInTypeInPlugIn": {
    "args": [
     {
      "name": "typeUUID", 
      "typestr": "^{__CFUUID=}"
     }, 
     {
      "name": "plugIn", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFPlugInGetBundle": {
    "args": [
     {
      "name": "plugIn", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFBundle=}"
    }
   }, 
   "CFPlugInGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFPlugInInstanceCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "factoryUUID", 
      "typestr": "^{__CFUUID=}"
     }, 
     {
      "name": "typeUUID", 
      "typestr": "^{__CFUUID=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^v"
    }
   }, 
   "CFPlugInInstanceCreateWithInstanceDataSize": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "instanceDataSize", 
      "typestr": "l"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "deallocateInstanceFunction", 
      "typestr": "^?"
     }, 
     {
      "name": "factoryName", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CFPlugInInstance=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{__CFString=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "Z", 
         true
        ]
       }
      }, 
      "name": "getInterfaceFunction", 
      "typestr": "^?"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFPlugInInstance=}"
    }
   }, 
   "CFPlugInInstanceGetFactoryName": {
    "args": [
     {
      "name": "instance", 
      "typestr": "^{__CFPlugInInstance=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFPlugInInstanceGetInstanceData": {
    "args": [
     {
      "name": "instance", 
      "typestr": "^{__CFPlugInInstance=}"
     }
    ], 
    "retval": {
     "typestr": "^v"
    }
   }, 
   "CFPlugInInstanceGetInterfaceFunctionTable": {
    "args": [
     {
      "name": "instance", 
      "typestr": "^{__CFPlugInInstance=}"
     }, 
     {
      "name": "interfaceName", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "ftbl", 
      "typestr": "^^v"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFPlugInInstanceGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFPlugInIsLoadOnDemand": {
    "args": [
     {
      "name": "plugIn", 
      "typestr": "^{__CFBundle=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFPlugInRegisterFactoryFunction": {
    "args": [
     {
      "name": "factoryUUID", 
      "typestr": "^{__CFUUID=}"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CFAllocator=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{__CFUUID=}", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "^v", 
         false
        ]
       }
      }, 
      "name": "func", 
      "typestr": "^?"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFPlugInRegisterFactoryFunctionByName": {
    "args": [
     {
      "name": "factoryUUID", 
      "typestr": "^{__CFUUID=}"
     }, 
     {
      "name": "plugIn", 
      "typestr": "^{__CFBundle=}"
     }, 
     {
      "name": "functionName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFPlugInRegisterPlugInType": {
    "args": [
     {
      "name": "factoryUUID", 
      "typestr": "^{__CFUUID=}"
     }, 
     {
      "name": "typeUUID", 
      "typestr": "^{__CFUUID=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFPlugInRemoveInstanceForFactory": {
    "args": [
     {
      "name": "factoryID", 
      "typestr": "^{__CFUUID=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFPlugInSetLoadOnDemand": {
    "args": [
     {
      "name": "plugIn", 
      "typestr": "^{__CFBundle=}"
     }, 
     {
      "name": "flag", 
      "typestr": "Z"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFPlugInUnregisterFactory": {
    "args": [
     {
      "name": "factoryUUID", 
      "typestr": "^{__CFUUID=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFPlugInUnregisterPlugInType": {
    "args": [
     {
      "name": "factoryUUID", 
      "typestr": "^{__CFUUID=}"
     }, 
     {
      "name": "typeUUID", 
      "typestr": "^{__CFUUID=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFPreferencesAddSuitePreferencesToApp": {
    "args": [
     {
      "name": "applicationID", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "suiteID", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFPreferencesAppSynchronize": {
    "args": [
     {
      "name": "applicationID", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFPreferencesAppValueIsForced": {
    "args": [
     {
      "name": "key", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "applicationID", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFPreferencesCopyAppValue": {
    "args": [
     {
      "name": "key", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "applicationID", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "@"
    }
   }, 
   "CFPreferencesCopyApplicationList": {
    "args": [
     {
      "name": "userName", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "hostName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFPreferencesCopyKeyList": {
    "args": [
     {
      "name": "applicationID", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "userName", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "hostName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFPreferencesCopyMultiple": {
    "args": [
     {
      "name": "keysToFetch", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "applicationID", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "userName", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "hostName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CFPreferencesCopyValue": {
    "args": [
     {
      "name": "key", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "applicationID", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "userName", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "hostName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "@"
    }
   }, 
   "CFPreferencesGetAppBooleanValue": {
    "args": [
     {
      "name": "key", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "applicationID", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "keyExistsAndHasValidFormat", 
      "typestr": "^Z"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFPreferencesGetAppIntegerValue": {
    "args": [
     {
      "name": "key", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "applicationID", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "keyExistsAndHasValidFormat", 
      "typestr": "^Z"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFPreferencesRemoveSuitePreferencesFromApp": {
    "args": [
     {
      "name": "applicationID", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "suiteID", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFPreferencesSetAppValue": {
    "args": [
     {
      "name": "key", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "value", 
      "typestr": "@"
     }, 
     {
      "name": "applicationID", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFPreferencesSetMultiple": {
    "args": [
     {
      "name": "keysToSet", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "keysToRemove", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "applicationID", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "userName", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "hostName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFPreferencesSetValue": {
    "args": [
     {
      "name": "key", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "value", 
      "typestr": "@"
     }, 
     {
      "name": "applicationID", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "userName", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "hostName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFPreferencesSynchronize": {
    "args": [
     {
      "name": "applicationID", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "userName", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "hostName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFPropertyListCreateData": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "propertyList", 
      "typestr": "@"
     }, 
     {
      "name": "format", 
      "typestr": "l"
     }, 
     {
      "name": "options", 
      "typestr": "L"
     }, 
     {
      "already_cfretained": true, 
      "name": "error", 
      "null_accepted": true, 
      "type_modifier": "o", 
      "typestr": "^^{__CFError=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CFPropertyListCreateDeepCopy": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "propertyList", 
      "typestr": "@"
     }, 
     {
      "name": "mutabilityOption", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "@"
    }
   }, 
   "CFPropertyListCreateFromStream": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "stream", 
      "typestr": "^{__CFReadStream=}"
     }, 
     {
      "name": "streamLength", 
      "typestr": "l"
     }, 
     {
      "name": "mutabilityOption", 
      "typestr": "L"
     }, 
     {
      "name": "format", 
      "typestr": "^l"
     }, 
     {
      "name": "errorString", 
      "typestr": "^^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "@"
    }
   }, 
   "CFPropertyListCreateFromXMLData": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "xmlData", 
      "typestr": "^{__CFData=}"
     }, 
     {
      "name": "mutabilityOption", 
      "typestr": "L"
     }, 
     {
      "name": "errorString", 
      "typestr": "^^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "@"
    }
   }, 
   "CFPropertyListCreateWithData": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "data", 
      "typestr": "^{__CFData=}"
     }, 
     {
      "name": "options", 
      "typestr": "L"
     }, 
     {
      "name": "format", 
      "typestr": "^l"
     }, 
     {
      "already_cfretained": true, 
      "name": "error", 
      "null_accepted": true, 
      "type_modifier": "o", 
      "typestr": "^^{__CFError=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "@"
    }
   }, 
   "CFPropertyListCreateWithStream": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "stream", 
      "typestr": "^{__CFReadStream=}"
     }, 
     {
      "name": "streamLength", 
      "typestr": "l"
     }, 
     {
      "name": "options", 
      "typestr": "L"
     }, 
     {
      "name": "format", 
      "typestr": "^l"
     }, 
     {
      "already_cfretained": true, 
      "name": "error", 
      "null_accepted": true, 
      "type_modifier": "o", 
      "typestr": "^^{__CFError=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "@"
    }
   }, 
   "CFPropertyListCreateXMLData": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "propertyList", 
      "typestr": "@"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CFPropertyListIsValid": {
    "args": [
     {
      "name": "plist", 
      "typestr": "@"
     }, 
     {
      "name": "format", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFPropertyListWrite": {
    "args": [
     {
      "name": "propertyList", 
      "typestr": "@"
     }, 
     {
      "name": "stream", 
      "typestr": "^{__CFWriteStream=}"
     }, 
     {
      "name": "format", 
      "typestr": "l"
     }, 
     {
      "name": "options", 
      "typestr": "L"
     }, 
     {
      "already_cfretained": true, 
      "name": "error", 
      "null_accepted": true, 
      "type_modifier": "o", 
      "typestr": "^^{__CFError=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFPropertyListWriteToStream": {
    "args": [
     {
      "name": "propertyList", 
      "typestr": "@"
     }, 
     {
      "name": "stream", 
      "typestr": "^{__CFWriteStream=}"
     }, 
     {
      "name": "format", 
      "typestr": "l"
     }, 
     {
      "name": "errorString", 
      "typestr": "^^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFRangeMake": {
    "args": [
     {
      "name": "loc", 
      "typestr": "l"
     }, 
     {
      "name": "len", 
      "typestr": "l"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "{_CFRange=ll}"
    }
   }, 
   "CFReadStreamClose": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFReadStream=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFReadStreamCopyError": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFReadStream=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFError=}"
    }
   }, 
   "CFReadStreamCopyProperty": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFReadStream=}"
     }, 
     {
      "name": "propertyName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "@"
    }
   }, 
   "CFReadStreamCreateWithBytesNoCopy": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "bytes", 
      "typestr": "^C"
     }, 
     {
      "name": "length", 
      "typestr": "l"
     }, 
     {
      "name": "bytesDeallocator", 
      "typestr": "^{__CFAllocator=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFReadStream=}"
    }
   }, 
   "CFReadStreamCreateWithFile": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "fileURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFReadStream=}"
    }
   }, 
   "CFReadStreamGetBuffer": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFReadStream=}"
     }, 
     {
      "name": "maxBytesToRead", 
      "typestr": "l"
     }, 
     {
      "name": "numBytesRead", 
      "typestr": "^l"
     }
    ], 
    "retval": {
     "typestr": "^C"
    }
   }, 
   "CFReadStreamGetError": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFReadStream=}"
     }
    ], 
    "retval": {
     "typestr": "{_CFStreamError=ll}"
    }
   }, 
   "CFReadStreamGetStatus": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFReadStream=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFReadStreamGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFReadStreamHasBytesAvailable": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFReadStream=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFReadStreamOpen": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFReadStream=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFReadStreamRead": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFReadStream=}"
     }, 
     {
      "name": "buffer", 
      "typestr": "^C"
     }, 
     {
      "name": "bufferLength", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFReadStreamScheduleWithRunLoop": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFReadStream=}"
     }, 
     {
      "name": "runLoop", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "runLoopMode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFReadStreamSetClient": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFReadStream=}"
     }, 
     {
      "name": "streamEvents", 
      "typestr": "L"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CFReadStream=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "L", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "clientCB", 
      "typestr": "^?"
     }, 
     {
      "name": "clientContext", 
      "typestr": "^{_CFStreamClientContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFReadStreamSetProperty": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFReadStream=}"
     }, 
     {
      "name": "propertyName", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "propertyValue", 
      "typestr": "@"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFReadStreamUnscheduleFromRunLoop": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFReadStream=}"
     }, 
     {
      "name": "runLoop", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "runLoopMode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFRelease": {
    "args": [
     {
      "name": "cf", 
      "typestr": "@"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFRetain": {
    "args": [
     {
      "name": "cf", 
      "typestr": "@"
     }
    ], 
    "retval": {
     "typestr": "@"
    }
   }, 
   "CFRunLoopAddCommonMode": {
    "args": [
     {
      "name": "rl", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "mode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFRunLoopAddObserver": {
    "args": [
     {
      "name": "rl", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "observer", 
      "typestr": "^{__CFRunLoopObserver=}"
     }, 
     {
      "name": "mode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFRunLoopAddSource": {
    "args": [
     {
      "name": "rl", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "source", 
      "typestr": "^{__CFRunLoopSource=}"
     }, 
     {
      "name": "mode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFRunLoopAddTimer": {
    "args": [
     {
      "name": "rl", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "timer", 
      "typestr": "^{__CFRunLoopTimer=}"
     }, 
     {
      "name": "mode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFRunLoopContainsObserver": {
    "args": [
     {
      "name": "rl", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "observer", 
      "typestr": "^{__CFRunLoopObserver=}"
     }, 
     {
      "name": "mode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFRunLoopContainsSource": {
    "args": [
     {
      "name": "rl", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "source", 
      "typestr": "^{__CFRunLoopSource=}"
     }, 
     {
      "name": "mode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFRunLoopContainsTimer": {
    "args": [
     {
      "name": "rl", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "timer", 
      "typestr": "^{__CFRunLoopTimer=}"
     }, 
     {
      "name": "mode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFRunLoopCopyAllModes": {
    "args": [
     {
      "name": "rl", 
      "typestr": "^{__CFRunLoop=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFRunLoopCopyCurrentMode": {
    "args": [
     {
      "name": "rl", 
      "typestr": "^{__CFRunLoop=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFRunLoopGetCurrent": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "^{__CFRunLoop=}"
    }
   }, 
   "CFRunLoopGetMain": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "^{__CFRunLoop=}"
    }
   }, 
   "CFRunLoopGetNextTimerFireDate": {
    "args": [
     {
      "name": "rl", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "mode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CFRunLoopGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFRunLoopIsWaiting": {
    "args": [
     {
      "name": "rl", 
      "typestr": "^{__CFRunLoop=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFRunLoopObserverCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "activities", 
      "typestr": "L"
     }, 
     {
      "name": "repeats", 
      "typestr": "Z"
     }, 
     {
      "name": "order", 
      "typestr": "l"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CFRunLoopObserver=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "L", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "callout", 
      "typestr": "^?"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFRunLoopObserverContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFRunLoopObserver=}"
    }
   }, 
   "CFRunLoopObserverDoesRepeat": {
    "args": [
     {
      "name": "observer", 
      "typestr": "^{__CFRunLoopObserver=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFRunLoopObserverGetActivities": {
    "args": [
     {
      "name": "observer", 
      "typestr": "^{__CFRunLoopObserver=}"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFRunLoopObserverGetContext": {
    "args": [
     {
      "name": "observer", 
      "typestr": "^{__CFRunLoopObserver=}"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFRunLoopObserverContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFRunLoopObserverGetOrder": {
    "args": [
     {
      "name": "observer", 
      "typestr": "^{__CFRunLoopObserver=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFRunLoopObserverGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFRunLoopObserverInvalidate": {
    "args": [
     {
      "name": "observer", 
      "typestr": "^{__CFRunLoopObserver=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFRunLoopObserverIsValid": {
    "args": [
     {
      "name": "observer", 
      "typestr": "^{__CFRunLoopObserver=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFRunLoopPerformBlock": {
    "args": [
     {
      "name": "rl", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "mode", 
      "typestr": "@"
     }, 
     {
      "block": {
       "args": [
        {
         "typestr": [
          "v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "block", 
      "typestr": "@?"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFRunLoopRemoveObserver": {
    "args": [
     {
      "name": "rl", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "observer", 
      "typestr": "^{__CFRunLoopObserver=}"
     }, 
     {
      "name": "mode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFRunLoopRemoveSource": {
    "args": [
     {
      "name": "rl", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "source", 
      "typestr": "^{__CFRunLoopSource=}"
     }, 
     {
      "name": "mode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFRunLoopRemoveTimer": {
    "args": [
     {
      "name": "rl", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "timer", 
      "typestr": "^{__CFRunLoopTimer=}"
     }, 
     {
      "name": "mode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFRunLoopRun": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFRunLoopRunInMode": {
    "args": [
     {
      "name": "mode", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "seconds", 
      "typestr": "d"
     }, 
     {
      "name": "returnAfterSourceHandled", 
      "typestr": "Z"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFRunLoopSourceCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "order", 
      "typestr": "l"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFRunLoopSourceContext=l^v^?^?^?^?^?^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFRunLoopSource=}"
    }
   }, 
   "CFRunLoopSourceGetContext": {
    "args": [
     {
      "name": "source", 
      "typestr": "^{__CFRunLoopSource=}"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFRunLoopSourceContext=l^v^?^?^?^?^?^?^?^?}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFRunLoopSourceGetOrder": {
    "args": [
     {
      "name": "source", 
      "typestr": "^{__CFRunLoopSource=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFRunLoopSourceGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFRunLoopSourceInvalidate": {
    "args": [
     {
      "name": "source", 
      "typestr": "^{__CFRunLoopSource=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFRunLoopSourceIsValid": {
    "args": [
     {
      "name": "source", 
      "typestr": "^{__CFRunLoopSource=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFRunLoopSourceSignal": {
    "args": [
     {
      "name": "source", 
      "typestr": "^{__CFRunLoopSource=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFRunLoopStop": {
    "args": [
     {
      "name": "rl", 
      "typestr": "^{__CFRunLoop=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFRunLoopTimerCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "fireDate", 
      "typestr": "d"
     }, 
     {
      "name": "interval", 
      "typestr": "d"
     }, 
     {
      "name": "flags", 
      "typestr": "L"
     }, 
     {
      "name": "order", 
      "typestr": "l"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CFRunLoopTimer=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "callout", 
      "typestr": "^?"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFRunLoopTimerContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFRunLoopTimer=}"
    }
   }, 
   "CFRunLoopTimerDoesRepeat": {
    "args": [
     {
      "name": "timer", 
      "typestr": "^{__CFRunLoopTimer=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFRunLoopTimerGetContext": {
    "args": [
     {
      "name": "timer", 
      "typestr": "^{__CFRunLoopTimer=}"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFRunLoopTimerContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFRunLoopTimerGetInterval": {
    "args": [
     {
      "name": "timer", 
      "typestr": "^{__CFRunLoopTimer=}"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CFRunLoopTimerGetNextFireDate": {
    "args": [
     {
      "name": "timer", 
      "typestr": "^{__CFRunLoopTimer=}"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CFRunLoopTimerGetOrder": {
    "args": [
     {
      "name": "timer", 
      "typestr": "^{__CFRunLoopTimer=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFRunLoopTimerGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFRunLoopTimerInvalidate": {
    "args": [
     {
      "name": "timer", 
      "typestr": "^{__CFRunLoopTimer=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFRunLoopTimerIsValid": {
    "args": [
     {
      "name": "timer", 
      "typestr": "^{__CFRunLoopTimer=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFRunLoopTimerSetNextFireDate": {
    "args": [
     {
      "name": "timer", 
      "typestr": "^{__CFRunLoopTimer=}"
     }, 
     {
      "name": "fireDate", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFRunLoopWakeUp": {
    "args": [
     {
      "name": "rl", 
      "typestr": "^{__CFRunLoop=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFSetAddValue": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFSet=}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFSetApplyFunction": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFSet=}"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^v", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "applier", 
      "typestr": "^?"
     }, 
     {
      "name": "context", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFSetContainsValue": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFSet=}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFSetCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "values", 
      "typestr": "^^v"
     }, 
     {
      "name": "numValues", 
      "typestr": "l"
     }, 
     {
      "name": "callBacks", 
      "typestr": "^{_CFSetCallBacks=l^?^?^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFSet=}"
    }
   }, 
   "CFSetCreateCopy": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "theSet", 
      "typestr": "^{__CFSet=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFSet=}"
    }
   }, 
   "CFSetCreateMutable": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "capacity", 
      "typestr": "l"
     }, 
     {
      "name": "callBacks", 
      "typestr": "^{_CFSetCallBacks=l^?^?^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFSet=}"
    }
   }, 
   "CFSetCreateMutableCopy": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "capacity", 
      "typestr": "l"
     }, 
     {
      "name": "theSet", 
      "typestr": "^{__CFSet=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFSet=}"
    }
   }, 
   "CFSetGetCount": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFSet=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFSetGetCountOfValue": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFSet=}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFSetGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFSetGetValue": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFSet=}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "^v"
    }
   }, 
   "CFSetGetValueIfPresent": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFSet=}"
     }, 
     {
      "name": "candidate", 
      "typestr": "^v"
     }, 
     {
      "name": "value", 
      "typestr": "^^v"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFSetGetValues": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFSet=}"
     }, 
     {
      "name": "values", 
      "typestr": "^^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFSetRemoveAllValues": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFSet=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFSetRemoveValue": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFSet=}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFSetReplaceValue": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFSet=}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFSetSetValue": {
    "args": [
     {
      "name": "theSet", 
      "typestr": "^{__CFSet=}"
     }, 
     {
      "name": "value", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFShow": {
    "args": [
     {
      "name": "obj", 
      "typestr": "@"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFShowStr": {
    "args": [
     {
      "name": "str", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFSocketConnectToAddress": {
    "args": [
     {
      "name": "s", 
      "typestr": "^{__CFSocket=}"
     }, 
     {
      "name": "address", 
      "typestr": "^{__CFData=}"
     }, 
     {
      "name": "timeout", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFSocketCopyAddress": {
    "args": [
     {
      "name": "s", 
      "typestr": "^{__CFSocket=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CFSocketCopyPeerAddress": {
    "args": [
     {
      "name": "s", 
      "typestr": "^{__CFSocket=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CFSocketCopyRegisteredSocketSignature": {
    "args": [
     {
      "name": "nameServerSignature", 
      "typestr": "^{_CFSocketSignature=lll^{__CFData=}}"
     }, 
     {
      "name": "timeout", 
      "typestr": "d"
     }, 
     {
      "name": "name", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "signature", 
      "typestr": "^{_CFSocketSignature=lll^{__CFData=}}"
     }, 
     {
      "name": "nameServerAddress", 
      "typestr": "^^{__CFData=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "l"
    }
   }, 
   "CFSocketCopyRegisteredValue": {
    "args": [
     {
      "name": "nameServerSignature", 
      "typestr": "^{_CFSocketSignature=lll^{__CFData=}}"
     }, 
     {
      "name": "timeout", 
      "typestr": "d"
     }, 
     {
      "name": "name", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "value", 
      "typestr": "^@"
     }, 
     {
      "name": "nameServerAddress", 
      "typestr": "^^{__CFData=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "l"
    }
   }, 
   "CFSocketCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "protocolFamily", 
      "typestr": "l"
     }, 
     {
      "name": "socketType", 
      "typestr": "l"
     }, 
     {
      "name": "protocol", 
      "typestr": "l"
     }, 
     {
      "name": "callBackTypes", 
      "typestr": "L"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CFSocket=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "L", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{__CFData=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "callout", 
      "typestr": "^?"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFSocketContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFSocket=}"
    }
   }, 
   "CFSocketCreateConnectedToSocketSignature": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "signature", 
      "typestr": "^{_CFSocketSignature=lll^{__CFData=}}"
     }, 
     {
      "name": "callBackTypes", 
      "typestr": "L"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CFSocket=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "L", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{__CFData=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "callout", 
      "typestr": "^?"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFSocketContext=l^v^?^?^?}"
     }, 
     {
      "name": "timeout", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFSocket=}"
    }
   }, 
   "CFSocketCreateRunLoopSource": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "s", 
      "typestr": "^{__CFSocket=}"
     }, 
     {
      "name": "order", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFRunLoopSource=}"
    }
   }, 
   "CFSocketCreateWithNative": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "sock", 
      "typestr": "i"
     }, 
     {
      "name": "callBackTypes", 
      "typestr": "L"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CFSocket=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "L", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{__CFData=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "callout", 
      "typestr": "^?"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFSocketContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFSocket=}"
    }
   }, 
   "CFSocketCreateWithSocketSignature": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "signature", 
      "typestr": "^{_CFSocketSignature=lll^{__CFData=}}"
     }, 
     {
      "name": "callBackTypes", 
      "typestr": "L"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CFSocket=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "L", 
          false
         ]
        }, 
        {
         "typestr": [
          "^{__CFData=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "callout", 
      "typestr": "^?"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFSocketContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFSocket=}"
    }
   }, 
   "CFSocketDisableCallBacks": {
    "args": [
     {
      "name": "s", 
      "typestr": "^{__CFSocket=}"
     }, 
     {
      "name": "callBackTypes", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFSocketEnableCallBacks": {
    "args": [
     {
      "name": "s", 
      "typestr": "^{__CFSocket=}"
     }, 
     {
      "name": "callBackTypes", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFSocketGetContext": {
    "args": [
     {
      "name": "s", 
      "typestr": "^{__CFSocket=}"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFSocketContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFSocketGetDefaultNameRegistryPortNumber": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "S"
    }
   }, 
   "CFSocketGetNative": {
    "args": [
     {
      "name": "s", 
      "typestr": "^{__CFSocket=}"
     }
    ], 
    "retval": {
     "typestr": "i"
    }
   }, 
   "CFSocketGetSocketFlags": {
    "args": [
     {
      "name": "s", 
      "typestr": "^{__CFSocket=}"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFSocketGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFSocketInvalidate": {
    "args": [
     {
      "name": "s", 
      "typestr": "^{__CFSocket=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFSocketIsValid": {
    "args": [
     {
      "name": "s", 
      "typestr": "^{__CFSocket=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFSocketRegisterSocketSignature": {
    "args": [
     {
      "name": "nameServerSignature", 
      "typestr": "^{_CFSocketSignature=lll^{__CFData=}}"
     }, 
     {
      "name": "timeout", 
      "typestr": "d"
     }, 
     {
      "name": "name", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "signature", 
      "typestr": "^{_CFSocketSignature=lll^{__CFData=}}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFSocketRegisterValue": {
    "args": [
     {
      "name": "nameServerSignature", 
      "typestr": "^{_CFSocketSignature=lll^{__CFData=}}"
     }, 
     {
      "name": "timeout", 
      "typestr": "d"
     }, 
     {
      "name": "name", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "value", 
      "typestr": "@"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFSocketSendData": {
    "args": [
     {
      "name": "s", 
      "typestr": "^{__CFSocket=}"
     }, 
     {
      "name": "address", 
      "typestr": "^{__CFData=}"
     }, 
     {
      "name": "data", 
      "typestr": "^{__CFData=}"
     }, 
     {
      "name": "timeout", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFSocketSetAddress": {
    "args": [
     {
      "name": "s", 
      "typestr": "^{__CFSocket=}"
     }, 
     {
      "name": "address", 
      "typestr": "^{__CFData=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFSocketSetDefaultNameRegistryPortNumber": {
    "args": [
     {
      "name": "port", 
      "typestr": "S"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFSocketSetSocketFlags": {
    "args": [
     {
      "name": "s", 
      "typestr": "^{__CFSocket=}"
     }, 
     {
      "name": "flags", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFSocketUnregister": {
    "args": [
     {
      "name": "nameServerSignature", 
      "typestr": "^{_CFSocketSignature=lll^{__CFData=}}"
     }, 
     {
      "name": "timeout", 
      "typestr": "d"
     }, 
     {
      "name": "name", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFStreamCreateBoundPair": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "readStream", 
      "typestr": "^^{__CFReadStream=}"
     }, 
     {
      "name": "writeStream", 
      "typestr": "^^{__CFWriteStream=}"
     }, 
     {
      "name": "transferBufferSize", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "v"
    }
   }, 
   "CFStreamCreatePairWithPeerSocketSignature": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "signature", 
      "typestr": "^{_CFSocketSignature=lll^{__CFData=}}"
     }, 
     {
      "name": "readStream", 
      "typestr": "^^{__CFReadStream=}"
     }, 
     {
      "name": "writeStream", 
      "typestr": "^^{__CFWriteStream=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "v"
    }
   }, 
   "CFStreamCreatePairWithSocket": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "sock", 
      "typestr": "i"
     }, 
     {
      "name": "readStream", 
      "typestr": "^^{__CFReadStream=}"
     }, 
     {
      "name": "writeStream", 
      "typestr": "^^{__CFWriteStream=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "v"
    }
   }, 
   "CFStreamCreatePairWithSocketToHost": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "host", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "port", 
      "typestr": "L"
     }, 
     {
      "name": "readStream", 
      "typestr": "^^{__CFReadStream=}"
     }, 
     {
      "name": "writeStream", 
      "typestr": "^^{__CFWriteStream=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "v"
    }
   }, 
   "CFStringAppend": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "appendedString", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFStringAppendCString": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "cStr", 
      "typestr": "^c"
     }, 
     {
      "name": "encoding", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFStringAppendCharacters": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "chars", 
      "typestr": "^T"
     }, 
     {
      "name": "numChars", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFStringAppendFormat": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "formatOptions", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "format", 
      "printf_format": true, 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }, 
    "variadic": true
   }, 
   "CFStringAppendFormatAndArguments": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "formatOptions", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "format", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "arguments", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFStringAppendPascalString": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "pStr", 
      "typestr": "^C"
     }, 
     {
      "name": "encoding", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFStringCapitalize": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "locale", 
      "typestr": "^{__CFLocale=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFStringCompare": {
    "args": [
     {
      "name": "theString1", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "theString2", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "compareOptions", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFStringCompareWithOptions": {
    "args": [
     {
      "name": "theString1", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "theString2", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "rangeToCompare", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "compareOptions", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFStringCompareWithOptionsAndLocale": {
    "args": [
     {
      "name": "theString1", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "theString2", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "rangeToCompare", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "compareOptions", 
      "typestr": "L"
     }, 
     {
      "name": "locale", 
      "typestr": "^{__CFLocale=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFStringConvertEncodingToIANACharSetName": {
    "args": [
     {
      "name": "encoding", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFStringConvertEncodingToNSStringEncoding": {
    "args": [
     {
      "name": "encoding", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFStringConvertEncodingToWindowsCodepage": {
    "args": [
     {
      "name": "encoding", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFStringConvertIANACharSetNameToEncoding": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFStringConvertNSStringEncodingToEncoding": {
    "args": [
     {
      "name": "encoding", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFStringConvertWindowsCodepageToEncoding": {
    "args": [
     {
      "name": "codepage", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFStringCreateArrayBySeparatingStrings": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "separatorString", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFStringCreateArrayWithFindResults": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "stringToFind", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "rangeToSearch", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "compareOptions", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFStringCreateByCombiningStrings": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "theArray", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "separatorString", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFStringCreateCopy": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFStringCreateExternalRepresentation": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "encoding", 
      "typestr": "L"
     }, 
     {
      "name": "lossByte", 
      "typestr": "C"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CFStringCreateFromExternalRepresentation": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "data", 
      "typestr": "^{__CFData=}"
     }, 
     {
      "name": "encoding", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFStringCreateMutable": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "maxLength", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFStringCreateMutableCopy": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "maxLength", 
      "typestr": "l"
     }, 
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFStringCreateMutableWithExternalCharactersNoCopy": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "chars", 
      "typestr": "^T"
     }, 
     {
      "name": "numChars", 
      "typestr": "l"
     }, 
     {
      "name": "capacity", 
      "typestr": "l"
     }, 
     {
      "name": "externalCharactersAllocator", 
      "typestr": "^{__CFAllocator=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFStringCreateWithBytes": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "bytes", 
      "typestr": "^C"
     }, 
     {
      "name": "numBytes", 
      "typestr": "l"
     }, 
     {
      "name": "encoding", 
      "typestr": "L"
     }, 
     {
      "name": "isExternalRepresentation", 
      "typestr": "Z"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFStringCreateWithBytesNoCopy": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "bytes", 
      "typestr": "^C"
     }, 
     {
      "name": "numBytes", 
      "typestr": "l"
     }, 
     {
      "name": "encoding", 
      "typestr": "L"
     }, 
     {
      "name": "isExternalRepresentation", 
      "typestr": "Z"
     }, 
     {
      "name": "contentsDeallocator", 
      "typestr": "^{__CFAllocator=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFStringCreateWithCString": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "cStr", 
      "typestr": "^c"
     }, 
     {
      "name": "encoding", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFStringCreateWithCStringNoCopy": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "cStr", 
      "typestr": "^c"
     }, 
     {
      "name": "encoding", 
      "typestr": "L"
     }, 
     {
      "name": "contentsDeallocator", 
      "typestr": "^{__CFAllocator=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFStringCreateWithCharacters": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "chars", 
      "typestr": "^T"
     }, 
     {
      "name": "numChars", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFStringCreateWithCharactersNoCopy": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "chars", 
      "typestr": "^T"
     }, 
     {
      "name": "numChars", 
      "typestr": "l"
     }, 
     {
      "name": "contentsDeallocator", 
      "typestr": "^{__CFAllocator=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFStringCreateWithFileSystemRepresentation": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "buffer", 
      "typestr": "^c"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFStringCreateWithFormat": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "formatOptions", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "format", 
      "printf_format": true, 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }, 
    "variadic": true
   }, 
   "CFStringCreateWithFormatAndArguments": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "formatOptions", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "format", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "arguments", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFStringCreateWithPascalString": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "pStr", 
      "typestr": "^C"
     }, 
     {
      "name": "encoding", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFStringCreateWithPascalStringNoCopy": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "pStr", 
      "typestr": "^C"
     }, 
     {
      "name": "encoding", 
      "typestr": "L"
     }, 
     {
      "name": "contentsDeallocator", 
      "typestr": "^{__CFAllocator=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFStringCreateWithSubstring": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "str", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFStringDelete": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFStringFind": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "stringToFind", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "compareOptions", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "{_CFRange=ll}"
    }
   }, 
   "CFStringFindAndReplace": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "stringToFind", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "replacementString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "rangeToSearch", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "compareOptions", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFStringFindCharacterFromSet": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "theSet", 
      "typestr": "^{__CFCharacterSet=}"
     }, 
     {
      "name": "rangeToSearch", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "searchOptions", 
      "typestr": "L"
     }, 
     {
      "name": "result", 
      "typestr": "^{_CFRange=ll}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFStringFindWithOptions": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "stringToFind", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "rangeToSearch", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "searchOptions", 
      "typestr": "L"
     }, 
     {
      "name": "result", 
      "typestr": "^{_CFRange=ll}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFStringFindWithOptionsAndLocale": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "stringToFind", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "rangeToSearch", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "searchOptions", 
      "typestr": "L"
     }, 
     {
      "name": "locale", 
      "typestr": "^{__CFLocale=}"
     }, 
     {
      "name": "result", 
      "typestr": "^{_CFRange=ll}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFStringFold": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "theFlags", 
      "typestr": "L"
     }, 
     {
      "name": "theLocale", 
      "typestr": "^{__CFLocale=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFStringGetBytes": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "encoding", 
      "typestr": "L"
     }, 
     {
      "name": "lossByte", 
      "typestr": "C"
     }, 
     {
      "name": "isExternalRepresentation", 
      "typestr": "Z"
     }, 
     {
      "name": "buffer", 
      "typestr": "^C"
     }, 
     {
      "name": "maxBufLen", 
      "typestr": "l"
     }, 
     {
      "name": "usedBufLen", 
      "typestr": "^l"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFStringGetCString": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "buffer", 
      "typestr": "^c"
     }, 
     {
      "name": "bufferSize", 
      "typestr": "l"
     }, 
     {
      "name": "encoding", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFStringGetCStringPtr": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "encoding", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "^c"
    }
   }, 
   "CFStringGetCharacterAtIndex": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "idx", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "T"
    }
   }, 
   "CFStringGetCharacterFromInlineBuffer": {
    "args": [
     {
      "name": "buf", 
      "typestr": "^{_CFStringInlineBuffer=[64T]^{__CFString=}^T{_CFRange=ll}ll}"
     }, 
     {
      "name": "idx", 
      "typestr": "l"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "T"
    }
   }, 
   "CFStringGetCharacters": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "buffer", 
      "typestr": "^T"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFStringGetCharactersPtr": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "^T"
    }
   }, 
   "CFStringGetDoubleValue": {
    "args": [
     {
      "name": "str", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CFStringGetFastestEncoding": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFStringGetFileSystemRepresentation": {
    "args": [
     {
      "name": "string", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "buffer", 
      "typestr": "^c"
     }, 
     {
      "name": "maxBufLen", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFStringGetIntValue": {
    "args": [
     {
      "name": "str", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFStringGetLength": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFStringGetLineBounds": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "lineBeginIndex", 
      "typestr": "^l"
     }, 
     {
      "name": "lineEndIndex", 
      "typestr": "^l"
     }, 
     {
      "name": "contentsEndIndex", 
      "typestr": "^l"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFStringGetListOfAvailableEncodings": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "^L"
    }
   }, 
   "CFStringGetLongCharacterForSurrogatePair": {
    "args": [
     {
      "name": "surrogateHigh", 
      "typestr": "T"
     }, 
     {
      "name": "surrogateLow", 
      "typestr": "T"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFStringGetMaximumSizeForEncoding": {
    "args": [
     {
      "name": "length", 
      "typestr": "l"
     }, 
     {
      "name": "encoding", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFStringGetMaximumSizeOfFileSystemRepresentation": {
    "args": [
     {
      "name": "string", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFStringGetMostCompatibleMacStringEncoding": {
    "args": [
     {
      "name": "encoding", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFStringGetNameOfEncoding": {
    "args": [
     {
      "name": "encoding", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFStringGetParagraphBounds": {
    "args": [
     {
      "name": "string", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "parBeginIndex", 
      "typestr": "^l"
     }, 
     {
      "name": "parEndIndex", 
      "typestr": "^l"
     }, 
     {
      "name": "contentsEndIndex", 
      "typestr": "^l"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFStringGetPascalString": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "buffer", 
      "typestr": "^C"
     }, 
     {
      "name": "bufferSize", 
      "typestr": "l"
     }, 
     {
      "name": "encoding", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFStringGetPascalStringPtr": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "encoding", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "^C"
    }
   }, 
   "CFStringGetRangeOfComposedCharactersAtIndex": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "theIndex", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "{_CFRange=ll}"
    }
   }, 
   "CFStringGetSmallestEncoding": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFStringGetSurrogatePairForLongCharacter": {
    "args": [
     {
      "name": "character", 
      "typestr": "L"
     }, 
     {
      "name": "surrogates", 
      "typestr": "^T"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFStringGetSystemEncoding": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFStringGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFStringHasPrefix": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "prefix", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFStringHasSuffix": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "suffix", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFStringInitInlineBuffer": {
    "args": [
     {
      "name": "str", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "buf", 
      "typestr": "^{_CFStringInlineBuffer=[64T]^{__CFString=}^T{_CFRange=ll}ll}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFStringInsert": {
    "args": [
     {
      "name": "str", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "idx", 
      "typestr": "l"
     }, 
     {
      "name": "insertedStr", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFStringIsEncodingAvailable": {
    "args": [
     {
      "name": "encoding", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFStringIsSurrogateHighCharacter": {
    "args": [
     {
      "name": "character", 
      "typestr": "T"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFStringIsSurrogateLowCharacter": {
    "args": [
     {
      "name": "character", 
      "typestr": "T"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFStringLowercase": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "locale", 
      "typestr": "^{__CFLocale=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFStringNormalize": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "theForm", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFStringPad": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "padString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "length", 
      "typestr": "l"
     }, 
     {
      "name": "indexIntoPad", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFStringReplace": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "replacement", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFStringReplaceAll": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "replacement", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFStringSetExternalCharactersNoCopy": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "chars", 
      "typestr": "^T"
     }, 
     {
      "name": "length", 
      "typestr": "l"
     }, 
     {
      "name": "capacity", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "v"
    }
   }, 
   "CFStringTokenizerAdvanceToNextToken": {
    "args": [
     {
      "name": "tokenizer", 
      "typestr": "^{__CFStringTokenizer=}"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFStringTokenizerCopyBestStringLanguage": {
    "args": [
     {
      "name": "string", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFStringTokenizerCopyCurrentTokenAttribute": {
    "args": [
     {
      "name": "tokenizer", 
      "typestr": "^{__CFStringTokenizer=}"
     }, 
     {
      "name": "attribute", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "@"
    }
   }, 
   "CFStringTokenizerCreate": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "string", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }, 
     {
      "name": "options", 
      "typestr": "L"
     }, 
     {
      "name": "locale", 
      "typestr": "^{__CFLocale=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFStringTokenizer=}"
    }
   }, 
   "CFStringTokenizerGetCurrentSubTokens": {
    "args": [
     {
      "name": "tokenizer", 
      "typestr": "^{__CFStringTokenizer=}"
     }, 
     {
      "name": "ranges", 
      "typestr": "^{_CFRange=ll}"
     }, 
     {
      "name": "maxRangeLength", 
      "typestr": "l"
     }, 
     {
      "name": "derivedSubTokens", 
      "typestr": "^{__CFArray=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFStringTokenizerGetCurrentTokenRange": {
    "args": [
     {
      "name": "tokenizer", 
      "typestr": "^{__CFStringTokenizer=}"
     }
    ], 
    "retval": {
     "typestr": "{_CFRange=ll}"
    }
   }, 
   "CFStringTokenizerGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFStringTokenizerGoToTokenAtIndex": {
    "args": [
     {
      "name": "tokenizer", 
      "typestr": "^{__CFStringTokenizer=}"
     }, 
     {
      "name": "index", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFStringTokenizerSetString": {
    "args": [
     {
      "name": "tokenizer", 
      "typestr": "^{__CFStringTokenizer=}"
     }, 
     {
      "name": "string", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "range", 
      "typestr": "{_CFRange=ll}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFStringTransform": {
    "args": [
     {
      "name": "string", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "range", 
      "typestr": "^{_CFRange=ll}"
     }, 
     {
      "name": "transform", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "reverse", 
      "typestr": "Z"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFStringTrim": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "trimString", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFStringTrimWhitespace": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFStringUppercase": {
    "args": [
     {
      "name": "theString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "locale", 
      "typestr": "^{__CFLocale=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFSwapInt16": {
    "args": [
     {
      "name": "arg", 
      "typestr": "S"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "S"
    }
   }, 
   "CFSwapInt16BigToHost": {
    "args": [
     {
      "name": "arg", 
      "typestr": "S"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "S"
    }
   }, 
   "CFSwapInt16HostToBig": {
    "args": [
     {
      "name": "arg", 
      "typestr": "S"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "S"
    }
   }, 
   "CFSwapInt16HostToLittle": {
    "args": [
     {
      "name": "arg", 
      "typestr": "S"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "S"
    }
   }, 
   "CFSwapInt16LittleToHost": {
    "args": [
     {
      "name": "arg", 
      "typestr": "S"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "S"
    }
   }, 
   "CFSwapInt32": {
    "args": [
     {
      "name": "arg", 
      "typestr": "I"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CFSwapInt32BigToHost": {
    "args": [
     {
      "name": "arg", 
      "typestr": "I"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CFSwapInt32HostToBig": {
    "args": [
     {
      "name": "arg", 
      "typestr": "I"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CFSwapInt32HostToLittle": {
    "args": [
     {
      "name": "arg", 
      "typestr": "I"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CFSwapInt32LittleToHost": {
    "args": [
     {
      "name": "arg", 
      "typestr": "I"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "I"
    }
   }, 
   "CFSwapInt64": {
    "args": [
     {
      "name": "arg", 
      "typestr": "Q"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CFSwapInt64BigToHost": {
    "args": [
     {
      "name": "arg", 
      "typestr": "Q"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CFSwapInt64HostToBig": {
    "args": [
     {
      "name": "arg", 
      "typestr": "Q"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CFSwapInt64HostToLittle": {
    "args": [
     {
      "name": "arg", 
      "typestr": "Q"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CFSwapInt64LittleToHost": {
    "args": [
     {
      "name": "arg", 
      "typestr": "Q"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "Q"
    }
   }, 
   "CFTimeZoneCopyAbbreviation": {
    "args": [
     {
      "name": "tz", 
      "typestr": "^{__CFTimeZone=}"
     }, 
     {
      "name": "at", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFTimeZoneCopyAbbreviationDictionary": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CFTimeZoneCopyDefault": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFTimeZone=}"
    }
   }, 
   "CFTimeZoneCopyKnownNames": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFArray=}"
    }
   }, 
   "CFTimeZoneCopyLocalizedName": {
    "args": [
     {
      "name": "tz", 
      "typestr": "^{__CFTimeZone=}"
     }, 
     {
      "name": "style", 
      "typestr": "l"
     }, 
     {
      "name": "locale", 
      "typestr": "^{__CFLocale=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFTimeZoneCopySystem": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFTimeZone=}"
    }
   }, 
   "CFTimeZoneCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "name", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "data", 
      "typestr": "^{__CFData=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFTimeZone=}"
    }
   }, 
   "CFTimeZoneCreateWithName": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "name", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "tryAbbrev", 
      "typestr": "Z"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFTimeZone=}"
    }
   }, 
   "CFTimeZoneCreateWithTimeIntervalFromGMT": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "ti", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFTimeZone=}"
    }
   }, 
   "CFTimeZoneGetData": {
    "args": [
     {
      "name": "tz", 
      "typestr": "^{__CFTimeZone=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFData=}"
    }
   }, 
   "CFTimeZoneGetDaylightSavingTimeOffset": {
    "args": [
     {
      "name": "tz", 
      "typestr": "^{__CFTimeZone=}"
     }, 
     {
      "name": "at", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CFTimeZoneGetName": {
    "args": [
     {
      "name": "tz", 
      "typestr": "^{__CFTimeZone=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFTimeZoneGetNextDaylightSavingTimeTransition": {
    "args": [
     {
      "name": "tz", 
      "typestr": "^{__CFTimeZone=}"
     }, 
     {
      "name": "at", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CFTimeZoneGetSecondsFromGMT": {
    "args": [
     {
      "name": "tz", 
      "typestr": "^{__CFTimeZone=}"
     }, 
     {
      "name": "at", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "d"
    }
   }, 
   "CFTimeZoneGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFTimeZoneIsDaylightSavingTime": {
    "args": [
     {
      "name": "tz", 
      "typestr": "^{__CFTimeZone=}"
     }, 
     {
      "name": "at", 
      "typestr": "d"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFTimeZoneResetSystem": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFTimeZoneSetAbbreviationDictionary": {
    "args": [
     {
      "name": "dict", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFTimeZoneSetDefault": {
    "args": [
     {
      "name": "tz", 
      "typestr": "^{__CFTimeZone=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFTreeAppendChild": {
    "args": [
     {
      "name": "tree", 
      "typestr": "^{__CFTree=}"
     }, 
     {
      "name": "newChild", 
      "typestr": "^{__CFTree=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFTreeApplyFunctionToChildren": {
    "args": [
     {
      "name": "tree", 
      "typestr": "^{__CFTree=}"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^v", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "applier", 
      "typestr": "^?"
     }, 
     {
      "name": "context", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFTreeCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFTreeContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFTree=}"
    }
   }, 
   "CFTreeFindRoot": {
    "args": [
     {
      "name": "tree", 
      "typestr": "^{__CFTree=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFTree=}"
    }
   }, 
   "CFTreeGetChildAtIndex": {
    "args": [
     {
      "name": "tree", 
      "typestr": "^{__CFTree=}"
     }, 
     {
      "name": "idx", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "^{__CFTree=}"
    }
   }, 
   "CFTreeGetChildCount": {
    "args": [
     {
      "name": "tree", 
      "typestr": "^{__CFTree=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFTreeGetChildren": {
    "args": [
     {
      "name": "tree", 
      "typestr": "^{__CFTree=}"
     }, 
     {
      "name": "children", 
      "typestr": "^^{__CFTree=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFTreeGetContext": {
    "args": [
     {
      "name": "tree", 
      "typestr": "^{__CFTree=}"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFTreeContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFTreeGetFirstChild": {
    "args": [
     {
      "name": "tree", 
      "typestr": "^{__CFTree=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFTree=}"
    }
   }, 
   "CFTreeGetNextSibling": {
    "args": [
     {
      "name": "tree", 
      "typestr": "^{__CFTree=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFTree=}"
    }
   }, 
   "CFTreeGetParent": {
    "args": [
     {
      "name": "tree", 
      "typestr": "^{__CFTree=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFTree=}"
    }
   }, 
   "CFTreeGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFTreeInsertSibling": {
    "args": [
     {
      "name": "tree", 
      "typestr": "^{__CFTree=}"
     }, 
     {
      "name": "newSibling", 
      "typestr": "^{__CFTree=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFTreePrependChild": {
    "args": [
     {
      "name": "tree", 
      "typestr": "^{__CFTree=}"
     }, 
     {
      "name": "newChild", 
      "typestr": "^{__CFTree=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFTreeRemove": {
    "args": [
     {
      "name": "tree", 
      "typestr": "^{__CFTree=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFTreeRemoveAllChildren": {
    "args": [
     {
      "name": "tree", 
      "typestr": "^{__CFTree=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFTreeSetContext": {
    "args": [
     {
      "name": "tree", 
      "typestr": "^{__CFTree=}"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFTreeContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFTreeSortChildren": {
    "args": [
     {
      "name": "tree", 
      "typestr": "^{__CFTree=}"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": "@"
        }, 
        {
         "typestr": "@"
        }, 
        {
         "typestr": "@"
        }
       ], 
       "retval": {
        "typestr": "L"
       }
      }, 
      "name": "comparator", 
      "typestr": "^?"
     }, 
     {
      "name": "context", 
      "typestr": "^v"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFURLCanBeDecomposed": {
    "args": [
     {
      "name": "anURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFURLClearResourcePropertyCache": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFURLClearResourcePropertyCacheForKey": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "key", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFURLCopyAbsoluteURL": {
    "args": [
     {
      "name": "relativeURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFURLCopyFileSystemPath": {
    "args": [
     {
      "name": "anURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "pathStyle", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFURLCopyFragment": {
    "args": [
     {
      "name": "anURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "charactersToLeaveEscaped", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFURLCopyHostName": {
    "args": [
     {
      "name": "anURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFURLCopyLastPathComponent": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFURLCopyNetLocation": {
    "args": [
     {
      "name": "anURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFURLCopyParameterString": {
    "args": [
     {
      "name": "anURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "charactersToLeaveEscaped", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFURLCopyPassword": {
    "args": [
     {
      "name": "anURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFURLCopyPath": {
    "args": [
     {
      "name": "anURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFURLCopyPathExtension": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFURLCopyQueryString": {
    "args": [
     {
      "name": "anURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "charactersToLeaveEscaped", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFURLCopyResourcePropertiesForKeys": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "keys", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "already_cfretained": true, 
      "name": "error", 
      "null_accepted": true, 
      "type_modifier": "o", 
      "typestr": "^^{__CFError=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CFURLCopyResourcePropertyForKey": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "key", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "propertyValueTypeRefPtr", 
      "typestr": "^v"
     }, 
     {
      "already_cfretained": true, 
      "name": "error", 
      "null_accepted": true, 
      "type_modifier": "o", 
      "typestr": "^^{__CFError=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "Z"
    }
   }, 
   "CFURLCopyResourceSpecifier": {
    "args": [
     {
      "name": "anURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFURLCopyScheme": {
    "args": [
     {
      "name": "anURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFURLCopyStrictPath": {
    "args": [
     {
      "name": "anURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "isAbsolute", 
      "typestr": "^Z"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFURLCopyUserName": {
    "args": [
     {
      "name": "anURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFURLCreateAbsoluteURLWithBytes": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "relativeURLBytes", 
      "typestr": "^C"
     }, 
     {
      "name": "length", 
      "typestr": "l"
     }, 
     {
      "name": "encoding", 
      "typestr": "L"
     }, 
     {
      "name": "baseURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "useCompatibilityMode", 
      "typestr": "Z"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFURLCreateBookmarkData": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "options", 
      "typestr": "L"
     }, 
     {
      "name": "resourcePropertiesToInclude", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "relativeToURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "already_cfretained": true, 
      "name": "error", 
      "null_accepted": true, 
      "type_modifier": "o", 
      "typestr": "^^{__CFError=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CFURLCreateBookmarkDataFromAliasRecord": {
    "args": [
     {
      "name": "allocatorRef", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "aliasRecordDataRef", 
      "typestr": "^{__CFData=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CFURLCreateBookmarkDataFromFile": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "fileURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "already_cfretained": true, 
      "name": "errorRef", 
      "null_accepted": true, 
      "type_modifier": "o", 
      "typestr": "^^{__CFError=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CFURLCreateByResolvingBookmarkData": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "bookmark", 
      "typestr": "^{__CFData=}"
     }, 
     {
      "name": "options", 
      "typestr": "L"
     }, 
     {
      "name": "relativeToURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "resourcePropertiesToInclude", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "isStale", 
      "typestr": "^Z"
     }, 
     {
      "already_cfretained": true, 
      "name": "error", 
      "null_accepted": true, 
      "type_modifier": "o", 
      "typestr": "^^{__CFError=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFURLCreateCopyAppendingPathComponent": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "pathComponent", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "isDirectory", 
      "typestr": "Z"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFURLCreateCopyAppendingPathExtension": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "extension", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFURLCreateCopyDeletingLastPathComponent": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFURLCreateCopyDeletingPathExtension": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFURLCreateData": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "encoding", 
      "typestr": "L"
     }, 
     {
      "name": "escapeWhitespace", 
      "typestr": "Z"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CFURLCreateDataAndPropertiesFromResource": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "resourceData", 
      "typestr": "^^{__CFData=}"
     }, 
     {
      "name": "properties", 
      "typestr": "^^{__CFDictionary=}"
     }, 
     {
      "name": "desiredProperties", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "errorCode", 
      "typestr": "^l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "Z"
    }
   }, 
   "CFURLCreateFilePathURL": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "already_cfretained": true, 
      "name": "error", 
      "null_accepted": true, 
      "type_modifier": "o", 
      "typestr": "^^{__CFError=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFURLCreateFileReferenceURL": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "already_cfretained": true, 
      "name": "error", 
      "null_accepted": true, 
      "type_modifier": "o", 
      "typestr": "^^{__CFError=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFURLCreateFromFSRef": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "fsRef", 
      "typestr": "^{FSRef=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFURLCreateFromFileSystemRepresentation": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "buffer", 
      "typestr": "^C"
     }, 
     {
      "name": "bufLen", 
      "typestr": "l"
     }, 
     {
      "name": "isDirectory", 
      "typestr": "Z"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFURLCreateFromFileSystemRepresentationRelativeToBase": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "buffer", 
      "typestr": "^C"
     }, 
     {
      "name": "bufLen", 
      "typestr": "l"
     }, 
     {
      "name": "isDirectory", 
      "typestr": "Z"
     }, 
     {
      "name": "baseURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFURLCreatePropertyFromResource": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "property", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "errorCode", 
      "typestr": "^l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "@"
    }
   }, 
   "CFURLCreateResourcePropertiesForKeysFromBookmarkData": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "resourcePropertiesToReturn", 
      "typestr": "^{__CFArray=}"
     }, 
     {
      "name": "bookmark", 
      "typestr": "^{__CFData=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CFURLCreateResourcePropertyForKeyFromBookmarkData": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "resourcePropertyKey", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "bookmark", 
      "typestr": "^{__CFData=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "@"
    }
   }, 
   "CFURLCreateStringByAddingPercentEscapes": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "originalString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "charactersToLeaveUnescaped", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "legalURLCharactersToBeEscaped", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "encoding", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFURLCreateStringByReplacingPercentEscapes": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "originalString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "charactersToLeaveEscaped", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFURLCreateStringByReplacingPercentEscapesUsingEncoding": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "origString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "charsToLeaveEscaped", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "encoding", 
      "typestr": "L"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFURLCreateWithBytes": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "URLBytes", 
      "typestr": "^C"
     }, 
     {
      "name": "length", 
      "typestr": "l"
     }, 
     {
      "name": "encoding", 
      "typestr": "L"
     }, 
     {
      "name": "baseURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFURLCreateWithFileSystemPath": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "filePath", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "pathStyle", 
      "typestr": "l"
     }, 
     {
      "name": "isDirectory", 
      "typestr": "Z"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFURLCreateWithFileSystemPathRelativeToBase": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "filePath", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "pathStyle", 
      "typestr": "l"
     }, 
     {
      "name": "isDirectory", 
      "typestr": "Z"
     }, 
     {
      "name": "baseURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFURLCreateWithString": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "URLString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "baseURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFURLDestroyResource": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "errorCode", 
      "typestr": "^l"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFURLEnumeratorCreateForDirectoryURL": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "directoryURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "option", 
      "typestr": "L"
     }, 
     {
      "name": "propertyKeys", 
      "typestr": "^{__CFArray=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURLEnumerator=}"
    }
   }, 
   "CFURLEnumeratorCreateForMountedVolumes": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "option", 
      "typestr": "L"
     }, 
     {
      "name": "propertyKeys", 
      "typestr": "^{__CFArray=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFURLEnumerator=}"
    }
   }, 
   "CFURLEnumeratorGetDescendentLevel": {
    "args": [
     {
      "name": "enumerator", 
      "typestr": "^{__CFURLEnumerator=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFURLEnumeratorGetNextURL": {
    "args": [
     {
      "name": "enumerator", 
      "typestr": "^{__CFURLEnumerator=}"
     }, 
     {
      "name": "url", 
      "typestr": "^^{__CFURL=}"
     }, 
     {
      "already_cfretained": true, 
      "name": "error", 
      "null_accepted": true, 
      "type_modifier": "o", 
      "typestr": "^^{__CFError=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFURLEnumeratorGetSourceDidChange": {
    "args": [
     {
      "name": "enumerator", 
      "typestr": "^{__CFURLEnumerator=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFURLEnumeratorGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFURLEnumeratorSkipDescendents": {
    "args": [
     {
      "name": "enumerator", 
      "typestr": "^{__CFURLEnumerator=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFURLGetBaseURL": {
    "args": [
     {
      "name": "anURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFURLGetByteRangeForComponent": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "component", 
      "typestr": "l"
     }, 
     {
      "name": "rangeIncludingSeparators", 
      "typestr": "^{_CFRange=ll}"
     }
    ], 
    "retval": {
     "typestr": "{_CFRange=ll}"
    }
   }, 
   "CFURLGetBytes": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "buffer", 
      "typestr": "^C"
     }, 
     {
      "name": "bufferLength", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFURLGetFSRef": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "fsRef", 
      "typestr": "^{FSRef=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFURLGetFileSystemRepresentation": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "resolveAgainstBase", 
      "typestr": "Z"
     }, 
     {
      "name": "buffer", 
      "typestr": "^C"
     }, 
     {
      "name": "maxBufLen", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFURLGetPortNumber": {
    "args": [
     {
      "name": "anURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFURLGetString": {
    "args": [
     {
      "name": "anURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFURLGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFURLHasDirectoryPath": {
    "args": [
     {
      "name": "anURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFURLResourceIsReachable": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "already_cfretained": true, 
      "name": "error", 
      "null_accepted": true, 
      "type_modifier": "o", 
      "typestr": "^^{__CFError=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFURLSetResourcePropertiesForKeys": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "keyedPropertyValues", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "already_cfretained": true, 
      "name": "error", 
      "null_accepted": true, 
      "type_modifier": "o", 
      "typestr": "^^{__CFError=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFURLSetResourcePropertyForKey": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "key", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "propertValue", 
      "typestr": "@"
     }, 
     {
      "already_cfretained": true, 
      "name": "error", 
      "null_accepted": true, 
      "type_modifier": "o", 
      "typestr": "^^{__CFError=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFURLSetTemporaryResourcePropertyForKey": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "key", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "propertyValue", 
      "typestr": "@"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFURLWriteBookmarkDataToFile": {
    "args": [
     {
      "name": "bookmarkRef", 
      "typestr": "^{__CFData=}"
     }, 
     {
      "name": "fileURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "options", 
      "typestr": "L"
     }, 
     {
      "already_cfretained": true, 
      "name": "errorRef", 
      "null_accepted": true, 
      "type_modifier": "o", 
      "typestr": "^^{__CFError=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFURLWriteDataAndPropertiesToResource": {
    "args": [
     {
      "name": "url", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "dataToWrite", 
      "typestr": "^{__CFData=}"
     }, 
     {
      "name": "propertiesToWrite", 
      "typestr": "^{__CFDictionary=}"
     }, 
     {
      "name": "errorCode", 
      "typestr": "^l"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFUUIDCreate": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFUUID=}"
    }
   }, 
   "CFUUIDCreateFromString": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "uuidStr", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFUUID=}"
    }
   }, 
   "CFUUIDCreateFromUUIDBytes": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "bytes", 
      "typestr": "{_CFUUIDBytes=CCCCCCCCCCCCCCCC}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFUUID=}"
    }
   }, 
   "CFUUIDCreateString": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "uuid", 
      "typestr": "^{__CFUUID=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFUUIDCreateWithBytes": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "byte0", 
      "typestr": "C"
     }, 
     {
      "name": "byte1", 
      "typestr": "C"
     }, 
     {
      "name": "byte2", 
      "typestr": "C"
     }, 
     {
      "name": "byte3", 
      "typestr": "C"
     }, 
     {
      "name": "byte4", 
      "typestr": "C"
     }, 
     {
      "name": "byte5", 
      "typestr": "C"
     }, 
     {
      "name": "byte6", 
      "typestr": "C"
     }, 
     {
      "name": "byte7", 
      "typestr": "C"
     }, 
     {
      "name": "byte8", 
      "typestr": "C"
     }, 
     {
      "name": "byte9", 
      "typestr": "C"
     }, 
     {
      "name": "byte10", 
      "typestr": "C"
     }, 
     {
      "name": "byte11", 
      "typestr": "C"
     }, 
     {
      "name": "byte12", 
      "typestr": "C"
     }, 
     {
      "name": "byte13", 
      "typestr": "C"
     }, 
     {
      "name": "byte14", 
      "typestr": "C"
     }, 
     {
      "name": "byte15", 
      "typestr": "C"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFUUID=}"
    }
   }, 
   "CFUUIDGetConstantUUIDWithBytes": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "byte0", 
      "typestr": "C"
     }, 
     {
      "name": "byte1", 
      "typestr": "C"
     }, 
     {
      "name": "byte2", 
      "typestr": "C"
     }, 
     {
      "name": "byte3", 
      "typestr": "C"
     }, 
     {
      "name": "byte4", 
      "typestr": "C"
     }, 
     {
      "name": "byte5", 
      "typestr": "C"
     }, 
     {
      "name": "byte6", 
      "typestr": "C"
     }, 
     {
      "name": "byte7", 
      "typestr": "C"
     }, 
     {
      "name": "byte8", 
      "typestr": "C"
     }, 
     {
      "name": "byte9", 
      "typestr": "C"
     }, 
     {
      "name": "byte10", 
      "typestr": "C"
     }, 
     {
      "name": "byte11", 
      "typestr": "C"
     }, 
     {
      "name": "byte12", 
      "typestr": "C"
     }, 
     {
      "name": "byte13", 
      "typestr": "C"
     }, 
     {
      "name": "byte14", 
      "typestr": "C"
     }, 
     {
      "name": "byte15", 
      "typestr": "C"
     }
    ], 
    "retval": {
     "typestr": "^{__CFUUID=}"
    }
   }, 
   "CFUUIDGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFUUIDGetUUIDBytes": {
    "args": [
     {
      "name": "uuid", 
      "typestr": "^{__CFUUID=}"
     }
    ], 
    "retval": {
     "typestr": "{_CFUUIDBytes=CCCCCCCCCCCCCCCC}"
    }
   }, 
   "CFUserNotificationCancel": {
    "args": [
     {
      "name": "userNotification", 
      "typestr": "^{__CFUserNotification=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFUserNotificationCheckBoxChecked": {
    "args": [
     {
      "name": "i", 
      "typestr": "l"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFUserNotificationCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "timeout", 
      "typestr": "d"
     }, 
     {
      "name": "flags", 
      "typestr": "L"
     }, 
     {
      "name": "error", 
      "typestr": "^l"
     }, 
     {
      "name": "dictionary", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFUserNotification=}"
    }
   }, 
   "CFUserNotificationCreateRunLoopSource": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "userNotification", 
      "typestr": "^{__CFUserNotification=}"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CFUserNotification=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "L", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "callout", 
      "typestr": "^?"
     }, 
     {
      "name": "order", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFRunLoopSource=}"
    }
   }, 
   "CFUserNotificationDisplayAlert": {
    "args": [
     {
      "name": "timeout", 
      "typestr": "d"
     }, 
     {
      "name": "flags", 
      "typestr": "L"
     }, 
     {
      "name": "iconURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "soundURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "localizationURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "alertHeader", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "alertMessage", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "defaultButtonTitle", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "alternateButtonTitle", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "otherButtonTitle", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "responseFlags", 
      "typestr": "^L"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFUserNotificationDisplayNotice": {
    "args": [
     {
      "name": "timeout", 
      "typestr": "d"
     }, 
     {
      "name": "flags", 
      "typestr": "L"
     }, 
     {
      "name": "iconURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "soundURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "localizationURL", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "alertHeader", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "alertMessage", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "defaultButtonTitle", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFUserNotificationGetResponseDictionary": {
    "args": [
     {
      "name": "userNotification", 
      "typestr": "^{__CFUserNotification=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFDictionary=}"
    }
   }, 
   "CFUserNotificationGetResponseValue": {
    "args": [
     {
      "name": "userNotification", 
      "typestr": "^{__CFUserNotification=}"
     }, 
     {
      "name": "key", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "idx", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFUserNotificationGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFUserNotificationPopUpSelection": {
    "args": [
     {
      "name": "n", 
      "typestr": "l"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFUserNotificationReceiveResponse": {
    "args": [
     {
      "name": "userNotification", 
      "typestr": "^{__CFUserNotification=}"
     }, 
     {
      "name": "timeout", 
      "typestr": "d"
     }, 
     {
      "name": "responseFlags", 
      "typestr": "^L"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFUserNotificationSecureTextField": {
    "args": [
     {
      "name": "i", 
      "typestr": "l"
     }
    ], 
    "inline": true, 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFUserNotificationUpdate": {
    "args": [
     {
      "name": "userNotification", 
      "typestr": "^{__CFUserNotification=}"
     }, 
     {
      "name": "timeout", 
      "typestr": "d"
     }, 
     {
      "name": "flags", 
      "typestr": "L"
     }, 
     {
      "name": "dictionary", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFWriteStreamCanAcceptBytes": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFWriteStream=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFWriteStreamClose": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFWriteStream=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFWriteStreamCopyError": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFWriteStream=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFError=}"
    }
   }, 
   "CFWriteStreamCopyProperty": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFWriteStream=}"
     }, 
     {
      "name": "propertyName", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "@"
    }
   }, 
   "CFWriteStreamCreateWithAllocatedBuffers": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "bufferAllocator", 
      "typestr": "^{__CFAllocator=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFWriteStream=}"
    }
   }, 
   "CFWriteStreamCreateWithBuffer": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "buffer", 
      "typestr": "^C"
     }, 
     {
      "name": "bufferCapacity", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFWriteStream=}"
    }
   }, 
   "CFWriteStreamCreateWithFile": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "fileURL", 
      "typestr": "^{__CFURL=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFWriteStream=}"
    }
   }, 
   "CFWriteStreamGetError": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFWriteStream=}"
     }
    ], 
    "retval": {
     "typestr": "{_CFStreamError=ll}"
    }
   }, 
   "CFWriteStreamGetStatus": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFWriteStream=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFWriteStreamGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFWriteStreamOpen": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFWriteStream=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFWriteStreamScheduleWithRunLoop": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFWriteStream=}"
     }, 
     {
      "name": "runLoop", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "runLoopMode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFWriteStreamSetClient": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFWriteStream=}"
     }, 
     {
      "name": "streamEvents", 
      "typestr": "L"
     }, 
     {
      "function": {
       "args": [
        {
         "typestr": [
          "^{__CFWriteStream=}", 
          false
         ]
        }, 
        {
         "typestr": [
          "L", 
          false
         ]
        }, 
        {
         "typestr": [
          "^v", 
          false
         ]
        }
       ], 
       "retval": {
        "typestr": [
         "v", 
         false
        ]
       }
      }, 
      "name": "clientCB", 
      "typestr": "^?"
     }, 
     {
      "name": "clientContext", 
      "typestr": "^{_CFStreamClientContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFWriteStreamSetProperty": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFWriteStream=}"
     }, 
     {
      "name": "propertyName", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "propertyValue", 
      "typestr": "@"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFWriteStreamUnscheduleFromRunLoop": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFWriteStream=}"
     }, 
     {
      "name": "runLoop", 
      "typestr": "^{__CFRunLoop=}"
     }, 
     {
      "name": "runLoopMode", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFWriteStreamWrite": {
    "args": [
     {
      "name": "stream", 
      "typestr": "^{__CFWriteStream=}"
     }, 
     {
      "name": "buffer", 
      "typestr": "^C"
     }, 
     {
      "name": "bufferLength", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFXMLCreateStringByEscapingEntities": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "string", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "entitiesDictionary", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFXMLCreateStringByUnescapingEntities": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "string", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "entitiesDictionary", 
      "typestr": "^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFXMLNodeCreate": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "xmlType", 
      "typestr": "l"
     }, 
     {
      "name": "dataString", 
      "typestr": "^{__CFString=}"
     }, 
     {
      "name": "additionalInfoPtr", 
      "typestr": "^v"
     }, 
     {
      "name": "version", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFXMLNode=}"
    }
   }, 
   "CFXMLNodeCreateCopy": {
    "args": [
     {
      "name": "alloc", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "origNode", 
      "typestr": "^{__CFXMLNode=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFXMLNode=}"
    }
   }, 
   "CFXMLNodeGetInfoPtr": {
    "args": [
     {
      "name": "node", 
      "typestr": "^{__CFXMLNode=}"
     }
    ], 
    "retval": {
     "typestr": "^v"
    }
   }, 
   "CFXMLNodeGetString": {
    "args": [
     {
      "name": "node", 
      "typestr": "^{__CFXMLNode=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFXMLNodeGetTypeCode": {
    "args": [
     {
      "name": "node", 
      "typestr": "^{__CFXMLNode=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFXMLNodeGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFXMLNodeGetVersion": {
    "args": [
     {
      "name": "node", 
      "typestr": "^{__CFXMLNode=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFXMLParserAbort": {
    "args": [
     {
      "name": "parser", 
      "typestr": "^{__CFXMLParser=}"
     }, 
     {
      "name": "errorCode", 
      "typestr": "l"
     }, 
     {
      "name": "errorDescription", 
      "typestr": "^{__CFString=}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFXMLParserCopyErrorDescription": {
    "args": [
     {
      "name": "parser", 
      "typestr": "^{__CFXMLParser=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFString=}"
    }
   }, 
   "CFXMLParserCreate": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "xmlData", 
      "typestr": "^{__CFData=}"
     }, 
     {
      "name": "dataSource", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "parseOptions", 
      "typestr": "L"
     }, 
     {
      "name": "versionOfNodes", 
      "typestr": "l"
     }, 
     {
      "name": "callBacks", 
      "typestr": "^{_CFXMLParserCallBacks=l^?^?^?^?^?}"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFXMLParserContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFXMLParser=}"
    }
   }, 
   "CFXMLParserCreateWithDataFromURL": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "dataSource", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "parseOptions", 
      "typestr": "L"
     }, 
     {
      "name": "versionOfNodes", 
      "typestr": "l"
     }, 
     {
      "name": "callBacks", 
      "typestr": "^{_CFXMLParserCallBacks=l^?^?^?^?^?}"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFXMLParserContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFXMLParser=}"
    }
   }, 
   "CFXMLParserGetCallBacks": {
    "args": [
     {
      "name": "parser", 
      "typestr": "^{__CFXMLParser=}"
     }, 
     {
      "name": "callBacks", 
      "typestr": "^{_CFXMLParserCallBacks=l^?^?^?^?^?}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFXMLParserGetContext": {
    "args": [
     {
      "name": "parser", 
      "typestr": "^{__CFXMLParser=}"
     }, 
     {
      "name": "context", 
      "typestr": "^{_CFXMLParserContext=l^v^?^?^?}"
     }
    ], 
    "retval": {
     "typestr": "v"
    }
   }, 
   "CFXMLParserGetDocument": {
    "args": [
     {
      "name": "parser", 
      "typestr": "^{__CFXMLParser=}"
     }
    ], 
    "retval": {
     "typestr": "^v"
    }
   }, 
   "CFXMLParserGetLineNumber": {
    "args": [
     {
      "name": "parser", 
      "typestr": "^{__CFXMLParser=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFXMLParserGetLocation": {
    "args": [
     {
      "name": "parser", 
      "typestr": "^{__CFXMLParser=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFXMLParserGetSourceURL": {
    "args": [
     {
      "name": "parser", 
      "typestr": "^{__CFXMLParser=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFURL=}"
    }
   }, 
   "CFXMLParserGetStatusCode": {
    "args": [
     {
      "name": "parser", 
      "typestr": "^{__CFXMLParser=}"
     }
    ], 
    "retval": {
     "typestr": "l"
    }
   }, 
   "CFXMLParserGetTypeID": {
    "args": [
     {
      "name": null, 
      "typestr": "v"
     }
    ], 
    "retval": {
     "typestr": "L"
    }
   }, 
   "CFXMLParserParse": {
    "args": [
     {
      "name": "parser", 
      "typestr": "^{__CFXMLParser=}"
     }
    ], 
    "retval": {
     "typestr": "Z"
    }
   }, 
   "CFXMLTreeCreateFromData": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "xmlData", 
      "typestr": "^{__CFData=}"
     }, 
     {
      "name": "dataSource", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "parseOptions", 
      "typestr": "L"
     }, 
     {
      "name": "versionOfNodes", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFTree=}"
    }
   }, 
   "CFXMLTreeCreateFromDataWithError": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "xmlData", 
      "typestr": "^{__CFData=}"
     }, 
     {
      "name": "dataSource", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "parseOptions", 
      "typestr": "L"
     }, 
     {
      "name": "versionOfNodes", 
      "typestr": "l"
     }, 
     {
      "name": "errorDict", 
      "typestr": "^^{__CFDictionary=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFTree=}"
    }
   }, 
   "CFXMLTreeCreateWithDataFromURL": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "dataSource", 
      "typestr": "^{__CFURL=}"
     }, 
     {
      "name": "parseOptions", 
      "typestr": "L"
     }, 
     {
      "name": "versionOfNodes", 
      "typestr": "l"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFTree=}"
    }
   }, 
   "CFXMLTreeCreateWithNode": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "node", 
      "typestr": "^{__CFXMLNode=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFTree=}"
    }
   }, 
   "CFXMLTreeCreateXMLData": {
    "args": [
     {
      "name": "allocator", 
      "typestr": "^{__CFAllocator=}"
     }, 
     {
      "name": "xmlTree", 
      "typestr": "^{__CFTree=}"
     }
    ], 
    "retval": {
     "already_cfretained": true, 
     "typestr": "^{__CFData=}"
    }
   }, 
   "CFXMLTreeGetNode": {
    "args": [
     {
      "name": "xmlTree", 
      "typestr": "^{__CFTree=}"
     }
    ], 
    "retval": {
     "typestr": "^{__CFXMLNode=}"
    }
   }
  }, 
  "informal_protocols": {}, 
  "literals": {
   "kCFCoreFoundationVersionNumber10_0": 196.4, 
   "kCFCoreFoundationVersionNumber10_0_3": 196.5, 
   "kCFCoreFoundationVersionNumber10_1": 226.0, 
   "kCFCoreFoundationVersionNumber10_1_1": 226.0, 
   "kCFCoreFoundationVersionNumber10_1_2": 227.2, 
   "kCFCoreFoundationVersionNumber10_1_3": 227.2, 
   "kCFCoreFoundationVersionNumber10_1_4": 227.3, 
   "kCFCoreFoundationVersionNumber10_2": 263.0, 
   "kCFCoreFoundationVersionNumber10_2_1": 263.1, 
   "kCFCoreFoundationVersionNumber10_2_2": 263.1, 
   "kCFCoreFoundationVersionNumber10_2_3": 263.3, 
   "kCFCoreFoundationVersionNumber10_2_4": 263.3, 
   "kCFCoreFoundationVersionNumber10_2_5": 263.5, 
   "kCFCoreFoundationVersionNumber10_2_6": 263.5, 
   "kCFCoreFoundationVersionNumber10_2_7": 263.5, 
   "kCFCoreFoundationVersionNumber10_2_8": 263.5, 
   "kCFCoreFoundationVersionNumber10_3": 299.0, 
   "kCFCoreFoundationVersionNumber10_3_1": 299.0, 
   "kCFCoreFoundationVersionNumber10_3_2": 299.0, 
   "kCFCoreFoundationVersionNumber10_3_3": 299.3, 
   "kCFCoreFoundationVersionNumber10_3_4": 299.31, 
   "kCFCoreFoundationVersionNumber10_3_5": 299.31, 
   "kCFCoreFoundationVersionNumber10_3_6": 299.32, 
   "kCFCoreFoundationVersionNumber10_3_7": 299.33, 
   "kCFCoreFoundationVersionNumber10_3_8": 299.33, 
   "kCFCoreFoundationVersionNumber10_3_9": 299.35, 
   "kCFCoreFoundationVersionNumber10_4": 368.0, 
   "kCFCoreFoundationVersionNumber10_4_1": 368.1, 
   "kCFCoreFoundationVersionNumber10_4_10": 368.28, 
   "kCFCoreFoundationVersionNumber10_4_11": 368.31, 
   "kCFCoreFoundationVersionNumber10_4_2": 368.11, 
   "kCFCoreFoundationVersionNumber10_4_3": 368.18, 
   "kCFCoreFoundationVersionNumber10_4_4_Intel": 368.26, 
   "kCFCoreFoundationVersionNumber10_4_4_PowerPC": 368.25, 
   "kCFCoreFoundationVersionNumber10_4_5_Intel": 368.26, 
   "kCFCoreFoundationVersionNumber10_4_5_PowerPC": 368.25, 
   "kCFCoreFoundationVersionNumber10_4_6_Intel": 368.26, 
   "kCFCoreFoundationVersionNumber10_4_6_PowerPC": 368.25, 
   "kCFCoreFoundationVersionNumber10_4_7": 368.27, 
   "kCFCoreFoundationVersionNumber10_4_8": 368.27, 
   "kCFCoreFoundationVersionNumber10_4_9": 368.28, 
   "kCFCoreFoundationVersionNumber10_5": 476.0, 
   "kCFCoreFoundationVersionNumber10_5_1": 476.0, 
   "kCFCoreFoundationVersionNumber10_5_2": 476.1, 
   "kCFCoreFoundationVersionNumber10_5_3": 476.13, 
   "kCFCoreFoundationVersionNumber10_5_4": 476.14, 
   "kCFCoreFoundationVersionNumber10_5_5": 476.15, 
   "kCFCoreFoundationVersionNumber10_5_6": 476.17, 
   "kCFCoreFoundationVersionNumber10_5_7": 476.18, 
   "kCFCoreFoundationVersionNumber10_5_8": 476.19, 
   "kCFCoreFoundationVersionNumber10_6": 550.0, 
   "kCFCoreFoundationVersionNumber10_6_1": 550.0, 
   "kCFCoreFoundationVersionNumber10_6_2": 550.13, 
   "kCFCoreFoundationVersionNumber10_6_3": 550.19
  }, 
  "structs": {
   "CFGregorianDate": {
    "fieldnames": [
     "year", 
     "month", 
     "day", 
     "hour", 
     "minute", 
     "second"
    ], 
    "special": true, 
    "typestr": "{_CFGregorianDate=lccccd}"
   }, 
   "CFGregorianUnits": {
    "fieldnames": [
     "years", 
     "months", 
     "days", 
     "hours", 
     "minutes", 
     "seconds"
    ], 
    "special": true, 
    "typestr": "{_CFGregorianUnits=llllld}"
   }, 
   "CFRange": {
    "fieldnames": [
     "location", 
     "length"
    ], 
    "special": true, 
    "typestr": "{_CFRange=ll}"
   }, 
   "CFSocketSignature": {
    "fieldnames": [
     "protocolFamily", 
     "socketType", 
     "protocol", 
     "address"
    ], 
    "special": true, 
    "typestr": "{_CFSocketSignature=lll^{__CFData=}}"
   }, 
   "CFStreamError": {
    "fieldnames": [
     "domain", 
     "error"
    ], 
    "special": true, 
    "typestr": "{_CFStreamError=ll}"
   }, 
   "CFStringInlineBuffer": {
    "fieldnames": [
     "buffer", 
     "theString", 
     "directBuffer", 
     "rangeToBuffer", 
     "bufferedRangeStart", 
     "bufferedRangeEnd"
    ], 
    "special": true, 
    "typestr": "{_CFStringInlineBuffer=[64T]^{__CFString=}^T{_CFRange=ll}ll}"
   }, 
   "CFSwappedFloat32": {
    "fieldnames": [
     "v"
    ], 
    "special": true, 
    "typestr": "{_CFSwappedFloat32=I}"
   }, 
   "CFSwappedFloat64": {
    "fieldnames": [
     "v"
    ], 
    "special": true, 
    "typestr": "{_CFSwappedFloat64=Q}"
   }, 
   "CFUUIDBytes": {
    "fieldnames": [
     "byte0", 
     "byte1", 
     "byte2", 
     "byte3", 
     "byte4", 
     "byte5", 
     "byte6", 
     "byte7", 
     "byte8", 
     "byte9", 
     "byte10", 
     "byte11", 
     "byte12", 
     "byte13", 
     "byte14", 
     "byte15"
    ], 
    "special": true, 
    "typestr": "{_CFUUIDBytes=CCCCCCCCCCCCCCCC}"
   }, 
   "CFXMLAttributeDeclarationInfo": {
    "fieldnames": [
     "attributeName", 
     "typeString", 
     "defaultString"
    ], 
    "special": true, 
    "typestr": "{_CFXMLAttributeDeclarationInfo=^{__CFString=}^{__CFString=}^{__CFString=}}"
   }, 
   "CFXMLAttributeListDeclarationInfo": {
    "fieldnames": [
     "numberOfAttributes", 
     "attributes"
    ], 
    "special": true, 
    "typestr": "{_CFXMLAttributeListDeclarationInfo=l^{_CFXMLAttributeDeclarationInfo=^{__CFString=}^{__CFString=}^{__CFString=}}}"
   }, 
   "CFXMLDocumentInfo": {
    "fieldnames": [
     "sourceURL", 
     "encoding"
    ], 
    "special": true, 
    "typestr": "{_CFXMLDocumentInfo=^{__CFURL=}L}"
   }, 
   "CFXMLDocumentTypeInfo": {
    "fieldnames": [
     "externalID"
    ], 
    "special": true, 
    "typestr": "{_CFXMLDocumentTypeInfo={_CFXMLExternalID=^{__CFURL=}^{__CFString=}}}"
   }, 
   "CFXMLElementInfo": {
    "fieldnames": [
     "attributes", 
     "attributeOrder", 
     "isEmpty", 
     "_reserved"
    ], 
    "special": true, 
    "typestr": "{_CFXMLElementInfo=^{__CFDictionary=}^{__CFArray=}Z[3c]}"
   }, 
   "CFXMLElementTypeDeclarationInfo": {
    "fieldnames": [
     "contentDescription"
    ], 
    "special": true, 
    "typestr": "{_CFXMLElementTypeDeclarationInfo=^{__CFString=}}"
   }, 
   "CFXMLEntityInfo": {
    "fieldnames": [
     "entityType", 
     "replacementText", 
     "entityID", 
     "notationName"
    ], 
    "special": true, 
    "typestr": "{_CFXMLEntityInfo=l^{__CFString=}{_CFXMLExternalID=^{__CFURL=}^{__CFString=}}^{__CFString=}}"
   }, 
   "CFXMLEntityReferenceInfo": {
    "fieldnames": [
     "entityType"
    ], 
    "special": true, 
    "typestr": "{_CFXMLEntityReferenceInfo=l}"
   }, 
   "CFXMLExternalID": {
    "fieldnames": [
     "systemID", 
     "publicID"
    ], 
    "special": true, 
    "typestr": "{_CFXMLExternalID=^{__CFURL=}^{__CFString=}}"
   }, 
   "CFXMLNotationInfo": {
    "fieldnames": [
     "externalID"
    ], 
    "special": true, 
    "typestr": "{_CFXMLNotationInfo={_CFXMLExternalID=^{__CFURL=}^{__CFString=}}}"
   }, 
   "CFXMLProcessingInstructionInfo": {
    "fieldnames": [
     "dataString"
    ], 
    "special": true, 
    "typestr": "{_CFXMLProcessingInstructionInfo=^{__CFString=}}"
   }
  }
 }, 
 "framework": "CoreFoundation", 
 "headers": [
  "CFArray.h", 
  "CFAttributedString.h", 
  "CFBag.h", 
  "CFBase.h", 
  "CFBinaryHeap.h", 
  "CFBitVector.h", 
  "CFBundle.h", 
  "CFByteOrder.h", 
  "CFCalendar.h", 
  "CFCharacterSet.h", 
  "CFData.h", 
  "CFDate.h", 
  "CFDateFormatter.h", 
  "CFDictionary.h", 
  "CFError.h", 
  "CFFileDescriptor.h", 
  "CFLocale.h", 
  "CFMachPort.h", 
  "CFMessagePort.h", 
  "CFNotificationCenter.h", 
  "CFNumber.h", 
  "CFNumberFormatter.h", 
  "CFPlugIn.h", 
  "CFPreferences.h", 
  "CFPropertyList.h", 
  "CFRunLoop.h", 
  "CFSet.h", 
  "CFSocket.h", 
  "CFStream.h", 
  "CFString.h", 
  "CFStringEncodingExt.h", 
  "CFStringTokenizer.h", 
  "CFTimeZone.h", 
  "CFTree.h", 
  "CFURL.h", 
  "CFURLAccess.h", 
  "CFURLEnumerator.h", 
  "CFUUID.h", 
  "CFUserNotification.h", 
  "CFXMLNode.h", 
  "CFXMLParser.h"
 ], 
 "release": "10.7.3", 
 "sdk": "/Developer/SDKs/MacOSX10.6.sdk"
}
