# objective.metada exceptions file, see its document
# for information on how to update this file.
{
 "definitions": {
  "enum": {
    "kCLErrorGeocodeFoundNoResult": { "ignore": true },
    "kCLErrorGeocodeCanceled": { "ignore": true }
  },
  "classes": {
   "CLGeocoder": {
     "methods": [
        {
	  "selector": "geocodeAddressDictionary:completionHandler:",
	  "class_method": false,
	  "args": {
	     "1": {
	        "callable": {
		   "arguments": {
		      "0": { "typestr": "^v" },
		      "1": { "typestr": "@" },
		      "2": { "typestr": "@" }
		   },
		   "retval": { "typestr": "v" }
		}
	     }
	  }
	},
        {
	  "selector": "geocodeAddressString:completionHandler:",
	  "class_method": false,
	  "args": {
	     "1": {
	        "callable": {
		   "arguments": {
		      "0": { "typestr": "^v" },
		      "1": { "typestr": "@" },
		      "2": { "typestr": "@" }
		   },
		   "retval": { "typestr": "v" }
		}
	     }
	  }
	},
	{
          "selector": "geocodeAddressString:inRegion:completionHandler:",
	  "class_method": false,
	  "args": {
	     "2": {
	        "callable": {
		   "arguments": {
		      "0": { "typestr": "^v" },
		      "1": { "typestr": "@" },
		      "2": { "typestr": "@" }
		   },
		   "retval": { "typestr": "v" }
		}
	     }
	  }
	},
        {
	  "selector": "reverseGeocodeLocation:completionHandler:",
	  "class_method": false,
	  "args": {
	     "1": {
	        "callable": {
		   "arguments": {
		      "0": { "typestr": "^v" },
		      "1": { "typestr": "@" },
		      "2": { "typestr": "@" }
		   },
		   "retval": { "typestr": "v" }
		}
	     }
	  }
	}
     ]
   },
   "CLLocation": {
    "methods": [
     {
      "args": {
       "0": {
        "type_override": "{_CLLocationCoordinate2D=dd}"
       }
      }, 
      "class_method": false, 
      "selector": "initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:"
     }, 
     {
      "class_method": false, 
      "retval": {
       "type_override": "{_CLLocationCoordinate2D=dd}"
      }, 
      "selector": "coordinate"
     }
    ]
   }, 
   "CLLocationManager": {
    "methods": [
     {
      "class_method": true, 
      "retval": {
       "type_override": "Z"
      }, 
      "selector": "locationServicesEnabled"
     }
    ]
   }
  }, 
  "formal_protocols": {}, 
  "functions": {}, 
  "informal_protocols": {}
 }
}
